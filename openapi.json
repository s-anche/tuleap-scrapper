{
  "swagger": "2.0",
  "host": "tuleap.net",
  "basePath": "\/api",
  "produces": ["application\/json", "application\/xml"],
  "consumes": ["application\/json", "application\/xml"],
  "info": { "version": "16.9.99.133-1", "title": "Tuleap API" },
  "paths": {
    "\/projects": {
      "post": {
        "operationId": "create\\Tuleap\\Project\\REST\\v1\\ProjectResource",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "dry_run",
            "type": "boolean",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "post_representation",
            "description": "shortname  \ndescription  \nlabel  \nis_public  \nallow_restricted  \ntemplate_id  \nxml_template_name  \ncategories  \nfields  \nfrom_archive  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\ProjectPostRepresentation"
            }
          }
        ],
        "summary": "Creates a new Project \ud83d\udd10",
        "description": "Creates a new project in Tuleap. <br> <br> Here is an example of JSON content to ask for a project creation with a Tuleap project template: <br> <pre> {<br> &nbsp; \"shortname\": \"project-shortname\",<br> &nbsp; \"description\": \"Project Description\",<br> &nbsp; \"label\": \"Project Label\",<br> &nbsp; \"is_public\": true,<br> &nbsp; \"allow_restricted\": true,<br> &nbsp; \"template_id\": 100,<br> &nbsp; \"categories\":[<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"category_id\": 4,<br> &nbsp;&nbsp;&nbsp; \"value_id\": 5<br> &nbsp;&nbsp; }<br> &nbsp;],<br> &nbsp; \"fields\": [<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"field_id\": 1,<br> &nbsp;&nbsp;&nbsp; \"value\": \"Project custom field value\"<br> &nbsp;&nbsp; }<br> &nbsp;]<br> }<br> <\/pre> Here is an example of JSON content to ask for a project creation with an XML template: <br> <pre> {<br> &nbsp; \"shortname\": \"project-shortname\",<br> &nbsp; \"description\": \"Project Description\",<br> &nbsp; \"label\": \"Project Label\",<br> &nbsp; \"is_public\": true,<br> &nbsp; \"allow_restricted\": true,<br> &nbsp; \"xml_template_name\": \"empty\",<br> &nbsp; \"categories\":[<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"category_id\": 4,<br> &nbsp;&nbsp;&nbsp; \"value_id\": 5<br> &nbsp;&nbsp; }<br> &nbsp;],<br> &nbsp; \"fields\": [<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"field_id\": 1,<br> &nbsp;&nbsp;&nbsp; \"value\": \"Project custom field value\"<br> &nbsp;&nbsp; }<br> &nbsp;]<br> }<br> <\/pre> Here is an example of JSON content to ask for a project creation with a Zip archive file:<br> You will get an URL where the file needs to be uploaded using the <a href=\"https:\/\/tus.io\/protocols\/resumable-upload.html\">tus resumable upload protocol<\/a> to validate the item creation. You will need to use the same authentication mechanism you used to call this endpoint. <br\/> <br\/> <pre> {<br> &nbsp; \"shortname\": \"project-shortname\",<br> &nbsp; \"description\": \"Project Description\",<br> &nbsp; \"label\": \"Project Label\",<br> &nbsp; \"is_public\": true,<br> &nbsp; \"allow_restricted\": true,<br> &nbsp; \"from_archive\": {<br> &nbsp;&nbsp;&nbsp;\"file_name\": \"hierarchy.zip\",<br> &nbsp;&nbsp;&nbsp;\"file_size\": 2838<br> &nbsp;},<br> &nbsp; \"categories\":[<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"category_id\": 4,<br> &nbsp;&nbsp;&nbsp; \"value_id\": 5<br> &nbsp;&nbsp; }<br> &nbsp;],<br> &nbsp; \"fields\": [<br> &nbsp;&nbsp; {<br> &nbsp;&nbsp;&nbsp; \"field_id\": 1,<br> &nbsp;&nbsp;&nbsp; \"value\": \"Project custom field value\"<br> &nbsp;&nbsp; }<br> &nbsp;]<br> }<br> <\/pre> If template_id is provided along others templates type, only template_id will be taken in account<br> If`xml_template_name` and `from_archive` are provided, only `xml_template_name` will be taken in account <br> <br> To see if your project creation data are correctly set, you can use the ?dry_run=true option. <br> All errors (if found) will be returned at once. <br> Note: dry run is not allowed when creating a project from an archive.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "204": { "description": "No Content" },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "429": { "description": "Too Many Requests" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "retrieve\\Tuleap\\Project\\REST\\v1\\ProjectResource",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get projects \u25d1",
        "description": "Get the public projects and the projects the current user is member of. <p> If current user is site administrator, then returns all active projects. <br> <br> ?query is optional. When filled, it is a json object with either: <ul> <li>a property \"shorname\" to search on shortname with exact match. Example: <pre>{\"shortname\": \"guinea-pig\"}<\/pre> <\/li> <li>a property \"is_member_of\" to search projects the current user is member of. Example: <pre>{\"is_member_of\": true}<\/pre> <\/li> <li>a property \"is_admin_of\" to search projects the current user is admin of. Example: <pre>{\"is_admin_of\": true}<\/pre> <\/li> <li>a property \"is_tracker_admin\" to search projects the current user is administrator of at least one tracker. Example: <pre>{\"is_tracker_admin\": true}<\/pre> <\/li> <li>a property \"with_status\" to search projects the current user is member of with a specific status. Example: <pre>{\"with_status\": \"deleted\"}<\/pre> <\/li> <li>a property \"with_time_tracking\" to search projects with enabled timetracking. Example: <pre>{\"with_time_tracking\": true}<\/pre> <\/li> <\/ul> <\/p> <p> <strong>\/!\\<\/strong> Please note that {\"is_member_of\": false} is not supported and will result in a 400 Bad Request error. <\/p> <p> <strong>\/!\\<\/strong> Please note that {\"is_tracker_admin\": false} is not supported and will result in a 400 Bad Request error. <\/p> <p> <strong>\/!\\<\/strong> Please note that querying with { \"with_status\" } will throw a 403 Forbidden Error if you are not member of the REST project management delegation. <\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\Project\\REST\\ProjectRepresentation" }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveId",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get project \u25d1",
        "description": "Get the definition of a given project\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceModifyProject",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "patch_resource",
            "description": "status  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\PATCHProjectRepresentation"
            }
          }
        ],
        "summary": "Project partial update \u25d1",
        "description": "Partial update of a Project <br\/> <br\/> This partial update allows a REST project manager to toggle the status of a given project from active to suspended and conversely. <br\/> <br\/> Example: <pre> { \"status\": \"suspended\" } <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/heartbeats": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveHeartbeats",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get heartbeats \u25d1",
        "description": "Get the latest activities of a given project",
        "responses": { "200": { "description": "Success", "schema": { "type": "string" } } },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/labels": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveLabels",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search particular label, if not used, returns all project labels",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get labels \u25d1",
        "description": "Get labels used by the project <p><code>query<\/code> parameter allows you to search for a particular label with wildcard<\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/LabelRepresentation" }
            }
          }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/user_groups": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveUserGroups",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of filtering options",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get user_groups \u25d1",
        "description": "Get the user_groups of a given project. <br\/> <strong>query<\/strong> is optional with json format: <pre>{\"with_system_user_groups\": true}<\/pre> With \"system_user_groups = true\", system user groups may be returned (if allowed by platform). Otherwise, these groupes are excluded.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\UserGroupRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "\\Tuleap\\REST\\Exceptions\\InvalidJsonException" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/svn": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveSvn",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Optional search string in json format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get svn \u25d1",
        "description": "Get info about project SVN repositories <br> <pre> \"repositories\": [{<br> &nbsp;\"id\" : 90,<br> &nbsp;\"project\": {...},<br> &nbsp;\"uri\": \"svn\/90\",<br> &nbsp;\"name\": \"repo\",<br> }<br> ...<br> ] <\/pre> <br\/> <br\/> ?query must be a json object to search on name with exact match: {\"name\": \"repository01\"}",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\REST\\v1\\SvnRepositoryRepresentationBase"
              }
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/banner": {
      "put": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceUpdateBanner",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "banner",
            "description": "message  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\BannerRepresentation" }
          }
        ],
        "summary": "Put banner \ud83d\udd10",
        "description": "Put the banner message to be displayed <br> <pre> {<br> &nbsp;\"message\": \"A message to be displayed on the project\"<br> }<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRemoveBanner",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete the banner message \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveBanner",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get banner \u25d1",
        "description": "Get the banner\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\BannerRepresentation" }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/header_background": {
      "put": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceUpdateBackgroundHeader",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "header_background_representation",
            "description": "identifier  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\HeaderBackgroundRepresentation"
            }
          }
        ],
        "summary": "Put a header background to the project \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRemoveHeaderBackground",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete the header background \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/phpwiki": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrievePhpWiki",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "pagename",
            "type": "string",
            "description": "Part of the pagename or the full pagename to search",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get PhpWiki pages \u25d1",
        "description": "Get info about project non empty PhpWiki pages.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\REST\\v1\\PhpWikiPageRepresentation" }
            }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/project_services": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveServices",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get services \u25d1",
        "description": "Get all services that are available in the projects.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\ServiceRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/extract_references": {
      "post": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceExtractReferences",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceExtractReferencesModel",
            "description": "**text** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\v1\\ProjectResourceExtractReferencesModel"
            }
          }
        ],
        "summary": "Extract references \u25d1",
        "description": "Return given text with detected Tuleap references converted into clickable links\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/3rd_party_integration_data": {
      "get": {
        "operationId": "\\Tuleap\\Project\\REST\\v1\\ProjectResourceRetrieveThirdPartyIntegrationData",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "currently_active_service",
            "type": "string",
            "description": "The currently active service name",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get data needed for third party integration \u25d1",
        "description": "This endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:project<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\ThirdPartyIntegrationDataRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:project"] }]
      }
    },
    "\/projects\/{id}\/docman_metadata": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\ProjectMetadataResourceRetrieveDocmanMetadata",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get docman metadata \u25d1",
        "description": "Get metadata of a particular project <br> <pre> \"metadata\": [{<br> &nbsp;\"id\" : 90,<br> &nbsp;\"is_required\": true,<br> &nbsp;\"is_multiple\": true,<br> &nbsp;\"allowed_list_values\": \"[ <br> &nbsp; &nbsp;id: 100,<br> &nbsp; &nbsp;value: \"text value\"<br> ]\",<br> }<br> ...<br> ] <\/pre> <br\/>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\REST\\v1\\ProjectConfiguredMetadataRepresentation"
              }
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/docman_service": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\Service\\DocmanServiceResourceRetrieveService",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get document manager service \u25d1",
        "description": "Gte information about the document manager for a given project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Service\\DocmanServiceRepresentation"
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/git": {
      "get": {
        "operationId": "tuleap\\Git\\REST\\v1\\GitProjectResourceRetrieveGit",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "type": "string",
            "default": "basic",
            "enum": ["basic", "all"],
            "description": "Whether you want to fetch permissions or just repository info",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "Filter repositories",
            "in": "query",
            "required": false
          },
          {
            "name": "order_by",
            "type": "string",
            "default": "push_date",
            "enum": ["push_date", "path"],
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get git \u25d1",
        "description": "Get info about project Git repositories. Repositories are returned ordered by last_push date, if there are no push yet, it's the creation date of the repository that is taken into account. <br> The total number of repositories returned by 'x-pagination-size' header corresponds to ALL repositories, including those you cannot view so you might retrieve a lower number of repositories than 'x-pagination-size'. <br> <br> With fields = 'basic', permissions is always set as <strong>NULL<\/strong> <br> <br> Basic example: <br> <br> <pre> \"repositories\": [{<br> &nbsp;\"id\" : 90,<br> &nbsp;\"uri\": \"git\/90\",<br> &nbsp;\"name\": \"repo\",<br> &nbsp;\"path\": \"project\/repo.git\",<br> &nbsp;\"description\": \"-- Default description --\",<br> &nbsp;\"permissions\": null<br> }<br> ...<br> ] <\/pre> <br> <br> All example: <br> <br> <pre> \"repositories\": [{<br> &nbsp;\"id\" : 90,<br> &nbsp;\"uri\": \"git\/90\",<br> &nbsp;\"name\": \"repo\",<br> &nbsp;\"path\": \"project\/repo.git\",<br> &nbsp;\"description\": \"-- Default description --\",<br> &nbsp;\"permissions\": {<br> &nbsp; \"read\": [<br> &nbsp; &nbsp;{<br> &nbsp; &nbsp; \"id\": \"116_2\",<br> &nbsp; &nbsp; \"uri\": \"user_groups\/116_2\",<br> &nbsp; &nbsp; \"label\": \"registered_users\",<br> &nbsp; &nbsp; \"users_uri\": \"user_groups\/116_2\/users\"<br> &nbsp; &nbsp;}<br> &nbsp; ],<br> &nbsp; \"write\": [<br> &nbsp; &nbsp;{<br> &nbsp; &nbsp; \"id\": \"116_3\",<br> &nbsp; &nbsp; \"uri\": \"user_groups\/116_3\",<br> &nbsp; &nbsp; \"label\": \"project_members\",<br> &nbsp; &nbsp; \"users_uri\": \"user_groups\/116_3\/users\"<br> &nbsp; &nbsp;}<br> &nbsp; ]<br> &nbsp; \"rewind\": [<br> &nbsp; &nbsp;{<br> &nbsp; &nbsp; \"id\": \"116_122\",<br> &nbsp; &nbsp; \"uri\": \"user_groups\/116_122\",<br> &nbsp; &nbsp; \"label\": \"admins\",<br> &nbsp; &nbsp; \"users_uri\": \"user_groups\/116_122\/users\"<br> &nbsp; &nbsp;}<br> &nbsp; ],<br> &nbsp;}<br> }<br> ...<br> ] <\/pre> <br> You can use <code>query<\/code> parameter in order to filter results. You can filter for example on scope or owner_id. By default, all repositories are returned. <table class=\"tlp-table\"> <thead> <tr> <th>Query example<\/th> <th>Description<\/th> <\/tr> <\/thead> <tbody> <tr> <td> `{ \"scope\": \"project\" }` <\/td> <td> return only project repositories. <\/td> <\/tr> <tr> <td> `{ \"scope\": \"individual\" }` <\/td> <td> return only forked repositories. <\/td> <\/tr> <tr> <td> `{ \"owner_id\": 123 }` <\/td> <td> return all repositories created by user with id `123`. <\/td> <\/tr> <tr> <td> `{ \"scope\": \"individual\", \"owner_id\": 123 }` <\/td> <td> return all repositories forked by user with id `123`. <\/td> <\/tr> <tr> <td> `{ \"allow_creation_of_branch\": \"acme\" }` <\/td> <td> return only repositories where current user can create `acme` branch. <\/td> <\/tr> <\/tbody> <\/table>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitRepositoryListRepresentation"
            }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/trackers": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ProjectTrackersResourceRetrieveTrackers",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "type": "string",
            "default": "full",
            "enum": ["full", "minimal"],
            "description": "Whether you want to fetch full or reference only representations",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "with_creation_semantic_check",
            "type": "array",
            "items": { "$ref": "#\/definitions\/string" },
            "description": "Include the list of reasons why an artifact cannot be created with only the given semantics",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get trackers \u25d1",
        "description": "Get the trackers of a given project. Fetching reference representations can be helpful if you encounter performance issues with complex trackers. <br\/> query is optional. When filled, it is a json object with a property \"is_tracker_admin\" or \"with_time_tracking\" to filter trackers. <br\/> <br\/> Example: <pre>{\"is_tracker_admin\": true}<\/pre> <pre>{\"with_time_tracking\": true}<\/pre> <br\/> <p> \u26a0 Please note that {\"is_tracker_admin\": false} is not supported and will result in a 400 Bad Request error. <\/p> <p> \u26a0 Notes about <code>with_creation_semantic_check<\/code> key: <ul> <li> Supported semantic: <ul> <li> Title <\/li> <\/ul> <\/li> <li> It's only available with the <strong>minimal<\/strong> representation, full representation will return 400 Bad Request error<\/li> <li> The <code>cannot_create_reasons<\/code> key in the result which contains the list of all reasons that prevent you from creating an artifact <\/li> <\/ul> <\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\TrackerRepresentation" }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/projects\/{id}\/plannings": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceRetrievePlannings",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get plannings \u25d1",
        "description": "Get the plannings of a given project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/milestones": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceRetrieveMilestones",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "type": "string",
            "default": "all",
            "enum": ["all", "slim"],
            "description": "Set of fields to return in the result",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"],
            "description": "In which order milestones are fetched. Default is asc",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get milestones \u25d1",
        "description": "Get the top milestones of a given project <p> $query parameter is optional, by default we return all milestones. If query={\"status\":\"open\"} then only open milestones are returned, if query={\"status\":\"closed\"} then only closed milestones are returned, if query={\"period\":\"future\"} then only milestones planned are returned and if query={\"period\":\"current\"} then only current milestones are returned. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/backlog": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceRetrieveBacklog",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get backlog \u25d1",
        "description": "Get the backlog items that can be planned in a top-milestone",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceUpdateBacklog",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceUpdateBacklogModel",
            "description": "**ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceUpdateBacklogModel"
            }
          }
        ],
        "summary": "Set order of all backlog items \u25d1",
        "description": "Order all backlog items in top backlog",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceModifyBacklog",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceModifyBacklogModel",
            "description": "order  \nadd  \nremove  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceModifyBacklogModel"
            }
          }
        ],
        "summary": "Re-order backlog items relative to others \u25d1",
        "description": "Re-order backlog items in top backlog relative to each other <br> Order example: <pre> \"order\": { \"ids\" : [123, 789, 1001], \"direction\": \"before\", \"compared_to\": 456 } <\/pre> <br> Resulting order will be: <pre>[\u2026, 123, 789, 1001, 456, \u2026]<\/pre> <br> Add example: <pre> \"add\": [ { \"id\": 34 \"remove_from\": 56 }, ... ] <\/pre> <br> Remove example (only available for project using explicit backlog management): <pre> \"Remove\": [ { \"id\": 34 }, ... ] <\/pre> <br> Will remove element id 34 from milestone 56 backlog",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "Internal Server Error" },
          "409": { "description": "Conflict" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/git_jenkins_servers": {
      "get": {
        "operationId": "tuleap\\HudsonGit\\REST\\v1\\GitJenkinsServersResourceRetrieveGitJenkinsServers",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all Git Jenkins servers that are available in the projects \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\HudsonGit\\REST\\v1\\JenkinsServerRepresentationCollection"
            }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/frs_packages": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\ProjectResourceRetrieveFRSPackages",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get FRS packages \u25d1",
        "description": "Get the list of packages in the project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\FRS\\REST\\v1\\PackageMinimalRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/frs_service": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\ProjectResourceRetrieveService",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get File Release System service \u25d1",
        "description": "Get metadata about the file release system service for a given project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/\\Tuleap\\FRS\\REST\\v1\\ServiceRepresentation" }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/labeled_items": {
      "get": {
        "operationId": "\\Tuleap\\Label\\REST\\v1\\ProjectResourceRetrieveLabeledItems",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search string in json format",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get Labeled Items \u25d1",
        "description": "\/!\\ This route is under construction Get labeled items of this project. <p><b>query<\/b> is a json object with:<\/p> <p>an array \"labels_id\" to search on all the given labels. When more than one label's id is provided, an AND operator is applied. <br> For example: { \"labels_id\": [ 10, 27] } will show all items that have both label 10 AND label 27. <br> Example: <pre>{\"labels_id\": [10,27]}<\/pre> <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/CollectionOfLabeledItemsRepresentation" }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/testmanagement_campaigns": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ProjectResourceRetrieveCampaigns",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get campaigns \u25d1",
        "description": "Get testing campaigns for a given project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/testmanagement_definitions": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ProjectResourceRetrieveDefinitions",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "report_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report from which to get the definitions",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get test definitions \ud83d\udd10",
        "description": "Get all test projects for a given project",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/mediawiki_standalone_permissions": {
      "get": {
        "operationId": "tuleap\\MediawikiStandalone\\REST\\v1\\MediawikiStandaloneProjectResourceRetrievePermissions",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get Mediawiki permissions of the current user \u25d1",
        "description": "This endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:mediawiki_standalone<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\MediawikiStandalone\\REST\\v1\\GetPermissionsRepresentation"
            }
          }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:mediawiki_standalone"] }]
      }
    },
    "\/projects\/{id}\/baselines": {
      "get": {
        "operationId": "tuleap\\Baseline\\REST\\ProjectBaselinesResourceRetrieveBaselines",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements to fetch (not authorized element are hidden, so you may get less element than requested)",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display (first position is 0). Baselines are sorted by snapshot date (most recent first)",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get baselines \u25d1",
        "description": "Get all the baselines of a given project. \/!\\ Some baseline may be filtered with security reason, but total count returned represents all available baselines INCLUDING the ones you're not authorized to see.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\BaselinesPageRepresentation"
            }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/baselines_comparisons": {
      "get": {
        "operationId": "tuleap\\Baseline\\REST\\ProjectComparisonsResourceRetrieveComparisons",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements to fetch (not authorized element are hidden, so you may get less element than requested)",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display (first position is 0). Comparisons are sorted by creation date (most recent first)",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get baselines comparisons \u25d1",
        "description": "Get all the baselines comparisons of a given project. \/!\\ Some comparisons may be filtered with security reason, but total count returned represents all available comparisons INCLUDING the ones you're not authorized to see.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\ComparisonsPageRepresentation"
            }
          },
          "500": { "description": "ForbiddenRestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/gitlab_repositories": {
      "get": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabProjectResourceRetrieveGitlabRepositories",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the project",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "GET Gitlab Integrations. \u25d1",
        "description": " \/!\\ This route is under construction. <br> Retrieve all Gitlab integration for a given project.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/program_plan": {
      "put": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProjectResourceUpdatePlan",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the program project",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "program_increment_tracker_id  \nplannable_tracker_ids  \npermissions  \nprogram_increment_label  \nprogram_increment_sub_label  \niteration  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutPlanRepresentation"
            }
          }
        ],
        "summary": "Define a program plan \ud83d\udd10",
        "description": "Define which tracker is program increment and which trackers can be planned in it. It also lets you define which user groups have permission to plan in program increments. <br\/> <strong>\"program_increment_label\"<\/strong> and <strong>\"program_increment_sub_label\"<\/strong> are optional. They will be used to set a custom label for Program Increment in the UI. <br\/> The following values are used by default: <pre> {<br\/> &nbsp;\"program_increment_label\": \"Program Increments\",<br\/> &nbsp;\"program_increment_sub_label\": \"program increment\"<br\/> } <\/pre> <br\/> <strong>\"iteration\"<\/strong> is optional. It permits to configure iteration tracker. <br\/> Example: <pre> {<br\/> &nbsp;\"iteration_tracker_id\": 115<br\/> } <\/pre> <br\/> <strong>\"iteration_label\"<\/strong> and <strong>\"iteration_sub_label\"<\/strong> are optional. They permit to set a custom label for iterations. <br\/> The following values are used by default: <pre> {<br\/> &nbsp;\"iteration_label\": \"Iterations\"<br\/> &nbsp;\"iteration_sub_label\": \"iteration\"<br\/> } <\/pre> <br\/>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/program_teams": {
      "put": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProjectResourceUpdateTeam",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the program project",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "team_ids  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutTeamsRepresentation"
            }
          }
        ],
        "summary": "Define team projects of a program \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/program_backlog": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProjectResourceRetrieveBacklog",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the program",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get program backlog \u25d1",
        "description": "Get the to be planned elements of a program",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProjectResourceModifyBacklog",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the program",
            "in": "path",
            "required": true
          },
          {
            "name": "backlog_patch_representation",
            "description": "add  \nremove  \nremove_from_program_increment_to_add_to_the_backlog  \norder  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\ProgramManagement\\REST\\v1\\BacklogPatchRepresentation"
            }
          }
        ],
        "summary": "Manipulate the program backlog \ud83d\udd10",
        "description": "Add or remove elements from program backlog <br> Add example: <pre> { \"add\": [ { \"id\": 34, } ], \"remove_from_program_increment_to_add_to_the_backlog\": true } <\/pre> <br> The feature with id 34 is removed from Program Increments linked and is added in program backlog. <br> <code>remove_from_program_increment_to_add_to_the_backlog<\/code> is not mandatory. If it's not set and the feature is linked to program increments, then feature will not be added to program backlog. <br><br> Reorder example: <pre> \"order\":{ \"ids\":[ 123 ], \"direction\":\"before\", \"compared_to\":456 }, <\/pre> The feature with id 123 is moved before feature with id 456. <code>direction<\/code> can be \"after\" or \"before\". <code>\"order\"<\/code> is not mandatory.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/projects\/{id}\/program_increments": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProjectResourceRetrieveProgramIncrements",
        "tags": ["projects"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the program",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get program increments \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tokens": {
      "post": {
        "operationId": "createTuleap\\Token\\REST\\v1\\TokenResource",
        "tags": ["tokens"],
        "parameters": [
          {
            "name": "createTuleap\\Token\\REST\\v1\\TokenResourceModel",
            "description": "**username** (required)  \n**password** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\Token\\REST\\v1\\TokenResourceModel"
            }
          }
        ],
        "summary": "Generate a token \ud83d\udd13",
        "description": "Generate a token for authentication for the current user<br\/> <b>The use of a personal access key should be preferred, consult the documentation for more information<\/b>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "operationId": "tuleap\\Token\\REST\\v1\\TokenResourceRemoveAll",
        "tags": ["tokens"],
        "parameters": [],
        "summary": "Expire all tokens \ud83d\udd10",
        "description": "Expire all tokens of the current user<br> <b>The use of a personal access key should be preferred, consult the documentation for more information<\/b>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tokens\/{id}": {
      "delete": {
        "operationId": "removeTuleap\\Token\\REST\\v1\\TokenResource",
        "tags": ["tokens"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the token",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Expire a token \ud83d\udd10",
        "description": "Expire a given token of the current user<br\/> <b>The use of a personal access key should be preferred, consult the documentation for more information<\/b>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/user_groups\/{id}": {
      "get": {
        "operationId": "tuleap\\Project\\REST\\v1\\UserGroupResourceRetrieveId",
        "tags": ["user_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the ugroup This should be one of two formats<br> - format: projectId_ugroupId for dynamic project user groups (project members...)<br> - format: ugroupId for all other groups (registered users, custom groups, ...)",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a user_group \u25d1",
        "description": "Get the definition of a given user_group\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:user_membership<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Project\\REST\\UserGroupRepresentation" }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:user_membership"] }]
      }
    },
    "\/user_groups\/{id}\/users": {
      "get": {
        "operationId": "tuleap\\Project\\REST\\v1\\UserGroupResourceRetrieveUsers",
        "tags": ["user_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the ugroup This should be one of two formats<br> - format: projectId_ugroupId for dynamic project user groups (project members...)<br> - format: ugroupId for all other groups (registered users, custom groups, ...)",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "User name to look for",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get users of a user_group \ud83d\udd10",
        "description": "Get the users of a given user_group <br> <br> ?query is optional. When filled, it is a json object: <ul> <li>With a property \"identifier\" to search if user_name is present in project_members. If user present it will retrieve its representation. Example: <pre>{\"identifier\": \"my_user_name\"}<\/pre> <\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/\\Tuleap\\User\\REST\\UserRepresentation" }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "tuleap\\Project\\REST\\v1\\UserGroupResourceUpdateUsers",
        "tags": ["user_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the ugroup This should be one of two formats<br> - format: projectId_ugroupId for dynamic project user groups (project members...)<br> - format: ugroupId for all other groups (registered users, custom groups, ...)",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\Project\\REST\\v1\\UserGroupResourceUpdateUsersModel",
            "description": "**user_references** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\Project\\REST\\v1\\UserGroupResourceUpdateUsersModel"
            }
          }
        ],
        "summary": "Define users of a user_group \ud83d\udd10",
        "description": "Define the users of a given user_group <br><br> Notes on the user reference format. It can be: <ul> <li>* {\"id\": user_id}<\/li> <li>* {\"username\": user_name}<\/li> <li>* {\"email\": user_email}<\/li> <li>* {\"ldap_id\": user_ldap_id}<\/li> <\/ul> <br><br> <p>Concerning the group <b>project members<\/b>, please note:<\/p> <ul> <li>Suspended users will be removed from the group if they are not provided<\/li> <li>Suspended users will not be added to the group, even if they are provided<\/li> <li>Project admins will not be removed from the group, even if they are provided<\/li> <\/ul> <p>Concerning the group <b>project administrators<\/b>, please note that the users will be added if needed to the project members group. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/user_groups": {
      "post": {
        "operationId": "tuleap\\Project\\REST\\v1\\UserGroupResourceCreateUgroups",
        "tags": ["user_groups"],
        "parameters": [
          {
            "name": "user_group_representation",
            "description": "project_id  \nshort_name  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\UserGroupPOSTRepresentation"
            }
          }
        ],
        "summary": "POST user_groups \ud83d\udd10",
        "description": "Create an empty user_group",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users\/{id}": {
      "get": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRetrieveId",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a user \u25d1",
        "description": "Get the definition of a given user. <pre> Note that when accessing this route without authentication certain properties<br> will not be returned in the response. <\/pre> <br> The user ID can be either: <ul> <li>an integer value to get this specific user information<\/li> <li>the \"self\" value to get our own user information<\/li> <\/ul>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceModifyUserDetails",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the user",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\User\\REST\\v1\\UserResourceModifyUserDetailsModel",
            "description": "**values** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\User\\REST\\v1\\UserResourceModifyUserDetailsModel"
            }
          }
        ],
        "summary": "Partial update of user details \ud83d\udd10",
        "description": "Things to take into account: <ol> <li>You don't need to set all 'values' of the user, you can restrict to the modified ones<\/li> <li>Possible fields are:\"email\", \"real_name\", \"username\" and \"status\" <li>Examples: To update a user status and username, the values must be an array: <pre> { \"status\" : \"S\" , \"username\": \"johnd\" } <\/pre> <\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users": {
      "get": {
        "operationId": "retrieveTuleap\\User\\REST\\v1\\UserResource",
        "tags": ["users"],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "minimum": 3,
            "description": "Search string (3 chars min in length)",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get users \u25d1",
        "description": "Get all users matching the query. <pre> Note that when accessing this route without authentication certain properties<br> will not be returned in the response. <\/pre> <br> ?query can be either: <ul> <li>a simple string, then it will search on \"real_name\" and \"username\" with wildcard<\/li> <li>a JSON object to search on username, login name or email with exact match: {\"username\": \"john_doe\"}, {\"loginname\": \"john_doe\"} or {\"email\": \"john.doe@example.com\"}<\/li> <\/ul> <pre> When using a JSON object, \"username\" is equivalent to \"loginname\" unless you are using an external auth provider such as an LDAP directory. \"username\" corresponds to the username of the Tuleap account, \"loginname\" corresponds to what the user uses to login on the Tuleap instance. <\/pre> <pre> When searching by email, you may get several matches. <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "$ref": "#\/definitions\/UserRepresentation" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users\/{id}\/membership": {
      "get": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRetrieveMembership",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          },
          {
            "name": "scope",
            "type": "string",
            "enum": ["project"],
            "description": "null $scope Scope to project permissions or platform permissions",
            "in": "query",
            "required": false
          },
          {
            "name": "format",
            "type": "string",
            "enum": ["id", "full"],
            "description": "null $format Special format to display the groups, only works with project scope",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the list of user groups the given user is member of \ud83d\udd10",
        "description": "The user ID can be either: <ul> <li>an integer value to get this specific user information<\/li> <li>the \"self\" value to get our own user information<\/li> <\/ul> This list of groups is displayed as an array of string: <pre> [ \"site_active\", \"%project-name%_project_members\", \"%project-name%_project_admin\", \"ug_101\" ... ] <\/pre> If you choose the \"project\" scope, any platform group will not be presented as a result (ie: site_active in this case\"). <br \/> <br \/> If you choose the \"id\" format, which is only compatible with \"project\" scope you will get an array of group ids instead: <pre> [ \"102_3\", \"102_4\", \"108\" ... ] <\/pre> If you choose the \"full\" format, which is only compatible with \"project\" scope you will get an array of group of user groups: <pre> [ <br\/> &nbsp; { <br\/> &nbsp;\"id\": \"106_3\", <br\/> &nbsp;\"uri\": \"user_groups\/106_3\", <br\/> &nbsp;\"label\": \"Project members\", <br\/> &nbsp;\"users_uri\": \"user_groups\/106_3\/users\", <br\/> &nbsp;\"short_name\": \"project_members\", <br\/> &nbsp;\"key\": \"ugroup_project_members_name_key\", <br\/> &nbsp;\"project\": { <br\/> &nbsp; &nbsp;\"id\": 114, <br\/> &nbsp; &nbsp; \"uri\": \"projects\/114\", <br\/> &nbsp; &nbsp;\"label\": \"test\", <br\/> &nbsp; &nbsp; \"shortname\": \"test\", <br\/> &nbsp; &nbsp; \"status\": \"active\", <br\/> &nbsp; &nbsp; \"access\": \"public\", <br\/> &nbsp; &nbsp; \"is_template\": false <br\/> &nbsp; &nbsp; } <br\/> &nbsp; }, <br\/> ... <br\/> ] <\/pre>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:user_membership<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/UserGroupRepresentation | string" }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:user_membership"] }]
      }
    },
    "\/users\/{id}\/preferences": {
      "get": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRetrievePreferences",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          },
          {
            "name": "key",
            "type": "string",
            "description": "Preference key",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Get a user preference \u25d1",
        "description": "The user ID can be either: <ul> <li>an integer value to get this specific user information<\/li> <li>the \"self\" value to get our own user information<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\REST\\v1\\UserPreferenceRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRemovePreferences",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          },
          {
            "name": "key",
            "type": "string",
            "description": "Preference key",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Delete a user preference \u25d1",
        "description": "The user ID can be either: <ul> <li>an integer value to get this specific user information<\/li> <li>the \"self\" value to get our own user information<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceModifyPreferences",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          },
          {
            "name": "preference",
            "description": "key  \nvalue  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\REST\\v1\\UserPreferenceRepresentation"
            }
          }
        ],
        "summary": "Set a user preference \u25d1",
        "description": "The user ID can be either: <ul> <li>an integer value to get this specific user information<\/li> <li>the \"self\" value to get our own user information<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\REST\\v1\\UserPreferenceRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users\/{id}\/history": {
      "get": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRetrieveHistory",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get the history of a user \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\REST\\v1\\UserHistoryRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceUpdateHistory",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the desired user",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\User\\REST\\v1\\UserResourceUpdateHistoryModel",
            "description": "**history_entries** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\User\\REST\\v1\\UserResourceUpdateHistoryModel"
            }
          }
        ],
        "summary": "Clear the history of a user \u25d1",
        "description": "Arbitrary manipulations of the history other than clear are not accepted.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users\/{id}\/access_keys": {
      "get": {
        "operationId": "tuleap\\User\\REST\\v1\\UserResourceRetrieveAccessKeys",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the user",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the access keys of a user \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\User\\AccessKey\\REST\\UserAccessKeyRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users\/{id}\/artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\Artifact\\UsersArtifactsResourceRetrieveArtifacts",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the desired user, as of today only `self` is allowed to get current user's artifacts",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "What artifacts to retrieve",
            "in": "query",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Offset in the collection",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 250,
            "maximum": 250,
            "description": "Limit of the collection being returned",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get user's artifacts \ud83d\udd10",
        "description": "There are 2 types of \"user's artifact\": * The artifact the user submitted (query={\"submitted_by\": true}) * The artifact the user is assigned to (query={\"assigned_to\": true}) And you can combine both.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/users\/{id}\/timetracking": {
      "get": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\User\\TimetrackingUserResourceRetrieveUserTimes",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "user's id",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get Timetracking times \ud83d\udd10",
        "description": "Get the times in all projects for the current user and a given time period <br><br> Notes on the query parameter <ol> <li>You have to specify a start_date and an end_date<\/li> <li>One day minimum between the two dates<\/li> <li>end_date must be greater than start_date<\/li> <li>Dates must be in ISO date format<\/li> <\/ol> Example of query: <br><br> { \"start_date\": \"2018-03-01T00:00:00+01\", \"end_date\" : \"2018-03-31T00:00:00+01\" }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/users_memberships": {
      "get": {
        "operationId": "retrieveTuleap\\User\\REST\\v1\\UserMembershipResource",
        "tags": ["users_memberships"],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "enum": ["with_ssh_key"],
            "description": "Criterion to filter the results",
            "in": "query",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "maximum": 1000,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Retrieve membership information for a set of users \ud83d\udd10",
        "description": "This resource will return user group membership information, i.e. all the groups to which each one belongs, for all users meeting the \"query\" criterion",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\User\\REST\\v1\\UserMembershipRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/project_fields": {
      "get": {
        "operationId": "retrieveTuleap\\REST\\v1\\ProjectFieldsResource",
        "tags": ["project_fields"],
        "parameters": [
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Retrieve fields for project creation \ud83d\udd10",
        "description": "This route return the fields which are available or mandatory on project creation",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\REST\\v1\\PaginatedProjectFieldRepresentations"
            }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/phpwiki\/{id}": {
      "get": {
        "operationId": "retrieveTuleap\\PhpWiki\\REST\\v1\\PhpWikiResource",
        "tags": ["phpwiki"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki page",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a PhpWiki page representation \u25d1",
        "description": "Get some information about a non empty PhpWiki page like urlencoded name, page id, versions ...",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PhpWiki\\REST\\v1\\PhpWikiPageFullRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/phpwiki\/{id}\/versions": {
      "get": {
        "operationId": "tuleap\\PhpWiki\\REST\\v1\\PhpWikiResourceRetrieveVersions",
        "tags": ["phpwiki"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki page",
            "in": "path",
            "required": true
          },
          {
            "name": "version_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the version to filter the collection. If version_id=0, we return the last version.",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Get a PhpWiki page version representation \u25d1",
        "description": "Get the content of a non empty PhpWiki page version. Actually it returns a collection filtered by the version_id.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\PhpWiki\\REST\\v1\\PhpWikiPageVersionFullRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/phpwiki\/{id}\/items_referencing_wiki_page": {
      "get": {
        "operationId": "tuleap\\PhpWiki\\REST\\v1\\PhpWikiResourceRetrieveItemsReferencingWikiPage",
        "tags": ["phpwiki"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki page",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get the list of items referencing the given wiki page \u25d1",
        "description": "Returns the list of items referencing the given wiki page",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\wiki\\Events\\ItemReferencingWikiPageRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/jwt": {
      "get": {
        "operationId": "retrieveTuleap\\JWT\\REST\\v1\\JWTResource",
        "tags": ["jwt"],
        "parameters": [],
        "summary": "To have a json web token \ud83d\udd13",
        "description": "",
        "responses": { "200": { "description": "Success", "schema": { "type": "string" } } }
      }
    },
    "\/system_event": {
      "get": {
        "operationId": "retrieveTuleap\\SystemEvent\\REST\\v1\\SystemEventResource",
        "tags": ["system_event"],
        "parameters": [
          {
            "name": "status",
            "type": "string",
            "enum": ["new", "done", "warning", "error", "running"],
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get system events \ud83d\udd10",
        "description": "Get all the system events",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\SystemEvent\\REST\\v1\\SystemEventRepresentation"
              }
            }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/access_keys": {
      "post": {
        "operationId": "createTuleap\\User\\AccessKey\\REST\\AccessKeyResource",
        "tags": ["access_keys"],
        "parameters": [
          {
            "name": "access_key",
            "description": "description  \nexpiration_date  \nscopes  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\AccessKey\\REST\\AccessKeyPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a new access key \ud83d\udd10",
        "description": "Example of expected format: <pre> {<br\/> \"description\": \"This is my API key\",<br\/> \"expiration_date\": \"2019-08-07T10:15:57+02:00\",<br\/> \"scopes\": [\"write:rest\"]<br\/> }<br\/> <\/pre> <br\/> The expiration date is optional. If provided, it must be formatted as an ISO-8601 date.<br\/> In addition, you cannot create an already expired access key. The scopes are optional, by default only read\/write access to the REST API is given.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\AccessKey\\REST\\UserAccessKeyCreationRepresentation"
            }
          },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/access_keys\/{id}": {
      "get": {
        "operationId": "retrieveTuleap\\User\\AccessKey\\REST\\AccessKeyResource",
        "tags": ["access_keys"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "ID of the access key or \"self\" to get information about the access key currently used",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get information about an access key \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\User\\AccessKey\\REST\\UserAccessKeyRepresentation"
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\User\\AccessKey\\REST\\AccessKeyResource",
        "tags": ["access_keys"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the access key to delete",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Revoke an access key \ud83d\udd10",
        "description": "",
        "responses": { "200": { "description": "Success", "schema": { "type": "string" } } },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/project_services\/{id}": {
      "put": {
        "operationId": "tuleap\\Project\\REST\\v1\\ServiceResourceUpdateId",
        "tags": ["project_services"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The id of the service",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "is_enabled  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\Service\\ServicePUTRepresentation"
            }
          }
        ],
        "summary": "Update service \u25d1",
        "description": "Update the service of a project. <p> For now, the service can only be enabled or disabled. Just set is_enabled to true or false according to your need. <\/p>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/invitations": {
      "post": {
        "operationId": "createTuleap\\InviteBuddy\\REST\\v1\\InvitationsResource",
        "tags": ["invitations"],
        "parameters": [
          {
            "name": "invitation",
            "description": "emails  \ncustom_message  \nproject_id  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\InviteBuddy\\REST\\v1\\InvitationPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a new invitation \ud83d\udd10",
        "description": "Example of expected format: <pre> {<br\/> \"emails\": [\"john.doe@example.com\", \u2026],<br\/> \"custom_message\": \"A custom message\",<br\/> }<br\/> <\/pre> <br\/> Mails that receive a failure while sending them will be returned in the <code>failures<\/code> field.<br\/> If every requested mails are in failure, then you will get an Error 500 instead.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\InviteBuddy\\REST\\v1\\InvitationPOSTResultRepresentation"
            }
          },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/banner": {
      "put": {
        "operationId": "tuleap\\Platform\\Banner\\REST\\v1\\BannerResourceUpdateBanner",
        "tags": ["banner"],
        "parameters": [
          {
            "name": "banner",
            "description": "message  \nimportance  \nexpiration_date  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Platform\\Banner\\REST\\v1\\BannerRepresentation"
            }
          }
        ],
        "summary": "Put banner \ud83d\udd10",
        "description": "Put the banner message to be displayed <br> <pre> {<br> &nbsp;\"message\": \"A message to be displayed on the platform\",<br> &nbsp;\"importance\": \"critical\"<br> }<br> <\/pre> <br> <pre> {<br> &nbsp;\"message\": \"A message to be displayed on the platform\",<br> &nbsp;\"importance\": \"critical\"<br> &nbsp;\"expiration_date\": \"2100-06-30T09:44:34+01:00\"<br> }<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Platform\\Banner\\REST\\v1\\BannerResourceRemoveBanner",
        "tags": ["banner"],
        "parameters": [],
        "summary": "Delete the banner message \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "tuleap\\Platform\\Banner\\REST\\v1\\BannerResourceRetrieveBanner",
        "tags": ["banner"],
        "parameters": [],
        "summary": "Get banner \u25d1",
        "description": "Get the banner",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Platform\\Banner\\REST\\v1\\BannerRepresentation"
            }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/version": {
      "get": {
        "operationId": "retrieveTuleap\\BuildVersion\\REST\\v1\\VersionResource",
        "tags": ["version"],
        "parameters": [],
        "summary": "Get the Tuleap build version \ud83d\udd13",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\BuildVersion\\REST\\v1\\VersionRepresentation"
            }
          }
        }
      }
    },
    "\/docman_items\/{id}": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanItemsResourceRetrieveId",
        "tags": ["docman_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "with_size",
            "type": "boolean",
            "description": "<b>Only for folders<\/b>. When true, the size of the folder in Bytes is returned in the representation. <div class=\"tlp-alert-info\"> Please note <ul> <li>The size of a folder is computed on the documents of type \"file\", that is to say files and embedded files.<\/li> <li>The number of files is the sum of the number of files, embedded files and folders.<\/li> <\/ul> <\/div>",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get item \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\ItemRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_items\/{id}\/docman_items": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanItemsResourceRetrieveDocumentItems",
        "tags": ["docman_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the content of a folder \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_items\/{id}\/parents": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanItemsResourceRetrieveParents",
        "tags": ["docman_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the parents of an item \u25d1",
        "description": "Get the parents of an item order by folder hierarchy Given Folder A > Folder B > Item Then sorted parents of Item are Folder A > Folder",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_items\/{id}\/logs": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanItemsResourceRetrieveLogs",
        "tags": ["docman_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the logs of an item \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_files\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanFilesResource",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanFilesResource",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_files\/{id}\/lock": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceCreateLock",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file you want to lock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Lock a specific file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceRemoveLock",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file you want to unlock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlock an already locked file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_files\/{id}\/versions": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceCreateVersions",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "version_title  \nchange_log  \nfile_properties  \nshould_lock_file  \napproval_table_action  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Files\\DocmanFileVersionPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a version of a file \ud83d\udd10",
        "description": "<pre> approval_table_action should be provided only if item has an existing approval table.<br> Possible values:<br> * copy: Creates an approval table based on the previous one<br> * reset: Reset the current approval table<br> * empty: No approbation needed for the new version of this document<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Files\\CreatedItemFilePropertiesRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" },
          "501": { "description": "Not Implemented" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceRetrieveVersions",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 100,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the versions of an item \u25d1",
        "description": "Versions are sorted from newest to oldest.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Files\\FileVersionRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_files\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceUpdateMetadata",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the file document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_files\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFilesResourceUpdatePermissions",
        "tags": ["docman_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of a file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanFoldersResource",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing folder \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanFoldersResource",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing folder and its content \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/files": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateFiles",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "files_representation",
            "description": "title  \ndescription  \nfile_properties  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Files\\DocmanPOSTFilesRepresentation"
            }
          }
        ],
        "summary": "Create new file document \u25d1",
        "description": "The format of the obsolescence date is : \"YYYY-MM-DD\" You will get an URL where the file needs to be uploaded using the <a href=\"https:\/\/tus.io\/protocols\/resumable-upload.html\">tus resumable upload protocol<\/a> to validate the item creation. You will need to use the same authentication mechanism you used to call this endpoint. <br\/> <br\/>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/folders": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateFolders",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "folder_representation",
            "description": "title  \ndescription  \nstatus  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Folders\\DocmanFolderPOSTRepresentation"
            }
          }
        ],
        "summary": "Create new folder \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/empties": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateEmpties",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "empty_representation",
            "description": "title  \ndescription  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Empties\\DocmanEmptyPOSTRepresentation"
            }
          }
        ],
        "summary": "Create new empty document \u25d1",
        "description": "The format of the obsolescence date is : \"YYYY-MM-DD\"",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/wikis": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateWikis",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "wiki_representation",
            "description": "title  \ndescription  \nwiki_properties  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Wiki\\DocmanWikiPOSTRepresentation"
            }
          }
        ],
        "summary": "Create new wiki document \u25d1",
        "description": "The format of the obsolescence date is : \"YYYY-MM-DD\"",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/embedded_files": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateEmbeds",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "embeds_representation",
            "description": "title  \ndescription  \nembedded_properties  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\DocmanEmbeddedPOSTRepresentation"
            }
          }
        ],
        "summary": "Create new embedded document \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/links": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateLinks",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "links_representation",
            "description": "title  \ndescription  \nlink_properties  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Links\\DocmanLinkPOSTRepresentation"
            }
          }
        ],
        "summary": "Create new link document \u25d1",
        "description": "The format of the obsolescence date is : \"YYYY-MM-DD\"",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/others": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceCreateOthers",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the parent folder",
            "in": "path",
            "required": true
          },
          {
            "name": "post_representation",
            "description": "title  \ndescription  \nstatus  \nobsolescence_date  \nmetadata  \npermissions_for_groups  \ntype  \ncopy  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Others\\DocmanOtherTypePOSTRepresentation"
            }
          }
        ],
        "summary": "Create new other type document \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceUpdateMetadata",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataFolderRepresentation"
            }
          }
        ],
        "summary": "Update the folder metadata and apply this changes to its children \u25d1",
        "description": "<pre> recursion possible options are<br> Possible values:<br> * none: changes only concerns folder<br> * folders: changes will apply only on children of type folder<br> * all_items: changes will apply for every single children regardless of its type<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_folders\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanFoldersResourceUpdatePermissions",
        "tags": ["docman_folders"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "apply_permissions_on_children  \ncan_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanFolderPermissionsForGroupsPUTRepresentation"
            }
          }
        ],
        "summary": "Update permissions of a folder \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_files\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResource",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResource",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the embedded file",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_files\/{id}\/lock": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceCreateLock",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the embedded file file you want to lock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Lock a specific embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceRemoveLock",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the embbeded file you want to unlock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlock an already locked embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_files\/{id}\/versions": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceRetrieveVersions",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get versions \u25d1",
        "description": "Get versions of an embedded file document Versions are sorted from newest to oldest.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedFileVersionRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceCreateVersions",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "version_title  \nchange_log  \nembedded_properties  \nshould_lock_file  \napproval_table_action  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\DocmanEmbeddedFileVersionPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a version of an embedded file document \ud83d\udd10",
        "description": "<pre> approval_table_action should be provided only if item has an existing approval table.<br> Possible values:<br> * copy: Creates an approval table based on the previous one<br> * reset: Reset the current approval table<br> * empty: No approbation needed for the new version of this document<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" },
          "501": { "description": "Not Implemented" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_files\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceUpdateMetadata",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the embedded file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the embedded file document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_files\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmbeddedFilesResourceUpdatePermissions",
        "tags": ["docman_embedded_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the embedded file document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of an embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_wikis\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanWikiResource",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing wiki document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanWikiResource",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki",
            "in": "path",
            "required": true
          },
          {
            "name": "delete_associated_wiki_page",
            "type": "boolean",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Delete an existing wiki document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_wikis\/{id}\/versions": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanWikiResourceCreateVersions",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "version_title  \nchange_log  \nwiki_properties  \nshould_lock_file  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Wiki\\DocmanWikiVersionPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a version of a wiki document \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" },
          "501": { "description": "Not Implemented" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_wikis\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanWikiResourceUpdateMetadata",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the wiki document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_wikis\/{id}\/lock": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanWikiResourceCreateLock",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki you want to lock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Lock a specific wiki document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanWikiResourceRemoveLock",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki you want to unlock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlock an already locked wiki document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_wikis\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanWikiResourceUpdatePermissions",
        "tags": ["docman_wikis"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the wiki",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of a wiki document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_links\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanLinksResource",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanLinksResource",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the link",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_links\/{id}\/lock": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceCreateLock",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the link you want to lock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Lock a specific link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceRemoveLock",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the link you want to unlock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlock an already locked link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_links\/{id}\/versions": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceCreateVersions",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "version_title  \nchange_log  \nlink_properties  \nshould_lock_file  \napproval_table_action  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Links\\DocmanLinkVersionPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a version of a link \ud83d\udd10",
        "description": "<pre> approval_table_action should be provided only if item has an existing approval table.<br> Possible values:<br> * copy: Creates an approval table based on the previous one<br> * reset: Reset the current approval table<br> * empty: No approbation needed for the new version of this document<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" },
          "501": { "description": "Not Implemented" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceRetrieveVersions",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the versions of a link \u25d1",
        "description": "Versions are sorted from newest to oldest.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Links\\LinkVersionRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_links\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceUpdateMetadata",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the link",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the link document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_links\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanLinksResourceUpdatePermissions",
        "tags": ["docman_links"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the link",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of a link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResource",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing empty document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResource",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the empty document",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing empty document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/lock": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceCreateLock",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the empty document you want to lock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Lock a specific empty document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceRemoveLock",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the empty document you want to unlock",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlock an already locked empty document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceUpdateMetadata",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the empty document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the empty document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/embedded_file": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceCreateEmbeddedFileVersion",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "content  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedPropertiesPOSTPATCHRepresentation"
            }
          }
        ],
        "summary": "Create an embedded file document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/link": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceCreateLinkVersion",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "link_url  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Links\\LinkPropertiesPOSTPATCHRepresentation"
            }
          }
        ],
        "summary": "Create a link document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/file": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceCreateFileVersion",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "file_name  \nfile_size  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Files\\FilePropertiesPOSTPATCHRepresentation"
            }
          }
        ],
        "summary": "Create a file document \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Files\\CreatedItemFilePropertiesRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_empty_documents\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanEmptyDocumentsResourceUpdatePermissions",
        "tags": ["docman_empty_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the empty document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of an empty document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_other_type_documents\/{id}": {
      "delete": {
        "operationId": "removeTuleap\\Docman\\REST\\v1\\DocmanOtherTypeDocumentsResource",
        "tags": ["docman_other_type_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the document",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an existing other type document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_other_type_documents\/{id}\/metadata": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanOtherTypeDocumentsResourceUpdateMetadata",
        "tags": ["docman_other_type_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the other type document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "status  \nobsolescence_date  \nowner_id  \nmetadata  \ntitle  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation"
            }
          }
        ],
        "summary": "Update the other type document metadata \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_other_type_documents\/{id}\/permissions": {
      "put": {
        "operationId": "tuleap\\Docman\\REST\\v1\\DocmanOtherTypeDocumentsResourceUpdatePermissions",
        "tags": ["docman_other_type_documents"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the document",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "can_read  \ncan_write  \ncan_manage  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation"
            }
          }
        ],
        "summary": "Update permissions of the document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_search\/{id}": {
      "post": {
        "operationId": "tuleap\\Docman\\REST\\v1\\SearchResourceSearch",
        "tags": ["docman_search"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the folder",
            "in": "path",
            "required": true
          },
          {
            "name": "search_representation",
            "description": "global_search  \nproperties  \nsort  \nlimit  \noffset  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\Search\\PostSearchRepresentation"
            }
          }
        ],
        "summary": "Search items \u25d1",
        "description": "Search paginated items in a folder. <p><b>Usage examples:<\/b><\/p> <ul> <li><p>All folders:<\/p> <pre> {<br> &nbsp; \"properties\": [ {\"name\": \"type\", \"value\": \"folder\"} ]<br> } <\/pre> <\/li> <li><p>All folders matching \"lorem\\*\" sorted by `title` ascending:<\/p> <pre> {<br> &nbsp; \"global_search\": \"lorem\\*\",<br> &nbsp; \"properties\": [ {\"name\": \"type\", \"value\": \"folder\"} ]<br> &nbsp; \"sort\": [ {\"name\": \"ttle\", \"order\": \"asc\"} ]<br> } <\/pre> <\/li> <li><p>All items matching \"lorem\\*\":<\/p> <pre> {<br> &nbsp; \"global_search\": \"lorem\\*\",<br> } <\/pre> <\/li> <li><p>All drafts, with a given custom text property matching \"lorem\\*\", created after 2022-01-30:<\/p> <pre> {<br> &nbsp; \"properties\": [<br> &nbsp; &nbsp; {\"name\": \"status\", \"value\": \"draft\"},<br> &nbsp; &nbsp; {\"name\": \"field_3\", \"value\": \"lorem\\*\"},<br> &nbsp; &nbsp; {\"name\": \"create_date\", \"value_date\": { \"date\": \"2022-01-30\", operator: \">\" } },<br> &nbsp; ]<br> } <\/pre> <\/li> <\/ul> <p><b>Note:<\/b> Global search will search in all text properties of document (but does not look inside the document).<\/p> <hr> <p><b>Allowed properties:<\/b><\/p> <table class=\"tlp-table\"> <thead> <tr> <th>Name<\/th> <th>Type<\/th> <th>Notes<\/th> <\/tr> <\/thead> <tbody> <tr> <td>`id`<\/td> <td>Number<\/td> <td>Exact match of the item id.<\/td> <\/tr> <tr> <td>`type`<\/td> <td>List<\/td> <td>Type of the item. Searchable types: `folder`, `file`, `embedded`, `wiki`, `link`, `empty`.<\/td> <\/tr> <tr> <td>`filename`<\/td> <td>Text<\/td> <td>Filename of the item.<\/td> <\/tr> <tr> <td>`title`<\/td> <td>Text<\/td> <td>Title of the item.<\/td> <\/tr> <tr> <td>`description`<\/td> <td>Text<\/td> <td>Description of the item.<\/td> <\/tr> <tr> <td>`owner`<\/td> <td>Text<\/td> <td>Owner of the item. Username or id.<\/td> <\/tr> <tr> <td>`create_date`<\/td> <td>Date<\/td> <td>Date of creation of the document.<\/td> <\/tr> <tr> <td>`update_date`<\/td> <td>Date<\/td> <td>Last update date of the document.<\/td> <\/tr> <tr> <td>`obsolescence_date`<\/td> <td>Date<\/td> <td>Obsolescence date of the document. May be disabled in the project.<\/td> <\/tr> <tr> <td>`status`<\/td> <td>List<\/td> <td>Status of the document. Searchable status: `none`, `draft`, `approved`, `rejected`. May be disabled in the project.<\/td> <\/tr> <tr> <td>`field_XXX`<\/td> <td>string | text | date | list<\/td> <td>Custom property defined by the project. The list of custom properties defined in the project is accessible via `projects\/:id\/docman_metadata`.<\/td> <\/tr> <\/tbody> <\/table> <hr> <p>`properties` is an array of:<\/p> <ul> <li>`{ \"name\": \"field_2\", \"value\": \"lorem\" }` for text and string.<\/li> <li>`{ \"name\": \"field_2\", \"value\": \"102\" }` for list, where 102 is the internal id of a value.<\/li> <li>`{ \"name\": \"field_2\", \"value_date\": { date: \"2022-01-30\", operator: \">\" } }` for date.<\/li> <\/ul> <hr> <p>`sort` is an array of:<\/p> <ul> <li>`{ \"name\": \"field_2\", \"order\": \"asc\" }` accepted value for `order` are `asc` and `desc`<\/li> <li>`Note:` the following columns cannot be sorted: `location`, `multi list custom properties` <\/li> <\/ul> <hr> <p>Search date format:<\/p> <ul> <li>`operator`: `<` | `>` | `=`<\/li> <li>`date`: YYYY-mm-dd <\/ul> <hr> <p>Allowed patterns for text properties (global_search, title, \u2026):<\/p> <ul> <li> `lorem` => exactly \"lorem\"<\/li> <li> `lorem*` => starting by \"lorem\"<\/li> <li> `*lorem` => finishing by \"lorem\"<\/li> <li> `*lorem*` => containing \"lorem\"<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_file_versions\/{id}": {
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\Files\\FileVersionsResourceRemoveId",
        "tags": ["docman_file_versions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete version \ud83d\udd10",
        "description": "Delete a version of a file. Please note that the last version of a file cannot be deleted.",
        "responses": { "200": { "description": "Success", "schema": { "type": "string" } } },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_file_versions\/{id}": {
      "delete": {
        "operationId": "tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedFileVersionsResourceRemoveId",
        "tags": ["docman_embedded_file_versions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete version \ud83d\udd10",
        "description": "Delete a version of an embedded file. Please note that the last version of an embedded file cannot be deleted.",
        "responses": { "200": { "description": "Success", "schema": { "type": "string" } } },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/docman_embedded_file_versions\/{id}\/content": {
      "get": {
        "operationId": "tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedFileVersionsResourceRetrieveContent",
        "tags": ["docman_embedded_file_versions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get content \u25d1",
        "description": "Get the content of a specific version of an embedded file.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\VersionContentRepresentation"
            }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}": {
      "get": {
        "operationId": "retrieve\\Tuleap\\Git\\REST\\v1\\RepositoryResource",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          }
        ],
        "summary": " \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitRepositoryRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModifyId",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModifyIdModel",
            "description": "migrate_to_gerrit  \ndisconnect_from_gerrit  \ndefault_branch  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModifyIdModel"
            }
          }
        ],
        "summary": "Patch Git repository \ud83d\udd10",
        "description": "Patch properties of a given Git repository <pre> \/!\\ This REST route is under construction and subject to changes \/!\\ <\/pre> <br> To migrate a repository in Gerrit: <pre> {<br> &nbsp;\"migrate_to_gerrit\": {<br\/> &nbsp;&nbsp;\"server\": 1,<br\/> &nbsp;&nbsp;\"permissions\": \"default\"<br\/> &nbsp;}<br\/> } <\/pre> <br> To disconnect a repository in Gerrit: <pre> {<br> &nbsp;\"disconnect_from_gerrit\": \"read-only\"<br\/> } <\/pre> <br> To change the default branch of a repository: <pre> {<br> &nbsp;\"default_branch\": \"dev\"<br\/> } <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git": {
      "post": {
        "operationId": "create\\Tuleap\\Git\\REST\\v1\\RepositoryResource",
        "tags": ["git"],
        "parameters": [
          {
            "name": "create\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModel",
            "description": "**project_id** (required)  \n**name** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/create\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModel"
            }
          }
        ],
        "summary": "Post \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id_or_path}\/statuses\/{commit_reference}": {
      "post": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceCreateCommitStatus",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id_or_path",
            "type": "string",
            "description": "Git repository id or Git repository path",
            "in": "path",
            "required": true
          },
          {
            "name": "commit_reference",
            "type": "string",
            "description": "Commit SHA-1",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceCreateCommitStatusModel",
            "description": "**state** (required)  \ntoken  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Git\\REST\\v1\\RepositoryResourceCreateCommitStatusModel"
            }
          }
        ],
        "summary": "Post a commit status \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/tree": {
      "get": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceRetrieveTree",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "ref",
            "type": "string",
            "description": "reference",
            "in": "query",
            "required": true
          },
          {
            "name": "path",
            "type": "string",
            "description": "path of the file",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the tree of a git repository. \u25d1",
        "description": " Returns the repository root content when the path is not given.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitTreeRepresentation" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/files": {
      "get": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceRetrieveFileContent",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "path_to_file",
            "type": "string",
            "description": "path of the file",
            "in": "query",
            "required": true
          },
          {
            "name": "ref",
            "type": "string",
            "default": "master",
            "description": "reference",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the content of a specific file from a git repository. \u25d1",
        "description": " The file size is in Bytes. <br\/> If no ref given, master is used.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitFileContentRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/branches": {
      "get": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceRetrieveBranches",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all the branches of a git repository \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Git\\REST\\v1\\GitBranchRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "post": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceCreateBranch",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "branch_name  \nreference  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitBranchPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a Git branch \ud83d\udd10",
        "description": "Create a branch in a git repository.<br\/> To create a branch, you have to provide the branch name and the reference (another branch name or a commit SHA1)",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitBranchRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/tags": {
      "get": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceRetrieveTags",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the git repository",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all the tags of a git repository \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/\\Tuleap\\Git\\REST\\v1\\GitTagRepresentation" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/commits\/{commit_reference}": {
      "get": {
        "operationId": "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceRetrieveCommits",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Git repository id",
            "in": "path",
            "required": true
          },
          {
            "name": "commit_reference",
            "type": "string",
            "description": "Commit reference (sha-1, branch etc...)",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a commit \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitCommitRepresentation" }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/pull_requests": {
      "get": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\RepositoryResourceRetrievePullRequests",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"],
            "description": "Sort order by pull request creation date",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull requests \ud83d\udd10",
        "description": "<p>Retrieve all git repository's pull requests.<\/p> <p>Pull requests are sorted by descending order of creation date.<\/p> <p>User is not able to see a pull request in a git repository where he is not able to READ.<\/p> <p> <code>$query<\/code> parameter is optional, by default we return all pull requests. <\/p> <p> You can filter on: <p> <b>Status<\/b>: <code>query={\"status\":\"open\"}<\/code> OR <code>query={\"status\":\"closed\"}<\/code>. When not specified, pull-requests with any statuses will be returned. <\/p> <p> <b>Author<\/b>: <code>query={\"authors\": [{\"id\": int}]}<\/code> where \"id\" is the user_id of the author. <\/p> <p> <b>Labels<\/b>: <code>query={\"labels\": [{\"id\": int}]}<\/code> where \"id\" is the id of the label. The search on labels is additive. It will retrieve only pull-requests having all the specified labels. <\/p> <p> <b>Search<\/b>: <code>query={\"search\": [{\"keyword\": string}]}<\/code> where \"keyword\" is the keyword to find in the pull-requests titles or descriptions. The search on keywords is additive. It will retrieve only pull-requests whose titles AND\/OR descriptions contain ALL the provided keywords. <\/p> <p> <b>Target branch<\/b>: <code>query={\"target_branches\": [{\"name\": string}]}<\/code> where \"name\" is the name of the target branch. <\/p> <p> <b>Reviewer<\/b>: <code>query={\"reviewers\": [{\"id\": int}]}<\/code> where \"id\" is the user_id of the reviewer. <\/p> <p> <b>Related to<\/b>: <code>query={\"related_to\": [{\"id\": int}]}<\/code> where \"id\" is the user_id of the user. <br>It will return all the pull-requests on which the user is author OR reviewer. <br>NOTE: You cannot combine the related_to filter with the authors or the reviewers filters. <\/p> <\/p> <p> All these filters are cumulative. For instance, <code>query={\"status\": \"closed\", \"authors\": [{\"id\": 102 }]}<\/code> will return all the closed pull-requests whose author is user 102. <\/p> <pre> \/!\\ PullRequest REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\RepositoryPullRequestRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/pull_requests_authors": {
      "get": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\RepositoryResourceRetrievePullRequestsAuthors",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull requests authors in a given git repository \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/git\/{id}\/pull_requests_reviewers": {
      "get": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\RepositoryResourceRetrievePullRequestsReviewers",
        "tags": ["git"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull requests reviewers in a given git repository \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gerrit": {
      "get": {
        "operationId": "retrieve\\Tuleap\\Git\\REST\\v1\\GerritResource",
        "tags": ["gerrit"],
        "parameters": [
          {
            "name": "for_project",
            "type": "integer",
            "format": "int64",
            "description": "The project ID to search in",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get Gerrit servers \ud83d\udd10",
        "description": "This route lists Gerrit servers for users that are allowed to see it:<br\/> <ul> <li> Site admins <\/li> <li> Project admins of projects that use Git <\/li> <li> Members of custom ugroups that are Git admins in one or more project <\/li> <\/ul> <br\/> <br\/> The route returns: <ul> <li>Only unrestricted Gerrit servers when no option provided<\/li> <li>All the project Gerrit servers available for the provided project<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GerritServerRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/trackers\/{id}": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceRetrieveId",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the tracker",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get tracker \u25d1",
        "description": "Get the definition of the given tracker\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "patch": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceModifyWorkflow",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the tracker.",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Partial update of a tracker. \ud83d\udd10",
        "description": " Only tracker administrators are allowed to patch trackers. To set the field transitions are based on: <pre> { \"workflow\": { \"set_transitions_rules\": { \"field_id\": 1234 } } } <\/pre> Enable or disable transition rules: <pre> { \"workflow\": { \"set_transitions_rules\": { \"is_used\": true } } } <\/pre> To remove the field transitions are based on (in order to set new field): <pre> { \"workflow\": { \"delete_transitions_rules\": true } } <\/pre> (*) This will remove all associated transitions and rules.<br \/> <br \/> \/!\\ \"set_transitions_rules\" and \"delete_transitions_rules\" cannot be used at the same time. <br\/> Deactivate legacy transitions: <pre> { \"workflow\": { \"is_legacy\": false } } <\/pre> <br\/> \/!\\ A workflow cannot be switched from standard to legacy. <br\/> Switch a workflow from simple to advanced mode: <pre> { \"workflow\": { \"is_advanced\": true } } <\/pre> <br\/> Switch a workflow from advanced to simple mode: <pre> { \"workflow\": { \"is_advanced\": false } } <\/pre> <br\/>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "Internal Server Error" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/trackers\/{id}\/tracker_reports": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceRetrieveReports",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the tracker",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 1000,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all reports of a given tracker \u25d1",
        "description": "All reports the user can see\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\ReportRepresentation" }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/trackers\/{id}\/artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceRetrieveArtifacts",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the tracker",
            "in": "path",
            "required": true
          },
          {
            "name": "values",
            "type": "string",
            "enum": ["", "all"],
            "description": "Which fields to include in the response. Default is no field values",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 1000,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "expert_query",
            "type": "string",
            "description": "Query with AND, OR, WITH|WITHOUT PARENT, WITH|WITHOUT CHILDREN, BETWEEN(), NOW(), IN(), NOT IN(), MYSELF(), parenthesis and Text, Integer, Float, Date, List fields <b>Does not work with query parameter<\/b>",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"],
            "description": "By default the artifacts are returned by Artifact ID ASC. Set this parameter to either ASC or DESC <b>Does not work with query and expert_query parameters<\/b>",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all artifacts of a given tracker \u25d1",
        "description": "Get all artifacts of a given tracker the user can view <br><br> Notes on the query parameter <ol> <li>It must be a URL-encoded JSON object<\/li> <li>The basic form of a property is [field_id|field_shortname] : [number|string|array(number)] <br>Example: {\"1258\" : \"bug\"} OR {\"title\" : \"bug\"} <\/li> <li>The complex form of a property is \"field_id\" : {\"operator\" : \"operator_name\", \"value\" : [number|string|array(number)]} <br>Example: {\"title\" : {\"operator\" : \"contains\", \"value\" : \"bug\"}} <\/li> <li>For text or number-like fields, the allowed operator is \"contains\". The value must be a string or number<\/li> <li>For list fields (like selectboxes or openlists), the allowed operator is \"contains\". The value(s) are bind_value_id<\/li> <li>For date-like fields, the allowed operators are [\"=\"|\"<\"|\">\"|\"between\"]. Dates must be in ISO date format<\/li> <li>Full example: {\"title\" : \"bug\", \"2458\" : {\"operator\" : \"between\", \"value\", [\"2014-02-25\", \"2014-03-25T00:00:00-05:00\"]}}<\/li> <\/ol> <br><br> Notes on the expert query parameter <ol> <li>You can use: AND, OR, WITH|WITHOUT PARENT, WITH|WITHOUT CHILDREN, BETWEEN(), NOW(), IN(), NOT IN(), MYSELF() parenthesis. <li>The basic form of a property is [field_shortname] = [string] <br>Example: sprint_name='s1' AND description='desc1' <\/li> <\/ol>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\ArtifactRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/trackers\/{id}\/parent_artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceRetrieveParentArtifacts",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 1000,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all possible parent artifacts for a given tracker \u25d1",
        "description": "Given a tracker, get all open artifacts of its parent tracker ordered by their artifact id in decreasing order. If the given tracker doesn't have a parent, it throws an error.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/ParentArtifactRepresentation" }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/trackers\/{id}\/used_artifact_links": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackersResourceRetrieveUserArtifactLinkTypes",
        "tags": ["trackers"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the tracker",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 1000,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all currently used artifact link types in a tracker \u25d1",
        "description": "This endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/UsedArtifactLinkTypeRepresentation" }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRetrieveArtifacts",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get artifacts \u25d1",
        "description": "<p> $query parameter expects following format <code>{\"id\":[x,y,z]}<\/code> where x, y and z are artifact ID. No more than 100 artifacts can be requested at once. <\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "post": {
        "operationId": "createTuleap\\Tracker\\REST\\v1\\ArtifactsResource",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "createTuleap\\Tracker\\REST\\v1\\ArtifactsResourceModel",
            "description": "**tracker** (required)  \nvalues  \nvalues_by_field  \nfrom_artifact  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\Tracker\\REST\\v1\\ArtifactsResourceModel"
            }
          }
        ],
        "summary": "Create artifact \ud83d\udd10",
        "description": "Create an artifact in a tracker <p>Things to take into account:<\/p> <ol> <li>You don't need to set all \"values\" of the artifact, you can pass only the ones you want to add, together with those that are required (depends on a given tracker's configuration). <\/li> <li> <pre> \/!\\ Only alphanumeric fields are taken into account when providing the \"values_by_field\" format! \/!\\ <\/pre> <br\/><br\/> You can create an artifact with the \"values_by_field\" format. Example: <pre> {<br\/> \"tracker\": {\"id\": 29},<br\/> \"values_by_field\": {<br\/> \"title\": {<br\/> \"value\": \"Lorem ipsum dolor sit amet\"<br\/> },<br\/> \"remaining_effort\": {<br\/> \"value\": 75<br\/> }<br\/> }<br\/> }<br\/> <\/pre> <br\/><br\/> <\/li> <li>Submitting with both \"values\" and \"values_by_field\" will result in an error.<\/li> <li>Note on files: To attach a file on a file field, the value must contain the ids of the attachements you want to add. Example: <pre> {<br\/> \"field_id\": 101,<br\/> \"value\": [41, 42]<br\/> }<br\/> <\/pre> <br\/> Note that 41 and 42 ids are provided by \/artifact_temporary_files routes. A user can only add their own temporary files. To create a temporary file, use POST on \/artifact_temporary_files. <\/li> <li> To link an artifact you can use the \"<strong>all_links<\/strong>\" key which contains a json array of artifact id you want to link with the wanted type. <\/br> Example: {\"id\": 11, \"direction\": \"reverse\", \"type\": \"my_link_type\"} with: <\/br> id: the artifact id to be linked<\/br> direction: the direction of the link between two artifact, the value must be \"<strong>forward<\/strong>\" or \"<strong>reverse<\/strong>\" <\/br> type: the artifact link type (e.g: _is_child) <\/br> \/!\\ The \"<strong>all_links<\/strong>\" key cannot be used at the same time as \"<strong>links<\/strong>\" and\/or \"<strong>parent<\/strong>\" key <\/br> <\/li> <li>Full Example: <pre> {<br\/> \"tracker\": {\"id\" : 54},<br\/> \"values\": [<br\/> &nbsp; {\"field_id\": 1806, \"value\" : \"my new artifact\"},<br\/> &nbsp; {\"field_id\": 1841, \"bind_value_ids\" : [254,598,148]},<br\/> &nbsp; { <br\/> &nbsp; \"field_id\": 543, \/\/ field id of the artifact link field<br\/> &nbsp; \"all_links\": <br\/> &nbsp; &nbsp; [ <br\/> &nbsp; &nbsp; &nbsp; {\"id\": 11, \"direction\": \"reverse\", \"type\": \"_is_child\"}, \/\/ artifact #11 will be the parent of the created artifact <br\/> &nbsp; &nbsp; &nbsp; {\"id\": 151, \"direction\": \"forward\", \"type\": \"_is_child\"} \/\/ artifact #151 will be the child of the created artifact <br\/> &nbsp; &nbsp; ] <br\/> &nbsp; } <br\/> ]<br\/> }<br\/> <\/pre> Notes about the artifact link in the previous payload:<\/br> \"<strong>Forward<\/strong>\" direction will create a direct link between the created artifact and the artifact #151<\/br> \"<strong>Reverse<\/strong>\" direction will create a reverse link between the created artifact and the artifact #11<\/br> <\/li> <\/ol> You can create artifact with <code>values<\/code>, <code>values_by_field<\/code>, or <code>from_artifact_id<\/code>. With <code>from_artifact_id<\/code>, the source artifact will be copied into the new one, even if they are not in the same tracker. For now it will only copy the semantic title. <pre> \/!\\ This Copy mechanism is under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artifacts\/{id}": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRetrieveId",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "values_format",
            "type": "string",
            "enum": ["", "collection", "by_field", "all"],
            "description": "The format of the value",
            "in": "query",
            "required": false
          },
          {
            "name": "tracker_structure_format",
            "type": "string",
            "default": "minimal",
            "enum": ["", "minimal", "complete"],
            "description": "The format of the structure",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get artifact \u25d1",
        "description": "Get the content of a given artifact. In addition to the artifact representation, it sets Last-Modified header with the last update date of the element. <br\/><br\/> The \"values_format\" parameter allows you to choose how the artifact's values will be formatted. When no \"values_format\" is provided, \"collection\" is chosen by default. Using \"all\" will return both formats at the same time. <br\/><br\/> <pre> \/!\\ Only alphanumeric fields are returned when choosing the \"by_field\" format! \/!\\ <\/pre> <br\/><br\/> Example with \"collection\": <pre> \"values\": [<br\/> {<br\/> \"field_id\": 1369,<br\/> \"type\": \"string\",<br\/> \"label\": \"Title\",<br\/> \"value\": \"Lorem ipsum dolor sit amet\"<br\/> },<br\/> {<br\/> \"field_id\": 1368,<br\/> \"type\": \"int\",<br\/> \"label\": \"Remaining Effort\",<br\/> \"value\": 1447<br\/> }<br\/> ]<br\/> <\/pre> <br\/><br\/> Example with \"by_field\": <pre> \"values_by_field\": {<br\/> \"title\": {<br\/> \"field_id\": 1369,<br\/> \"type\": \"string\",<br\/> \"label\": \"Title\",<br\/> \"value\": \"Lorem ipsum dolor sit amet\"<br\/> },<br\/> \"remaining_effort\": {<br\/> \"field_id\": 1368,<br\/> \"type\": \"int\",<br\/> \"label\": \"Remaining Effort\",<br\/> \"value\": 1447<br\/> }<br\/> }<br\/> <\/pre> <p>Text field values can be rendered as two formats: HTML or Text. Text field values rendered as HTML can have two source formats: HTML itself or CommonMark (Markdown).<br\/> Text field values that are already written in HTML have the following structure:<\/p> <pre><code>{<br\/> &quot;value&quot;: &quot;&lt;p&gt;HTML string&lt;\/p&gt;&quot;,<br\/> &quot;format&quot;: &quot;html&quot;<br\/> }<\/code><\/pre> <p>Text field values that are written in CommonMark format (Markdown) have an additional \"commonmark\" property that contains the source. Notice that they also have format \"html\":<\/p> <pre><code>{<br\/> &quot;value&quot;: &quot;&lt;p&gt;&lt;strong&gt;Markdown&lt;\/strong&gt; string&lt;\/p&gt;&quot;,<br\/> &quot;format&quot;: &quot;html&quot;,<br\/> &quot;commonmark&quot;: &quot;\\*\\*Markdown\\*\\* string&quot;<br\/> }<\/code><\/pre>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "delete": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRemoveArtifact",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete an artifact given its id \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Artifact Not found" },
          "429": { "description": "Too Many Requests (rate limit exceeded)" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceModifyArtifact",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "patch",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Tracker\\REST\\v1\\ArtifactPatchRepresentation"
            }
          }
        ],
        "summary": "Artifact partial update \ud83d\udd10",
        "description": "Partial update of an artifact. <br\/> <pre> \/!\\ REST route under construction and subject to changes \/!\\ <\/pre> <p>This route moves an artifact from one tracker to another based on field names.<\/p> <p> The conditions for a field value to be taken into account are: <ul> <li> The name of the field it comes from in the source tracker, and the name of the field it will be moved in, in the destination tracker, must be the same. For instance: OK: initial_effort -> initial_effort, KO: initial_effort -> initial_effort_1 <\/li> <li> The source and destination fields must have the same type, or have compatible types: text and string, float and integer. <\/li> <\/ul> <\/p> <p> Regarding values of the Selectbox, Multi Selectbox, Radio button, Checkbox, user\/user groups bound open lists fields and the \"Permissions on artifact\" field, the conditions are: <ul> <li>The source and destination fields must have the same name.<\/li> <li>The source and destination fields must have the same bind type (static values, users, user groups).<\/li> <li>The selected values must exist in the destination field (same name).<\/li> <\/ul> Note: When a value is selected in the source field, but cannot be found in the destination tracker, then field will be indicated as partially moved, and the unknown value will be lost. <\/p> <p>For Open list fields bound to static values: the selected values will be added to the destination field.<\/p> <p> To move an artifact: <pre> {<br> &nbsp;\"move\": {<br\/> &nbsp;&nbsp;\"tracker_id\": 1<br\/> &nbsp;}<br\/> } <\/pre> Limitations: <ul> <li>User must be admin of both source and target trackers in order to be able to move an artifact.<\/li> <li>Artifact must not be linked to an FRS release or be part of a Program.<\/li> <\/ul> <\/p> <p> A new dry-run mode has been added. It allows users to know which fields will be moved or not without doing the action. <br\/> To move an artifact in dry-run mode: <pre> {<br> &nbsp;\"move\": {<br\/> &nbsp;&nbsp;\"tracker_id\": 1<br\/> &nbsp;&nbsp;\"dry_run\": true<br\/> &nbsp;}<br\/> } <\/pre> <\/p> <p> Note for should_populate_feedback_on_success: this parameter is here to create (if true) a feedback in Tuleap UI in case of a successful move. The feedback will be displayed the next time the user browse Tuleap. If dry_run is true, then should_populate_feedback_on_success has no incidence since no move is really done. By default, should_populate_feedback_on_success is false, no feedback will be created. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\ArtifactPatchResponseRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Artifact Not found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceUpdateId",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceUpdateIdModel",
            "description": "**values** (required)  \ncomment  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\Tracker\\REST\\v1\\ArtifactsResourceUpdateIdModel"
            }
          }
        ],
        "summary": "Update artifact \ud83d\udd10",
        "description": "Things to take into account: <ol> <li>You will get an error (400) if there are no changes in submitted document<\/li> <li>You can re-use the same document provided by \/artifacts\/:id route section. Even if it contains more data. The extra data\/info will be ignored<\/li> <li>You don't need to set all 'values' of the artifact, you can restrict to the modified ones<\/li> <li>Examples:<\/li> <ol> <li>To update a file field, the value must be an array of the ids of the attachment you want to keep attached together with the new ones you want to attach. Each new file must correspond to valid \/artifact_temporary_files\/:id resource. A user can only add their own temporary files<\/li> <li>To empty a file field of its content, the value should be empty (e.g. value: [] or value: \"\").<\/li> <li>To link an artifact you can use the \"<strong>all_links<\/strong>\" key which contains a json array of artifact id you want to link with the wanted type. <\/br> Example: {\"id\": 11, \"direction\": \"reverse\", \"type\": \"my_link_type\"} with: <\/br> id: the artifact id to be linked<\/br> direction: the direction of the link between two artifact, the value must be \"<strong>forward<\/strong>\" or \"<strong>reverse<\/strong>\" <\/br> type: the artifact link type (e.g: _is_child) <\/br> \/!\\ The \"<strong>all_links<\/strong>\" key cannot be used at the same time as \"<strong>links<\/strong>\" and\/or \"<strong>parent<\/strong>\" key <\/br> Example when I update artifact #5 with following payload: <pre> { <br\/> &nbsp; \"values\": [{ <br\/> &nbsp; \"field_id\": 543, \/\/ field id of the artifact link field<br\/> &nbsp; \"all_links\": <br\/> &nbsp; &nbsp; [ <br\/> &nbsp; &nbsp; &nbsp; {\"id\": 11, \"direction\": \"reverse\", \"type\": \"_is_child\"}, \/\/ artifact #11 will be the parent of the given artifact #5 <br\/> &nbsp; &nbsp; &nbsp; {\"id\": 151, \"direction\": \"forward\", \"type\": \"_is_child\"} \/\/ artifact #151 will be the child of the given artifact #5 <br\/> &nbsp; &nbsp; ] <br\/> &nbsp; }] <br\/> } <\/pre> In previous payload:<\/br> \"<strong>Forward<\/strong>\" direction will create a link between artifacts like the following : art #151 will be a direct link in art #5<\/br> \"<strong>Reverse<\/strong>\" direction will create a link between artifacts like the following : art #11 will be a reverse link of art #5 <\/br> <\/li> <\/ol> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artifacts\/{id}\/links": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRetrieveArtifactLinkTypes",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get possible types for an artifact \u25d1",
        "description": "This endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\ArtifactLinkRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/artifacts\/{id}\/linked_artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRetrieveLinkedArtifacts",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "direction",
            "type": "string",
            "enum": ["forward", "reverse"],
            "description": "The artifact link direction",
            "in": "query",
            "required": true
          },
          {
            "name": "nature",
            "type": "string",
            "description": "The artifact link type to filter",
            "in": "query",
            "required": false
          },
          {
            "name": "output_format",
            "type": "string",
            "default": "nested",
            "enum": ["nested", "flat", "flat_with_semicolon_string_array"],
            "description": "Format of the response: nested (default) or a simplified and incomplete flat format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get all artifacts linked by type \u25d1",
        "description": "Get all the artifacts linked by type. If no type is provided, it will search linked artifacts with no type.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/artifacts\/{id}\/changesets": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceRetrieveArtifactChangesets",
        "tags": ["artifacts"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "type": "string",
            "default": "all",
            "enum": ["all", "comments"],
            "description": "Whether you want to fetch all fields or just comments",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"],
            "description": "By default the changesets are returned by Changeset Id ASC. Set this parameter to either ASC or DESC",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get changesets \u25d1",
        "description": "Get the changesets of a given artifact <br\/> <br\/> Comments can be rendered as two formats: HTML or Text. Comments rendered as HTML can have two source formats: HTML itself or CommonMark (Markdown).<br\/> Comments that are already written in HTML have the following structure: <pre><code>{<br\/> &quot;body&quot;: &quot;&lt;p&gt;HTML with art #123&lt;\/p&gt;&quot;,<br\/> &quot;post_processed_body&quot;: &quot;&lt;p&gt;HTML with &lt;a href=&quot;...&amp;aid=123&quot;&gt;art #123&lt;\/a&gt;&lt;\/p&gt;&quot;,<br\/> &quot;format&quot;: &quot;html&quot;<br\/> }<\/code><\/pre> <p>Comments that are written in CommonMark format (Markdown) have an additional \"commonmark\" property that contains the source. Notice that they also have format \"html\":<\/p> <pre><code>{<br\/> &quot;body&quot;: &quot;&lt;p&gt;&lt;strong&gt;Markdown&lt;\/strong&gt; with art #123&lt;\/p&gt;&quot;,<br\/> &quot;post_processed_body&quot;: &quot;&lt;p&gt;&lt;strong&gt;Markdown&lt;\/strong&gt; with &lt;a href=&quot;...&amp;aid=123&quot;&gt;art #123&lt;\/a&gt;&lt;\/p&gt;&quot;,<br\/> &quot;format&quot;: &quot;html&quot;,<br\/> &quot;commonmark&quot;: &quot;\\*\\*Markdown\\*\\* with art #123&quot;<br\/> }<\/code><\/pre> <p>\"post_processed_body\" will have its references (for example \"art #123\") converted to links.<\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\ChangesetRepresentation" }
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/artifact_files\/{id}": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactFilesResourceRetrieveId",
        "tags": ["artifact_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Where to start to read the file",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 1048576,
            "maximum": 1048576,
            "description": "How much to read the file",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get a chunk of a file \ud83d\udd10",
        "description": "A user can only access the attached files they can view.\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\FileDataRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/artifact_temporary_files": {
      "get": {
        "operationId": "retrieveTuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResource",
        "tags": ["artifact_temporary_files"],
        "parameters": [
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get files representation \ud83d\udd10",
        "description": "For now, only temporary files created by the user can be retrieved\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Tracker\\REST\\Artifact\\FileInfoRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "post": {
        "operationId": "createTuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResource",
        "tags": ["artifact_temporary_files"],
        "parameters": [
          {
            "name": "createTuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceModel",
            "description": "**name** (required)  \n**mimetype** (required)  \n**content** (required)  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceModel"
            }
          }
        ],
        "summary": "Create a temporary file \ud83d\udd10",
        "description": "Call this method to create a new file. To add new chunks, use PUT on \/artifact_temporary_files\/:id <p>Limitations:<\/p> <pre> * Size of each chunk cannot exceed 1MB<br> * Total size of temporary files cannot exceed a given quota. Default is 64MB, but it depends on the settings of <br> &nbsp; your platform. See X-QUOTA and X-DISK-USAGE custom headers to know the quota and your usage. <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\FileInfoRepresentation"
            }
          },
          "500": { "description": "Internal Server Error" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artifact_temporary_files\/{id}": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceRetrieveId",
        "tags": ["artifact_temporary_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the file",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Where to start to read the file",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 1048576,
            "maximum": 1048576,
            "description": "How much to read the file",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get a chunk of a file \ud83d\udd10",
        "description": "A user can only access their own temporary files\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "put": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceUpdateId",
        "tags": ["artifact_temporary_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The ID of the temporary artifact_file",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceUpdateIdModel",
            "description": "**content** (required)  \n**offset** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceUpdateIdModel"
            }
          }
        ],
        "summary": "Append a chunk to a temporary file (not attached to any artifact) \ud83d\udd10",
        "description": "Use this method to append a file chunk to any existing file created via POST on \/artifact_temporary_files <ol> <li>This method cannot be called on a file that is already referenced by an artifact <\/li> <li>The offset property is used by the server in order to detect error in the consistency of the data uploaded but it is not possible to upload chunks in the wrong order <\/li> <li>Only the user who created the temporary artifact_file can modify and view that file until it is attached to an artifact <\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\FileInfoRepresentation"
            }
          }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceRemoveId",
        "tags": ["artifact_temporary_files"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the file",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete a temporary file \ud83d\udd10",
        "description": "Use this method to delete a temporary file the user owns.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "Internal Server Error" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tracker_reports\/{id}": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ReportsResourceRetrieveId",
        "tags": ["tracker_reports"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report",
            "in": "path",
            "required": true
          },
          {
            "name": "with_unsaved_changes",
            "type": "boolean",
            "description": "Enable to take into account unsaved changes made to the report on your ongoing session",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get report \u25d1",
        "description": "Get the definition of the given report\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\ReportRepresentation" }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/tracker_reports\/{id}\/artifacts": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\ReportsResourceRetrieveArtifacts",
        "tags": ["tracker_reports"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report",
            "in": "path",
            "required": true
          },
          {
            "name": "with_unsaved_changes",
            "type": "boolean",
            "description": "Enable to take into account unsaved changes made to the report on your ongoing session",
            "in": "query",
            "required": false
          },
          {
            "name": "values",
            "type": "string",
            "enum": ["", "all", "from_table_renderer"],
            "description": "Which fields to include in the response. Default is no field values",
            "in": "query",
            "required": false
          },
          {
            "name": "table_renderer_id",
            "type": "integer",
            "format": "int64",
            "description": "null $table_renderer_id Which table renderer to use when values=from_table_renderer",
            "in": "query",
            "required": false
          },
          {
            "name": "output_format",
            "type": "string",
            "default": "nested",
            "enum": ["nested", "flat", "flat_with_semicolon_string_array"],
            "description": "Format of the response: nested (default) or a simplified and incomplete flat format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get artifacts \u25d1",
        "description": "Get artifacts matching criteria of a report. <p> By default it does not return the values of the fields for performance reasons. You can ask to include some specific values with the <strong>values<\/strong> parameter.<br> Eg: <ul> <li>\u2026?id=123&values=all \/\/add all fields values <li>\u2026?id=123&values=from_table_renderer \/\/add all fields selected in the table renderer of the report <li>\u2026?id=123&values= \/\/(empty string) do not add any field values <\/ul> <\/p> <p> \"from_table_renderer\" values option only work if there is only one table renderer in the report.<br\/> An error will be thrown if there is no or multiple table renderers with no specific choice.<br\/> <strong>Warning:<\/strong> Please note that artifact link field values are not exported in this value format. <\/p> <p> <strong>Warning:<\/strong> Please note the flat output_format contains a limited set of information and requires either values=all or values=from_table_renderer <\/p>\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\ArtifactRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/tracker_fields\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Tracker\\REST\\v1\\TrackerFieldsResource",
        "tags": ["tracker_fields"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the field",
            "in": "path",
            "required": true
          },
          {
            "name": "patch",
            "description": "new_values  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\REST\\v1\\TrackerFieldRepresentations\\TrackerFieldPatchRepresentation"
            }
          }
        ],
        "summary": "Partial update of a tracker field \ud83d\udd10",
        "description": "REST route to update a tracker field <br\/> <pre> \/!\\ REST route under construction and subject to changes \/!\\ <\/pre> <br\/> This partial update allows user to add new values to a simple list field (selectbox or radiobutton). <br\/> <br\/> To add a value: <pre> {<br> &nbsp;\"new_values\": [\"new01\", \"new02\"]<br\/> }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tracker_REST_FormElementRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tracker_fields\/{id}\/files": {
      "post": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\TrackerFieldsResourceCreateFiles",
        "tags": ["tracker_fields"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The id of the field",
            "in": "path",
            "required": true
          },
          {
            "name": "file_post_representation",
            "description": "name  \nfile_size  \nfile_type  \ndescription  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\FilePOSTRepresentation"
            }
          }
        ],
        "summary": "Create file \ud83d\udd10",
        "description": "Create a file in a File field so that it can be attached to an artifact later. Only File field allows this route. <br> After having uploaded the files, you need to update (or create) an artifact with the file ID you got from this endpoint.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\CreatedFileRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tracker_workflow_transitions": {
      "post": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceCreateTransition",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceCreateTransitionModel",
            "description": "**tracker_id** (required)  \n**from_id** (required)  \n**to_id** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceCreateTransitionModel"
            }
          }
        ],
        "summary": "Add a new transition for a tracker workflow \ud83d\udd10",
        "description": "<br>Params tracker id, source id and destination id are required. <br>Use 0 as source id for transitions from new artifact. (new artifact as destination does not exist)",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "\\User_LoginException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/tracker_workflow_transitions\/{id}": {
      "delete": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceRemoveTransition",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Transition id",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete a transition from a workflow \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "OrphanTransitionException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceModifyTransition",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Transition id",
            "in": "path",
            "required": true
          },
          {
            "name": "transition_conditions",
            "description": "authorized_user_group_ids  \nnot_empty_field_ids  \nis_comment_required  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\Workflow\\WorkflowTransitionPATCHRepresentation"
            }
          }
        ],
        "summary": "Patch a transition from a workflow \ud83d\udd10",
        "description": "<br \/>Parameter \"is_comment_required\" is not taken into account for transition from (New Artifact).",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "\\Rest_Exception_InvalidTokenException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceRetrieveTransition",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of transition",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a transition \ud83d\udd10",
        "description": "REST route to get a transition\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionRepresentation"
            }
          },
          "401": { "description": "I18NRestException" },
          "403": { "description": "I18NRestException" },
          "404": { "description": "I18NRestException" },
          "500": { "description": "OrphanTransitionException" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      }
    },
    "\/tracker_workflow_transitions\/{id}\/actions": {
      "get": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceRetrievePostActions",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of transition",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get all post actions of a transition \ud83d\udd10",
        "description": "REST route to get all post actions of a transition\n\n\nThis endpoint can be accessed with an OAuth 2.0 access token with the scope <strong>read:tracker<\/strong>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "\\Luracast\\Restler\\RestException" }
        },
        "security": [{ "api_access_key": [] }, { "oauth2": ["read:tracker"] }]
      },
      "put": {
        "operationId": "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceUpdatePostActions",
        "tags": ["tracker_workflow_transitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of transition",
            "in": "path",
            "required": true
          },
          {
            "name": "post_actions_representation",
            "description": "post_actions  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\Workflow\\PostActionsPUTRepresentation"
            }
          }
        ],
        "summary": "Update all post actions of a transition. \ud83d\udd10",
        "description": " <ul> <li>Actions without id will be created<\/li> <li>Actions with same id will be updated<\/li> <li>Other actions will be removed<\/li> <\/ul> Body sample : <pre> { <br\/> &nbsp; \"post_actions\": [ <br\/> &nbsp; &nbsp; { <br\/> &nbsp; &nbsp; &nbsp; \"id\": null, <br\/> &nbsp; &nbsp; &nbsp; \"type\": \"run_job\", <br\/> &nbsp; &nbsp; &nbsp; \"job_url\": \"http:\/\/example.com\" <br\/> &nbsp; &nbsp; }, <br\/> &nbsp; &nbsp; { <br\/> &nbsp; &nbsp; &nbsp; \"id\": 1, <br\/> &nbsp; &nbsp; &nbsp; \"type\": \"set_field_value\", <br\/> &nbsp; &nbsp; &nbsp; \"field_type\": \"date\", <br\/> &nbsp; &nbsp; &nbsp; \"field_id\": 43, <br\/> &nbsp; &nbsp; &nbsp; \"value\": \"current\" <br\/> &nbsp; &nbsp; }, <br\/> &nbsp; &nbsp; { <br\/> &nbsp; &nbsp; &nbsp; \"id\": 2, <br\/> &nbsp; &nbsp; &nbsp; \"type\": \"set_field_value\", <br\/> &nbsp; &nbsp; &nbsp; \"field_type\": \"int\", <br\/> &nbsp; &nbsp; &nbsp; \"field_id\": 44, <br\/> &nbsp; &nbsp; &nbsp; \"value\": 3 <br\/> &nbsp; &nbsp; }, <br\/> &nbsp; &nbsp; { <br\/> &nbsp; &nbsp; &nbsp; \"id\": 2, <br\/> &nbsp; &nbsp; &nbsp; \"type\": \"set_field_value\", <br\/> &nbsp; &nbsp; &nbsp; \"field_type\": \"float\", <br\/> &nbsp; &nbsp; &nbsp; \"field_id\": 45, <br\/> &nbsp; &nbsp; &nbsp; \"value\": 1.23 <br\/> &nbsp; &nbsp; } <br\/> &nbsp; ] <br\/> } <br\/> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/milestones": {
      "put": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateSubmilestones",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateSubmilestonesModel",
            "description": "**ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateSubmilestonesModel"
            }
          }
        ],
        "summary": "Put children in a given milestone \ud83d\udd10",
        "description": "Put the new children of a given milestone.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifySubmilestones",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifySubmilestonesModel",
            "description": "add  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifySubmilestonesModel"
            }
          }
        ],
        "summary": "Patch children of a given milestone \ud83d\udd10",
        "description": "Add example: <pre> { \"add\": [ { \"id\": 34 }, { \"id\": 35 } ... ] } <\/pre> Will add the submilestones 34 and 35 to the milestone",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveMilestones",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "fields",
            "type": "string",
            "default": "all",
            "enum": ["all", "slim"],
            "description": "Set of fields to return in the result",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"],
            "description": "In which order milestones are fetched. Default is asc",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get sub-milestones \u25d1",
        "description": "Get the sub-milestones of a given milestone. A sub-milestone is a decomposition of a milestone (for instance a Release has Sprints as submilestones) <p> $query parameter is optional, by default we return all milestones. If query={\"status\":\"open\"} then only open milestones are returned and if query={\"status\":\"closed\"} then only closed milestones are returned. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\MilestoneRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveId",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get milestone \u25d1",
        "description": "Get the definition of a given the milestone Please note that the following fields are deprecated in favor of their counterpart in 'resources': <ul> <li>sub_milestones_uri<\/li> <li>backlog_uri<\/li> <li>content_uri<\/li> <li>cardwall_uri<\/li> <li>burndown_uri<\/li> <\/ul>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\MilestoneRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/siblings": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveSiblings",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get Siblings \u25d1",
        "description": "Get siblings of the current milestone. The returned collection is ordered by id in reverse order. <p> $query parameter is optional, by default we return all milestones. If <code>query={\"status\":\"open\"}<\/code> then only open milestones are returned and if <code>query={\"status\":\"closed\"}<\/code> then only closed milestones are returned. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\MilestoneRepresentation"
              }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/content": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveContent",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get content \u25d1",
        "description": "Get the backlog items of a given milestone",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateContent",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateContentModel",
            "description": "**ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateContentModel"
            }
          }
        ],
        "summary": "Put content in a given milestone \ud83d\udd10",
        "description": "Put the new content of a given milestone.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyContent",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyContentModel",
            "description": "order  \nadd  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyContentModel"
            }
          }
        ],
        "summary": "Partial re-order of milestone content relative to one element \ud83d\udd10",
        "description": "<br> Example: <pre> \"order\": { \"ids\" : [123, 789, 1001], \"direction\": \"before\", \"compared_to\": 456 } <\/pre> <br> Resulting order will be: <pre>[\u2026, 123, 789, 1001, 456, \u2026]<\/pre> <br> Add example: <pre> \"add\": [ { \"id\": 34 \"remove_from\": 56 }, ... ] <\/pre> <br> Will remove element id 34 from milestone 56 content and add it to current milestone content",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/backlog": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveBacklog",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get backlog \u25d1",
        "description": "Get the backlog items of a given milestone that can be planned in a sub-milestone <p> $query parameter is optional, by default we return only open milestones. If <code>query={\"status\":\"all\"}<\/code> then open and closed milestones are returned. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateBacklog",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateBacklogModel",
            "description": "**ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateBacklogModel"
            }
          }
        ],
        "summary": "Update backlog items priorities \ud83d\udd10",
        "description": "The array of ids given as argument will: <ul> <li>update the priorities according to order in given array<\/li> <\/ul> <br \/> <strong>WARNING:<\/strong> PUT will NOT add\/remove element in backlog. Remove from backlog doesn't make sense but add might be useful to deal with inconsistent items. You can have a look at PATCH {id}\/backlog for add.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyBacklog",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone Item",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyBacklogModel",
            "description": "order  \nadd  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyBacklogModel"
            }
          }
        ],
        "summary": "Partial re-order of milestone backlog relative to one element. \ud83d\udd10",
        "description": " <br> Example: <pre> \"order\": { \"ids\" : [123, 789, 1001], \"direction\": \"before\", \"compared_to\": 456 }, \"add\": { [123] } <\/pre> <br> Resulting order will be: <pre>[\u2026, 123, 789, 1001, 456, \u2026]<\/pre> <br> Add example: <pre> \"add\": [ { \"id\": 34 \"remove_from\": 56 }, ... ] <\/pre> <br> Will remove element id 34 from milestone 56 backlog and add it to current backlog",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "post": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceCreateBacklog",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "item",
            "description": "artifact  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/BacklogItemReference" }
          }
        ],
        "summary": "Add an item to the backlog of a milestone \ud83d\udd10",
        "description": "Add an item to the backlog of a milestone The item must be of the allowed types (defined in the planning configuration). The body of the request should be of the form : { \"artifact\" : { \"id\" : 458 } }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/cardwall": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveCardwall",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a Cardwall \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/burndown": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceRetrieveBurndown",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get Burdown data \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\BurndownRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/milestones\/{id}\/testplan": {
      "get": {
        "operationId": "tuleap\\TestPlan\\REST\\v1\\MilestoneResourceRetrieveTestPlan",
        "tags": ["milestones"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 30,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get content \u25d1",
        "description": "Get the backlog items of a given milestone",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\TestPlan\\REST\\v1\\BacklogItemRepresentation"
              }
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/plannings\/{id}\/milestones": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\PlanningResourceRetrieveMilestones",
        "tags": ["plannings"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the planning",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get milestones \u25d1",
        "description": "Get the milestones of a given planning",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\MilestoneRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/backlog_items\/{id}": {
      "get": {
        "operationId": "retrieve\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResource",
        "tags": ["backlog_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Backlog Item",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get backlog item \u25d1",
        "description": "Get a backlog item representation",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/backlog_items\/{id}\/children": {
      "get": {
        "operationId": "\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResourceRetrieveChildren",
        "tags": ["backlog_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Backlog Item",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get children \u25d1",
        "description": "Get the children of a given Backlog Item",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "modify\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResource",
        "tags": ["backlog_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Backlog Item",
            "in": "path",
            "required": true
          },
          {
            "name": "modify\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResourceModel",
            "description": "order  \nadd  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/modify\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResourceModel"
            }
          }
        ],
        "summary": "Partial re-order of backlog items plus update of children \ud83d\udd10",
        "description": "Define the priorities of some children of a given Backlog Item <br> Example: <pre> \"order\": { \"ids\" : [123, 789, 1001], \"direction\": \"before\", \"compared_to\": 456 } <\/pre> <br> Resulting order will be: <pre>[\u2026, 123, 789, 1001, 456, \u2026]<\/pre> <br> Add example: <pre> \"add\": [ { \"id\": 34 \"remove_from\": 56 }, ... ] <\/pre> <br> Will remove element id 34 from 56 children and add it to current backlog_items children",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/backlog_items\/{id}\/test_definitions": {
      "get": {
        "operationId": "tuleap\\TestPlan\\REST\\v1\\BacklogItemResourceRetrieveTestDefinitions",
        "tags": ["backlog_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the backlog item",
            "in": "path",
            "required": true
          },
          {
            "name": "milestone_id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the milestone",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 30,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get test definitions \u25d1",
        "description": "Get the test definition of a given backlog item",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/DefinitionLinkedToABacklogItemRepresentation" }
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/cards\/{id}": {
      "put": {
        "operationId": "\\Tuleap\\Cardwall\\REST\\v1\\CardsResourceUpdateId",
        "tags": ["cards"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the card (format: planningId_artifactId,@see milestones\/:id\/cardwall)",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Cardwall\\REST\\v1\\CardsResourceUpdateIdModel",
            "description": "**label** (required)  \n**values** (required)  \ncolumn_id  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Cardwall\\REST\\v1\\CardsResourceUpdateIdModel"
            }
          }
        ],
        "summary": "Update card content \ud83d\udd10",
        "description": "Things to take into account: <ol> <li>You will get an error (400) if there are no changes in submitted document<\/li> <li>You can re-use the same document provided by \/milestones\/:id\/cardwall cards section. Even if it contains more data. The extra data\/info will be ignored<\/li> <li>You don't need to set all 'values' of the card, you can restrict to the modified ones<\/li> <li>If the card embbed in 'values' a field that correspond to 'label' or 'column_id' (ie. that might happens if the status is displayed on the card). The data submitted in 'values' section will override whatever was set in 'label' or 'column_id'<\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests": {
      "post": {
        "operationId": "create\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResource",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "content",
            "description": "repository_id  \nrepository_dest_id  \nbranch_src  \nbranch_dest  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestPOSTRepresentation"
            }
          }
        ],
        "summary": "Create PullRequest \ud83d\udd10",
        "description": "Create a new pullrequest.<br\/> <br\/> Here is an example of a valid POST content: <pre> {<br\/> &nbsp;&nbsp;\"repository_id\": 3,<br\/> &nbsp;&nbsp;\"branch_src\": \"dev\",<br\/> &nbsp;&nbsp;\"repository_dest_id\": 3,<br\/> &nbsp;&nbsp;\"branch_dest\": \"master\"<br\/> }<br\/> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestReference"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}": {
      "get": {
        "operationId": "retrieve\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResource",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get pull request \ud83d\udd10",
        "description": "Retrieve a given pull request. <br\/> User is not able to see a pull request in a git repository where he is not able to READ",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "modify\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResource",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "status  \ntitle  \ndescription  \ndescription_format  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestPATCHRepresentation"
            }
          }
        ],
        "summary": "Partial update of a pull request \ud83d\udd10",
        "description": "Merge or abandon a pull request. <br\/> -- OR -- <br\/> Update title and\/or description of pull request. <br\/> Here is an example of a valid PATCH content to merge a pull request: <pre> {<br\/> &nbsp;&nbsp;\"status\": \"merge\"<br\/> }<br\/> <\/pre> <br\/> For now, only fast-forward merges are taken into account. <br\/> A pull request that has been abandoned cannot be merged later.<br\/> Here is an example of a valid PATCH content to abandon a pull request: <pre> {<br\/> &nbsp;&nbsp;\"status\": \"abandon\"<br\/> }<br\/> <\/pre> <br\/> A pull request that has been abandoned can be reopen.<br\/> Here is an example of a valid PATCH content to reopen an abandoned pull request: <pre> {<br\/> &nbsp;&nbsp;\"status\": \"review\"<br\/> }<br\/> <\/pre> <br\/> Here is an example of a valid PATCH content to update a pull request: <pre> {<br\/> &nbsp;&nbsp;\"title\": \"new title\",<br\/> &nbsp;&nbsp;\"description\": \"new description\"<br\/> }<br\/> <\/pre> <br\/>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" },
          "500": { "description": "x Error while merging the pull request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/commits": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveCommits",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of fetched comments",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first comment to fetch",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull request commits \u25d1",
        "description": "Retrieve all commits of a given pull request. <br\/> User is not able to see a pull request in a git repository where he is not able to READ",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Git\\REST\\v1\\GitCommitRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" },
          "410": { "description": "Gone" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/labels": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveLabels",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get labels \ud83d\udd10",
        "description": "Get the labels that are defined for this pull request",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceModifyLabels",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "add  \nremove  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/Tuleap\\Label\\REST\\LabelsPATCHRepresentation" }
          }
        ],
        "summary": "Update labels \ud83d\udd10",
        "description": "<p>Update the labels of the pull request. You can add or remove labels.<\/p> <p>Example of payload:<\/p> <pre> {<br> &nbsp;&nbsp;\"add\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 1 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 2 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 3 }<br> &nbsp;&nbsp;],<br> &nbsp;&nbsp;\"remove\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 4 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 5 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 6 }<br> &nbsp;&nbsp;]<br> }<br> <\/pre> <p>This will add labels with ids 1, 2, and 3; and will remove labels with ids 4, 5, and 6.<\/p> <p>You can also create labels, they will be added to the list of project labels. Example:<\/p> <pre> {<br> &nbsp;&nbsp;\"add\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 1 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"id\": 2 },<br> &nbsp;&nbsp;&nbsp;&nbsp;{ \"label\": \"Emergency Fix\" }<br> &nbsp;&nbsp;]<br> }<br> <\/pre> <p>This will create \"Emergency Fix\" label (if it does not already exist, else it uses the existing one), and add it to the current pull request. Please note that you must use the id to remove labels from the pull request.<\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/files": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveFiles",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get pull request's impacted files \ud83d\udd10",
        "description": "Get the impacted files for a pull request.<br\/> User is not able to see a pull request in a git repository where he is not able to READ",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/PullRequest\\REST\\v1\\PullRequestFileRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "x Pull request does not exist" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/file_diff": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveFileDiff",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "path",
            "type": "string",
            "description": "File path",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Get the diff of a given file in a pull request \ud83d\udd10",
        "description": "Get the diff of a given file between the source branch and the dest branch for a pull request.<br\/> User is not able to see a pull request in a git repository where he is not able to READ",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestFileUniDiffRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "x The file does not exist" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/inline-comments": {
      "post": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceCreateInline",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request id",
            "in": "path",
            "required": true
          },
          {
            "name": "comment_data",
            "description": "content  \nformat  \nfile_path  \nunidiff_offset  \nposition  \nparent_id  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestInlineCommentPOSTRepresentation"
            }
          }
        ],
        "summary": "Post a new inline comment \ud83d\udd10",
        "description": "Post a new inline comment for a given pull request file and a position (left | right)<br> Format: { \"content\": \"My new comment\" , \"unidiff_offset\": 1, \"file_path\": \"dir\/myfile.txt\" , position: \"left\" }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "410": { "description": "Gone" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/timeline": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveTimeline",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request id",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of fetched comments",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first comment to fetch",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull request's timeline \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\TimelineRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/comments": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveComments",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request id",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "maximum": 50,
            "description": "Number of fetched comments",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first comment to fetch",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"],
            "description": "In which order comments are fetched. Default is asc.",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get pull request's comments \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\PullRequest\\REST\\v1\\Comment\\CommentRepresentation"
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "post": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceCreateComments",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request id",
            "in": "path",
            "required": true
          },
          {
            "name": "comment_data",
            "description": "content  \nparent_id  \nformat  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\CommentPOSTRepresentation"
            }
          }
        ],
        "summary": "Post a new comment \ud83d\udd10",
        "description": "Post a new comment for a given pull request <br> Format: { \"content\": \"My new comment\" }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\Comment\\CommentRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "410": { "description": "Gone" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_requests\/{id}\/reviewers": {
      "get": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceRetrieveReviewers",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request ID",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get pull request's reviewers \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\Reviewer\\ReviewersRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "\\Tuleap\\PullRequest\\REST\\v1\\PullRequestsResourceUpdateReviewers",
        "tags": ["pull_requests"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Pull request ID",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "users  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\Reviewer\\ReviewersPUTRepresentation"
            }
          }
        ],
        "summary": "Set pull request's reviewers \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_request_comments\/{id}": {
      "patch": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\PullRequestCommentsResourceModifyCommentId",
        "tags": ["pull_request_comments"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Comment id",
            "in": "path",
            "required": true
          },
          {
            "name": "comment_data",
            "description": "content  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\CommentPATCHRepresentation"
            }
          }
        ],
        "summary": "Update an existing comment \ud83d\udd10",
        "description": "Update a comment for a given pull request <br> Format: {\"content\": \"My updated comment\" }",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\Comment\\CommentRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_request_inline_comments\/{id}": {
      "patch": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\PullRequestInlineCommentsResourceModifyCommentId",
        "tags": ["pull_request_inline_comments"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Comment id",
            "in": "path",
            "required": true
          },
          {
            "name": "comment_data",
            "description": "content  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentPATCHRepresentation"
            }
          }
        ],
        "summary": "Update an existing comment \ud83d\udd10",
        "description": "Only the comment's content is allowed to be modified.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/pull_request_inline_comments\/{id}\/reply": {
      "post": {
        "operationId": "tuleap\\PullRequest\\REST\\v1\\PullRequestInlineCommentsResourceCreateReply",
        "tags": ["pull_request_inline_comments"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Root inline comment id",
            "in": "path",
            "required": true
          },
          {
            "name": "reply_data",
            "description": "content  \nformat  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\PullRequest\\REST\\v1\\InlineComment\\Reply\\InlineCommentReplyPOSTRepresentation"
            }
          }
        ],
        "summary": "Reply to a given inline comment \ud83d\udd10",
        "description": "<p> This route takes an inline comment id parameter: <ul> <li>To reply to a comment which is not part of a thread yet, provide its id.<\/li> <li>To reply to a comment in a thread, provide the id of the very first comment of the thread.<\/li> <\/ul> <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_release\/{id}": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\ReleaseResourceRetrieveId",
        "tags": ["frs_release"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the release",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get release \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\ReleaseRepresentation" }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\FRS\\REST\\v1\\ReleaseResourceModifyId",
        "tags": ["frs_release"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "name  \nrelease_note  \nchangelog  \nstatus  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\ReleasePATCHRepresentation"
            }
          }
        ],
        "summary": "Update release \ud83d\udd10",
        "description": "Update the metadata of a release. Only name, release_note, changelog and\/or status can be changed for now. <p>Example to change the name:<\/p> <pre> { \"name\": \"Cajun Chicken Pasta 2.1\" } <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_release\/{id}\/files": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\ReleaseResourceRetrieveFiles",
        "tags": ["frs_release"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the release",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of files displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first file to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get files \u25d1",
        "description": "Get files belonging to a release",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\CollectionOfFileRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_release": {
      "post": {
        "operationId": "createTuleap\\FRS\\REST\\v1\\ReleaseResource",
        "tags": ["frs_release"],
        "parameters": [
          {
            "name": "body",
            "description": "package_id  \nname  \nrelease_note  \nchangelog  \nstatus  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\ReleasePOSTRepresentation" }
          }
        ],
        "summary": "Create release \ud83d\udd10",
        "description": "Create a release in a given active package <p>Example of payload:<\/p> <pre> { \"package_id\": 42, \"name\": \"Cajun Chicken Pasta 2.0\" } <\/pre> <br> <p>You can also add release notes and\/or changelog (optional, default is empty string):<\/p> <pre> { \"package_id\": 42, \"name\": \"Cajun Chicken Pasta 2.0\", \"release_note\": \"Important informations\u2026\" } <\/pre> <br> <p>By default the release is active. You can set the status to hidden instead (allowed values for status are \"active\" or \"hidden\"):<\/p> <pre> { \"package_id\": 42, \"name\": \"Cajun Chicken Pasta 2.0\", \"status\": \"hidden\" } <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\ReleaseRepresentation" }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_packages": {
      "post": {
        "operationId": "createTuleap\\FRS\\REST\\v1\\PackageResource",
        "tags": ["frs_packages"],
        "parameters": [
          {
            "name": "createTuleap\\FRS\\REST\\v1\\PackageResourceModel",
            "description": "**project_id** (required)  \n**label** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\FRS\\REST\\v1\\PackageResourceModel"
            }
          }
        ],
        "summary": "Create a package \ud83d\udd10",
        "description": "Create a package in a given project. User must be file administrator to be able to create the package. The package will be active, and will be placed at the beginning of existing ones.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\PackageRepresentation" }
          },
          "400": { "description": "BadRequest Given project does not exist" },
          "403": { "description": "Forbidden User doesn't have permission to create a package" },
          "409": {
            "description": "Conflict Package with the same label already exists in this project"
          },
          "500": { "description": "Error Unable to create the package" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_packages\/{id}": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\PackageResourceRetrieveId",
        "tags": ["frs_packages"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the package",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get FRS package \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\PackageRepresentation" }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_packages\/{id}\/frs_release": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\PackageResourceRetrieveReleases",
        "tags": ["frs_packages"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the package",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get FRS releases \u25d1",
        "description": "Get the releases of a package",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\ReleaseRepresentationPaginatedCollectionRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_files\/{id}": {
      "get": {
        "operationId": "tuleap\\FRS\\REST\\v1\\FileResourceRetrieveId",
        "tags": ["frs_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the file",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get file \u25d1",
        "description": "Get FRS file information",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\FileRepresentation" }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\FRS\\REST\\v1\\FileResourceRemoveId",
        "tags": ["frs_files"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The id of the file",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete file \ud83d\udd10",
        "description": "Delete file from FRS",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/frs_files": {
      "post": {
        "operationId": "createTuleap\\FRS\\REST\\v1\\FileResource",
        "tags": ["frs_files"],
        "parameters": [
          {
            "name": "file_post_representation",
            "description": "release_id  \nname  \nfile_size  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\FilePOSTRepresentation" }
          }
        ],
        "summary": "Create file \ud83d\udd10",
        "description": "Create a file in the release. <br> <pre> {<br> &nbsp; \"release_id\": int,<br> &nbsp; \"name\": \"string\",<br> &nbsp; \"file_size\": int<br> }<br> <\/pre> You will get an URL where the file needs to be uploaded using the <a href=\"https:\/\/tus.io\/protocols\/resumable-upload.html\">tus resumable upload protocol<\/a> to validate the item creation. You will need to use the same authentication mechanism you used to call this endpoint. Note: If the file is empty, then no URL will be returned.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\FRS\\REST\\v1\\CreatedFileRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_widget\/{id}": {
      "get": {
        "operationId": "tuleap\\CrossTracker\\REST\\v1\\CrossTrackerWidgetResourceRetrieveId",
        "tags": ["crosstracker_widget"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the widget",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a CrossTracker widget \u25d1",
        "description": "It returns the queries belonging to the widget",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerWidgetRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_widget\/{id}\/forward_links": {
      "get": {
        "operationId": "tuleap\\CrossTracker\\REST\\v1\\CrossTrackerWidgetResourceRetrieveForwardLinks",
        "tags": ["crosstracker_widget"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the widget",
            "in": "path",
            "required": true
          },
          {
            "name": "tql_query",
            "type": "string",
            "description": "TQL query",
            "in": "query",
            "required": true
          },
          {
            "name": "source_artifact_id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the artifact",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get forward links \u25d1",
        "description": "Get the forward links of an artifact according to a given CrossTracker query",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryContentRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_widget\/{id}\/reverse_links": {
      "get": {
        "operationId": "tuleap\\CrossTracker\\REST\\v1\\CrossTrackerWidgetResourceRetrieveReverseLinks",
        "tags": ["crosstracker_widget"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the widget",
            "in": "path",
            "required": true
          },
          {
            "name": "tql_query",
            "type": "string",
            "description": "TQL query",
            "in": "query",
            "required": true
          },
          {
            "name": "target_artifact_id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the artifact",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get reverse links \u25d1",
        "description": "Get the reverse links of an artifact according to a given CrossTracker query",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryContentRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_query\/content": {
      "get": {
        "operationId": "tuleap\\CrossTracker\\REST\\v1\\CrossTrackerQueryResourceRetrieveContent",
        "tags": ["crosstracker_query"],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "description": "The query to execute on the widget",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get results of the CrossTracker query in context of widget \u25d1",
        "description": "query is required. It is a json object. Example: <pre>{ \"widget_id\": 3, \"tql_query\": \"SELECT @id FROM @project = 'self' WHERE @id >= 1\" }<\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryContentRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_query\/{id}\/content": {
      "get": {
        "operationId": "tuleap\\CrossTracker\\REST\\v1\\CrossTrackerQueryResourceRetrieveIdContent",
        "tags": ["crosstracker_query"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "ID of the query",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get results of the CrossTracker query \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryContentRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_query\/{id}": {
      "put": {
        "operationId": "updateTuleap\\CrossTracker\\REST\\v1\\CrossTrackerQueryResource",
        "tags": ["crosstracker_query"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "ID of the query",
            "in": "path",
            "required": true
          },
          {
            "name": "query_representation",
            "description": "tql_query  \ntitle  \ndescription  \nwidget_id  \nis_default  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryPutRepresentation"
            }
          }
        ],
        "summary": "Update a CrossTracker query \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\CrossTracker\\REST\\v1\\CrossTrackerQueryResource",
        "tags": ["crosstracker_query"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "ID of the query",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete a query from its widget \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/crosstracker_query": {
      "post": {
        "operationId": "createTuleap\\CrossTracker\\REST\\v1\\CrossTrackerQueryResource",
        "tags": ["crosstracker_query"],
        "parameters": [
          {
            "name": "query_representation",
            "description": "widget_id  \ntql_query  \ntitle  \ndescription  \nis_default  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryPostRepresentation"
            }
          }
        ],
        "summary": "Create a new query in the widget \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/dynamic_credentials": {
      "post": {
        "operationId": "createTuleap\\DynamicCredentials\\REST\\DynamicCredentialsResource",
        "tags": ["dynamic_credentials"],
        "parameters": [
          {
            "name": "createTuleap\\DynamicCredentials\\REST\\DynamicCredentialsResourceModel",
            "description": "**username** (required)  \n**password** (required)  \n**expiration** (required)  \n**signature** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\DynamicCredentials\\REST\\DynamicCredentialsResourceModel"
            }
          }
        ],
        "summary": "Create a new set of credential \ud83d\udd13",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "\/dynamic_credentials\/{username}": {
      "delete": {
        "operationId": "tuleap\\DynamicCredentials\\REST\\DynamicCredentialsResourceRemoveUsername",
        "tags": ["dynamic_credentials"],
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "description": "Username must be formatted as forge__dynamic_credential-&lt;identifier&gt; where &lt;identifier&gt; is a chosen value",
            "in": "path",
            "required": true
          },
          {
            "name": "signature",
            "type": "string",
            "description": "Base64 encoded signature associated with the request",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Revoke a set of credential \ud83d\udd13",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        }
      }
    },
    "\/svn\/{id}": {
      "get": {
        "operationId": "retrieve\\Tuleap\\SVN\\REST\\v1\\RepositoryResource",
        "tags": ["svn"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get SVN \u25d1",
        "description": "Get info about project SVN repositories <br> <pre> {<br> &nbsp;\"id\" : 90,<br> &nbsp;\"project\": {...},<br> &nbsp;\"uri\": \"svn\/90\",<br> &nbsp;\"name\": \"repo\",<br> &nbsp;\"settings\": {<br> &nbsp;&nbsp;&nbsp;\"commit_rules\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_reference_mandatory\": true ,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_commit_message_change_allowed\": true<br> &nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;\"immutable_tags\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"paths\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"whitelist\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;\"access_file\": \"[\/] * = rw@members = rw\\r\\n[\/tags]@admins = rw\",<br> &nbsp;&nbsp;&nbsp;\"email_notifications\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"path\": \"trunk\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"user_groups\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"id\": \"101_3\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"uri\": \"user_groups\/101_3\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"label\": \"Project members\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"users\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"id\": \"333\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"uri\": \"\/users\/333\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"username\": \"...\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"emails\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"foo@example.com\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"bar@example.com\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;},<br> &nbsp;\"has_default_permissions\": true<br> }<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\SVN\\REST\\v1\\FullRepositoryRepresentation"
            }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "update\\Tuleap\\SVN\\REST\\v1\\RepositoryResource",
        "tags": ["svn"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          },
          {
            "name": "settings",
            "description": "commit_rules  \nimmutable_tags  \nemail_notifications  \naccess_file  \nhas_default_permissions  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\SettingsPUTRepresentation"
            }
          }
        ],
        "summary": "PUT SVN \ud83d\udd10",
        "description": "Update settings of an SVN repository. Only project admins can do this. <br> <pre> {<br> &nbsp;\"settings\": {<br> &nbsp;&nbsp;&nbsp;\"commit_rules\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_reference_mandatory\": true ,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_commit_message_change_allowed\": true<br> &nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;\"immutable_tags\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"paths\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"whitelist\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;\"access_file\": \"[\/] * = rw@members = rw\\r\\n[\/tags]@admins = rw\",<br> &nbsp;&nbsp;&nbsp;\"email_notifications\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"path\": \"\/trunk\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"emails\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"foo@example.com\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"bar@example.com\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"users\": [],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"user_groups\": []<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"path\": \"\/tags\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"emails\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"foo@example.com\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"users\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"102\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"user_groups\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"101_3\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"105\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;]<br>, &nbsp;&nbsp;&nbsp;\"has_default_permissions\": true, &nbsp;},<br> }<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\SVN\\REST\\v1\\FullRepositoryRepresentation"
            }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "remove\\Tuleap\\SVN\\REST\\v1\\RepositoryResource",
        "tags": ["svn"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the repository",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete SVN repository \ud83d\udd10",
        "description": "Delete a SVN repository",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/svn": {
      "post": {
        "operationId": "create\\Tuleap\\SVN\\REST\\v1\\RepositoryResource",
        "tags": ["svn"],
        "parameters": [
          {
            "name": "create\\Tuleap\\SVN\\REST\\v1\\RepositoryResourceModel",
            "description": "**project_id** (required)  \n**name** (required)  \nsettings  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/create\\Tuleap\\SVN\\REST\\v1\\RepositoryResourceModel"
            }
          }
        ],
        "summary": "Create a SVN repository \ud83d\udd10",
        "description": "Create a svn repository in a given project. User must be svn administrator to be able to create the repository. <br> <br> A project admin can create an SVN repository like this: <br> <pre> {<br> &nbsp;\"project_id\": 122,<br> &nbsp;\"name\" : \"repo01\"<br> }<br> <\/pre> <br> <br> In addition, the admin can create a repository with custom settings: <br> <pre> {<br> &nbsp;&nbsp;\"project_id\": 122,<br> &nbsp;&nbsp;\"name\" : \"repo01\",<br> &nbsp;&nbsp;\"settings\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;\"commit_rules\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_reference_mandatory\": true,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"is_commit_message_change_allowed\": false<br> &nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;\"immutable_tags\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"paths\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"whitelist\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist1\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\/whitelist2\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;\"layout\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/trunk\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"\/tags\"<br> &nbsp;&nbsp;&nbsp;&nbsp; ],<br> &nbsp;&nbsp;&nbsp;&nbsp;\"has_default_permissions\": true,<br> &nbsp;&nbsp;&nbsp;&nbsp;\"access_file\": \"[\/] * = rw \\r\\n@members = rw\\r\\n[\/tags]@admins = rw\",<br> &nbsp;&nbsp;&nbsp;&nbsp;\"email_notifications\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"path\": \"\/trunk\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"emails\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"foo@example.com\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"bar@example.com\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"users\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;102,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;103<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"user_groups\": []<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"path\": \"\/tags\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"emails\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"foo@example.com\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"users\": [],<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"user_groups\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"101_3\",<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"102\"<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;&nbsp;&nbsp;]<br> &nbsp;&nbsp;}<br> }<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\SVN\\REST\\v1\\RepositoryRepresentation" }
          },
          "400": {
            "description": "BadRequest Given project does not exist or project does not use SVN service"
          },
          "403": { "description": "Forbidden User doesn't have permission to create a repository" },
          "500": { "description": "Error Unable to create the repository" },
          "409": { "description": "Repository name is invalid" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_campaigns\/{id}": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceRetrieveId",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the campaign",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get campaign \u25d1",
        "description": "Get testing campaign by its id",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\CampaignRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "modifyTuleap\\TestManagement\\REST\\v1\\CampaignsResource",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the campaign",
            "in": "path",
            "required": true
          },
          {
            "name": "modifyTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel",
            "description": "label  \njob_configuration  \nautomated_tests_results  \nchange_status  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/modifyTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel"
            }
          }
        ],
        "summary": "PATCH campaign \ud83d\udd10",
        "description": "With this route it's possible to update label, job configuration and linked automated tests. <br> <br> To update automated tests, update the campaign with automated tests result Junits and build url this will update the corresponding tests <br> <br> Exemple : If you have a test with 'automated tests' field file as 'automated' : <br> <pre> { &nbsp;\"automated_tests_results\" : {<br> &nbsp;\"build_url\": \"your\/url\",<\/br> &nbsp;\"junit_contents\": [<br> &nbsp;\"&lt;?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?&gt; &nbsp;&lt;testsuites name=\\\\\"fake test\\\\\" time=\\\\\"13\\\\\" tests=\\\\\"1\\\\\" failures=\\\\\"0\\\\\"&gt;<br> &nbsp;&lt;testsuite name=\\\\\"fake test\\\\\" timestamp=\\\\\"2020-04-29T07:52:25\\\\\" tests=\\\\\"1\\\\\" failures=\\\\\"0\\\\\" time=\\\\\"6\\\\\"&gt;<br> &nbsp;&lt;testcase name=\\\\\"automated\\\\\" time=\\\\\"6.105\\\\\" classname=\\\\\"Project administrator can start Kanban\\\\\"&gt;&lt;\/testcase><br> &nbsp;&lt;\/testsuite&gt;<br> &nbsp;&lt;\/testsuites&gt;\"<br> ]}} <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\CampaignRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_campaigns\/{id}\/testmanagement_executions": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceRetrieveExecutions",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the campaign",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "definition_format",
            "type": "string",
            "default": "minimal",
            "enum": ["minimal", "full"],
            "description": "The format of the artifact defintion retrieved",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get executions \u25d1",
        "description": "Get executions of a given campaign <br\/> <br\/> Test steps can be rendered as two formats: HTML or Text. Test steps rendered as HTML can have two source formats: HTML itself or CommonMark (Markdown).<br\/> Test steps that are already written in HTML have the following structure: <pre><code>{<br\/> &quot;description&quot;: &quot;&lt;p&gt;HTML description&lt;\/p&gt;&quot;,<br\/> &quot;description_format&quot;: &quot;html&quot;<br\/> &quot;expected_results&quot;: &quot;HTML expected results&quot;,<br\/> &quot;expected_results_format&quot;: &quot;html&quot;,<br\/> \"rank\": 1<br\/> }<\/code><\/pre> <p>Test steps that are written in CommonMark format (Markdown) have an additional \"commonmark\" property that contains the source. Notice that they also have format \"html\":<\/p> <pre><code>{<br\/> &quot;description&quot;: &quot;&lt;p&gt;&lt;strong&gt;Markdown&lt;\/strong&gt; description&lt;\/p&gt;&quot;,<br\/> &quot;description_format&quot;: &quot;html&quot;<br\/> &quot;commonmark_description&quot;: &quot;\\*\\*Markdown\\*\\* description&quot;,<br\/> &quot;expected_results&quot;: &quot;&lt;strong&gt;Markdown&lt;\/strong&gt; expected results&quot;,<br\/> &quot;expected_results_format&quot;: &quot;html&quot;,<br\/> &quot;commonmark_expected_results&quot;: &quot;\\*\\*Markdown\\*\\* expected results&quot;,<br\/> \"rank\": 1<br\/> }<\/code><\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceModifyExecutions",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the campaign",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceModifyExecutionsModel",
            "description": "**definition_ids_to_add** (required)  \n**execution_ids_to_remove** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\TestManagement\\REST\\v1\\CampaignsResourceModifyExecutionsModel"
            }
          }
        ],
        "summary": "PATCH test executions \ud83d\udd10",
        "description": "Create new test executions and unlink some test executions for a campaign",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/ExecutionRepresentation" }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_campaigns": {
      "post": {
        "operationId": "createTuleap\\TestManagement\\REST\\v1\\CampaignsResource",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "test_selector",
            "type": "string",
            "default": "all",
            "enum": ["none", "all", "milestone", "report"],
            "description": "The method used to set initial test definitions for campaign",
            "in": "query",
            "required": false
          },
          {
            "name": "milestone_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone with which the campaign will be linked",
            "in": "query",
            "required": false
          },
          {
            "name": "report_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report to retrieve test definitions for campaign",
            "in": "query",
            "required": false
          },
          {
            "name": "createTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel",
            "description": "**project_id** (required)  \n**label** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel"
            }
          }
        ],
        "summary": "POST campaign \ud83d\udd10",
        "description": "Create a new campaign",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\ArtifactReference"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_campaigns\/{id}\/automated_tests": {
      "post": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceCreateAutomatedTests",
        "tags": ["testmanagement_campaigns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the campaign",
            "in": "path",
            "required": true
          }
        ],
        "summary": "POST automated tests \ud83d\udd10",
        "description": "<pre>\/!\\ Experimental. DO NOT USE<\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_definitions\/{id}": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\DefinitionsResourceRetrieveId",
        "tags": ["testmanagement_definitions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the definition",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a definition \ud83d\udd10",
        "description": "Get a definition by id <br\/> <br\/> Test steps can be rendered as two formats: HTML or Text. Test steps rendered as HTML can have two source formats: HTML itself or CommonMark (Markdown).<br\/> Test steps that are already written in HTML have the following structure: <pre><code>{<br\/> &quot;description&quot;: &quot;&lt;p&gt;HTML description&lt;\/p&gt;&quot;,<br\/> &quot;description_format&quot;: &quot;html&quot;<br\/> &quot;expected_results&quot;: &quot;HTML expected results&quot;,<br\/> &quot;expected_results_format&quot;: &quot;html&quot;,<br\/> \"rank\": 1<br\/> }<\/code><\/pre> <p>Test steps that are written in CommonMark format (Markdown) have an additional \"commonmark\" property that contains the source. Notice that they also have format \"html\":<\/p> <pre><code>{<br\/> &quot;description&quot;: &quot;&lt;p&gt;&lt;strong&gt;Markdown&lt;\/strong&gt; description&lt;\/p&gt;&quot;,<br\/> &quot;description_format&quot;: &quot;html&quot;<br\/> &quot;commonmark_description&quot;: &quot;\\*\\*Markdown\\*\\* description&quot;,<br\/> &quot;expected_results&quot;: &quot;&lt;strong&gt;Markdown&lt;\/strong&gt; expected results&quot;,<br\/> &quot;expected_results_format&quot;: &quot;html&quot;,<br\/> &quot;commonmark_expected_results&quot;: &quot;\\*\\*Markdown\\*\\* expected results&quot;,<br\/> \"rank\": 1<br\/> }<\/code><\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_executions": {
      "post": {
        "operationId": "createTuleap\\TestManagement\\REST\\v1\\ExecutionsResource",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "createTuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModel",
            "description": "**tracker_reference** (required)  \n**definition_id** (required)  \n**status** (required)  \ntime  \nresults  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModel"
            }
          }
        ],
        "summary": "Create a test execution \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\ExecutionRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_executions\/{id}\/presences": {
      "patch": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourcePresences",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourcePresencesModel",
            "description": "**uuid** (required)  \nremove_from  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\TestManagement\\REST\\v1\\ExecutionsResourcePresencesModel"
            }
          }
        ],
        "summary": "User views a test execution \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_executions\/{id}\/issues": {
      "patch": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModifyIssueLink",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the test execution artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModifyIssueLinkModel",
            "description": "**issue_id** (required)  \ncomment  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModifyIssueLinkModel"
            }
          }
        ],
        "summary": "Create an artifact link between an issue and a test execution \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_executions\/{id}": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceRetrieveId",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the execution",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get execution \ud83d\udd10",
        "description": "Get testing execution by its id",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\ExecutionRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModifyId",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the execution artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "description": "force_use_latest_definition_version  \nsteps_results  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\PATCHExecutionRepresentation"
            }
          }
        ],
        "summary": "Update part of a test execution \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceUpdateId",
        "tags": ["testmanagement_executions"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          },
          {
            "name": "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceUpdateIdModel",
            "description": "**status** (required)  \nuploaded_file_ids  \ndeleted_file_ids  \ntime  \nresults  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceUpdateIdModel"
            }
          }
        ],
        "summary": "Update a test execution \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\ExecutionRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/testmanagement_nodes\/{id}": {
      "get": {
        "operationId": "tuleap\\TestManagement\\REST\\v1\\NodeResourceRetrieveId",
        "tags": ["testmanagement_nodes"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the node",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a node representation \/!\\ EXPERIMENTAL DO NOT USE IT\/!\\ \ud83d\udd10",
        "description": "Please, don't, itl will change, your code will break and you will be sad",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\NodeRepresentation"
            }
          },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/taskboard\/{id}\/cards": {
      "get": {
        "operationId": "tuleap\\Taskboard\\REST\\v1\\TaskboardResourceRetrieveCards",
        "tags": ["taskboard"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the taskboard",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get top-level cards \u25d1",
        "description": "Get cards that are at top level of the taskboard. Those cards are either solo items or have children.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "$ref": "#\/definitions\/CardRepresentation" } }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/taskboard\/{id}\/columns": {
      "get": {
        "operationId": "tuleap\\Taskboard\\REST\\v1\\TaskboardResourceRetrieveColumns",
        "tags": ["taskboard"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the taskboard",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get columns \u25d1",
        "description": "Get taskboard columns.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/\\Tuleap\\Taskboard\\REST\\v1\\Columns\\ColumnRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/taskboard_cards\/{id}\/children": {
      "get": {
        "operationId": "tuleap\\Taskboard\\REST\\v1\\TaskboardCardResourceRetrieveChildren",
        "tags": ["taskboard_cards"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the card",
            "in": "path",
            "required": true
          },
          {
            "name": "milestone_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "query",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "description": "Number of elements per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get card children \u25d1",
        "description": "Get children of a card.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "$ref": "#\/definitions\/CardRepresentation" } }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/taskboard_cards\/{id}": {
      "get": {
        "operationId": "tuleap\\Taskboard\\REST\\v1\\TaskboardCardResourceRetrieveId",
        "tags": ["taskboard_cards"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the card",
            "in": "path",
            "required": true
          },
          {
            "name": "milestone_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the milestone",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Get card \u25d1",
        "description": "Get a single card.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Taskboard\\REST\\v1\\CardRepresentation" }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\Taskboard\\REST\\v1\\TaskboardCardResourceModifyId",
        "tags": ["taskboard_cards"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the card",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "description": "remaining_effort  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Taskboard\\REST\\v1\\Card\\CardPatchRepresentation"
            }
          }
        ],
        "summary": "Patch card \ud83d\udd10",
        "description": "Update the content of a card <pre> \/!\\ This REST route is under construction and subject to changes \/!\\ <\/pre> <br> Example: <pre> { \"remaining_effort\": 13 } <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/taskboard_cells\/{swimlane_id}\/column\/{column_id}": {
      "patch": {
        "operationId": "modifyTuleap\\Taskboard\\REST\\v1\\Cell\\CellResource",
        "tags": ["taskboard_cells"],
        "parameters": [
          {
            "name": "swimlane_id",
            "type": "integer",
            "format": "int64",
            "description": "Artifact Id of the swimlane containing the cell",
            "in": "path",
            "required": true
          },
          {
            "name": "column_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the cell's column",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "description": "add  \norder  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Taskboard\\REST\\v1\\Cell\\CellPatchRepresentation"
            }
          }
        ],
        "summary": "Patch Taskboard cell \ud83d\udd10",
        "description": "Move cards to a taskboard cell and\/or reorder cards in a cell. <br> Move a child card to a cell (changing its status): <pre> swimlane_id = 30, column_id = 7, payload = {\"add\": 123} <\/pre> Given that the card of id 123 is a child of the swimlane of id 30, this will move it to the column of id 7, changing its status to the corresponding mapping. For example if the column of id 7 is \"On Going\", this will set the card's status field to \"On Going\". <br><br> Move a solo card to a cell (changing its status): <pre> swimlane_id = 30, column_id = 7, payload = {\"add\": 30} <\/pre> When the swimlane of id 30 has no children (solo card), this will move it to the column of id 7. \"add\" and \"swimlane_id\" must be the same for solo cards. <br><br> Reorder a card in the column: <pre> payload = {\"order\": { \"ids\": [123, 789, 1001], \"direction\": \"before\", \"compared_to\": 456 }} <\/pre> The resulting order will be: <pre>[\u2026, 123, 789, 1001, 456, \u2026]<\/pre> You can change a card status and reorder it at the same time.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/search": {
      "post": {
        "operationId": "tuleap\\FullTextSearchCommon\\REST\\v1\\SearchResourceRetrieveSearchItems",
        "tags": ["search"],
        "parameters": [
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "search_query",
            "description": "keywords  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\FullTextSearchCommon\\REST\\v1\\SearchQueryRepresentation"
            }
          }
        ],
        "summary": "Get items related to a search \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/roadmaps\/{id}\/tasks": {
      "get": {
        "operationId": "tuleap\\Roadmap\\REST\\v1\\RoadmapResourceRetrieveTasks",
        "tags": ["roadmaps"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the roadmap",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the tasks \u25d1",
        "description": "Retrieve paginated tasks of a given roadmap <pre> \/!\\ Roadmap REST route is under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "$ref": "#\/definitions\/TaskRepresentation" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/roadmaps\/{id}\/iterations": {
      "get": {
        "operationId": "tuleap\\Roadmap\\REST\\v1\\RoadmapResourceRetrieveIterations",
        "tags": ["roadmaps"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the roadmap",
            "in": "path",
            "required": true
          },
          {
            "name": "level",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 2,
            "description": "Level of the iteration",
            "in": "query",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the iterations \u25d1",
        "description": "Retrieve paginated iterations of a given roadmap <pre> \/!\\ Roadmap REST route is under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { "$ref": "#\/definitions\/IterationRepresentation" }
            }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/roadmap_tasks\/{id}\/subtasks": {
      "get": {
        "operationId": "tuleap\\Roadmap\\REST\\v1\\TasksResourceRetrieveSubtasks",
        "tags": ["roadmap_tasks"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the task",
            "in": "path",
            "required": true
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 100,
            "maximum": 100,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the subtasks \u25d1",
        "description": "Retrieve paginated subtasks of a given roadmap task <pre> \/!\\ Roadmap REST route is under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "$ref": "#\/definitions\/TaskRepresentation" } }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}": {
      "get": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceRetrieveId",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get kanban \u25d1",
        "description": "Get the definition of a given kanban <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanRepresentation" }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyId",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyIdModel",
            "description": "label  \nis_promoted  \ncollapse_column  \ncollapse_archive  \ncollapse_backlog  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyIdModel"
            }
          }
        ],
        "summary": "Patch kanban \ud83d\udd10",
        "description": "Patch properties of a given kanban <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <br> To update the label of a kanban: <pre> {<br> &nbsp;&nbsp;\"label\": \"The new label\"<br> } <\/pre> <br> To collapse a column (will be saved in current user preferences): <pre> {<br> &nbsp;&nbsp;\"collapse_column\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;\"column_id\": 1337,<br> &nbsp;&nbsp;&nbsp;&nbsp;\"value\": true \/\/ false to expand<br> &nbsp;&nbsp;}<br> } <\/pre> <br> To collapse the backlog (the same for archive): <pre> {<br> &nbsp;&nbsp;\"collapse_backlog\": true \/\/ false to expand<br> } <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "remove\\Tuleap\\Kanban\\REST\\v1\\KanbanResource",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete Kanban \ud83d\udd10",
        "description": "Delete Kanban",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/backlog": {
      "get": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceRetrieveBacklog",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search string in json format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get backlog \u25d1",
        "description": "Get the backlog of a given kanban <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <p><b>query<\/b> is optional. When filled, it is a json object with:<\/p> <p>an integer \"tracker_report_id\" to filter kanban items corresponding to the given Tracker report id. <br><\/p> Example: <pre>{\"tracker_report_id\":41}<\/pre> <br> <p>Reports using the field bound to the \"Status\" semantic may not filter items the way you expect them to. For example, using a Tracker report with a \"Status\" criteria with \"Status\" = \"On going\" will return an empty column. Items in the Backlog column have an empty value for \"Status\", they can't have \"On going\" and \"empty\" values at the same time.<\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\ItemCollectionRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyBacklog",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyBacklogModel",
            "description": "order  \nadd  \nfrom_column  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyBacklogModel"
            }
          }
        ],
        "summary": "Partial re-order of Kanban backlog items \ud83d\udd10",
        "description": "Partial re-order of Kanban backlog items <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/archive": {
      "get": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceRetrieveArchive",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search string in json format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get archive \u25d1",
        "description": "Get the archived items of a given kanban <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <p><b>query<\/b> is optional. When filled, it is a json object with:<\/p> <p>an integer \"tracker_report_id\" to filter kanban items corresponding to the given Tracker report id. <br><\/p> Example: <pre>{\"tracker_report_id\":41}<\/pre> <br> <p>Reports using the field bound to the \"Status\" semantic may not filter items the way you expect them to. For example, using a Tracker report with a \"Status\" criteria with \"Status\" = \"On going\" will return an empty column. Items in the Archive column have one of the \"closed\" values for \"Status\", they can't have \"On going\" and \"closed\" values at the same time.<\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\ItemCollectionRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyArchive",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyArchiveModel",
            "description": "order  \nadd  \nfrom_column  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyArchiveModel"
            }
          }
        ],
        "summary": "Partial re-order of Kanban archive items \ud83d\udd10",
        "description": "Partial re-order of Kanban archive items <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/items": {
      "get": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceRetrieveItems",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "column_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the column the item belongs to",
            "in": "query",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search string in json format",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 10,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get items \u25d1",
        "description": "Get the items of a given kanban in a given column <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <p><b>query<\/b> is optional. When filled, it is a json object with:<\/p> <p>an integer \"tracker_report_id\" to filter kanban items corresponding to the given Tracker report id. <br><\/p> Example: <pre>{\"tracker_report_id\":41}<\/pre> <br> <p>Reports using the field bound to the \"Status\" semantic may not filter items the way you expect them to. For example, using a Tracker report with a \"Status\" criteria with \"Status\" = \"On going\" and providing the column id for the \"Review\" column will return an empty column. Items cannot have two \"Status\" values at the same time, so this will result in an empty list.<\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\ItemCollectionRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyItems",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "column_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the column the item belongs to",
            "in": "query",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyItemsModel",
            "description": "order  \nadd  \nfrom_column  \n",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyItemsModel"
            }
          }
        ],
        "summary": "Partial re-order of Kanban items \ud83d\udd10",
        "description": "Partial re-order of Kanban items <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/columns": {
      "post": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceCreateColumns",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the Kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "column",
            "description": "label  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanColumnPOSTRepresentation"
            }
          }
        ],
        "summary": "Add a new column \ud83d\udd10",
        "description": "Create a new kanban column. Will add another open value to the field corresponding to the 'Status' semantic. An error will be thrown if the semantic 'Status' is not bound to static values.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanColumnRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateColumns",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Id of the Kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateColumnsModel",
            "description": "**column_ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateColumnsModel"
            }
          }
        ],
        "summary": "Reorder Kanban columns \ud83d\udd10",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/cumulative_flow": {
      "get": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceRetrieveCumulativeFlow",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Start date of the cumulative flow in ISO format (YYYY-MM-DD)",
            "in": "query",
            "required": true
          },
          {
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "End date of the cumulative flow in ISO format (YYYY-MM-DD)",
            "in": "query",
            "required": true
          },
          {
            "name": "interval_between_point",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "Number of days between 2 points of the cumulative flow",
            "in": "query",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "Search string in json format",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get cumulative flow \u25d1",
        "description": "For each column, get the total number of kanban items that were in this column for the requested period. <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <p><b>query<\/b> is optional. When filled, it is a json object with:<\/p> <p>an integer \"tracker_report_id\" to filter kanban items corresponding to the given Tracker report id. <br><\/p> Example: <pre>{\"tracker_report_id\":41}<\/pre> <br> <p>Reports using the field bound to the \"Status\" semantic may not filter items the way you expect them to. For example, using a Tracker report with a \"Status\" criteria with \"Status\" = \"On going\" will return an empty column for other columns such as Archive or Backlog. Columns are based on \"Status\" and items can only have one \"Status\" value at a time.<\/p>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban\/{id}\/tracker_reports": {
      "put": {
        "operationId": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateTrackerReports",
        "tags": ["kanban"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the kanban",
            "in": "path",
            "required": true
          },
          {
            "name": "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateTrackerReportsModel",
            "description": "**tracker_report_ids** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateTrackerReportsModel"
            }
          }
        ],
        "summary": "Add list of report available for filters \ud83d\udd10",
        "description": "<pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <p>The route adds the ability to select tracker reports that could be used to filter a Kanban.<\/p> <br> <p>To add one or more reports to a Kanban, please use the following format: <pre>{\"tracker_report_ids\": [1,2,3]}<\/pre> <\/p> <p>To remove all the selected reports, please use an empty array: <pre>{\"tracker_report_ids\": []}<\/pre> <\/p>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban_columns\/{id}": {
      "patch": {
        "operationId": "modify\\Tuleap\\Kanban\\REST\\v1\\KanbanColumnsResource",
        "tags": ["kanban_columns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the column",
            "in": "path",
            "required": true
          },
          {
            "name": "kanban_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Kanban",
            "in": "query",
            "required": true
          },
          {
            "name": "updated_column_properties",
            "description": "label  \nwip_limit  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanColumnPATCHRepresentation"
            }
          }
        ],
        "summary": "Update column \ud83d\udd10",
        "description": "Change column properties <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "remove\\Tuleap\\Kanban\\REST\\v1\\KanbanColumnsResource",
        "tags": ["kanban_columns"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the column",
            "in": "path",
            "required": true
          },
          {
            "name": "kanban_id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Kanban",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Delete column \ud83d\udd10",
        "description": "Delete a column from its Kanban <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban_items": {
      "post": {
        "operationId": "create\\Tuleap\\Kanban\\REST\\v1\\KanbanItemsResource",
        "tags": ["kanban_items"],
        "parameters": [
          {
            "name": "item",
            "description": "kanban_id  \nlabel  \ncolumn_id  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanItemPOSTRepresentation"
            }
          }
        ],
        "summary": "Add new Kanban Item \ud83d\udd10",
        "description": "Create a kanban item in the given column or backlog <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <pre> \/!\\ Only works for trackers that allow artifact creation with only a \"title\" \/!\\ <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanItemRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/kanban_items\/{id}": {
      "get": {
        "operationId": "retrieve\\Tuleap\\Kanban\\REST\\v1\\KanbanItemsResource",
        "tags": ["kanban_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the artifact",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a Kanban item \ud83d\udd10",
        "description": " Get the Kanban representation of the given artifact. <pre> \/!\\ Kanban REST routes are under construction and subject to changes \/!\\ <\/pre> <br\/> Example: <pre><code> {<br\/> \"id\": 195,<br\/> \"item_name\": \"task\",<br\/> \"label\": \"My Kanban task\",<br\/> \"color\": \"inca_silver\",<br\/> \"card_fields\": [<br\/> {<br\/> \"field_id\": 7132,<br\/> \"type\": \"string\",<br\/> \"label\": \"Title\",<br\/> \"value\": \"My Kanban Task\"<br\/> }<br\/> ],<br\/> \"in_column\": \"backlog\"<br\/> }<br\/> <\/code><\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanItemRepresentation"
            }
          },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc\/{id}": {
      "patch": {
        "operationId": "modifyTuleap\\Artidoc\\REST\\v1\\ArtidocResource",
        "tags": ["artidoc"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the item",
            "in": "path",
            "required": true
          },
          {
            "name": "representation",
            "description": "move  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation"
            }
          }
        ],
        "summary": "Move an existing artidoc document \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc\/{id}\/sections": {
      "get": {
        "operationId": "tuleap\\Artidoc\\REST\\v1\\ArtidocResourceRetrieveSections",
        "tags": ["artidoc"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the document",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "minimum": 1,
            "maximum": 50,
            "description": "Number of elements displayed",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get sections \u25d1",
        "description": "Get sections of an artidoc document",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\Artidoc\\REST\\v1\\ArtidocResourceModifySections",
        "tags": ["artidoc"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the document",
            "in": "path",
            "required": true
          },
          {
            "name": "order",
            "description": "ids  \ndirection  \ncompared_to  \n",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\OrderRepresentation" }
          }
        ],
        "summary": "Reorder sections \u25d1",
        "description": "Reorder sections of a document. <p>Note: only one section can be moved for now.<\/p> <p>Example payload to move section with id \"123\" before the section with id \"124\":<\/p> <pre> {<br> &nbsp;&nbsp;\"order\": {<br> &nbsp;&nbsp;&nbsp;&nbsp;\"ids\": [\"123\"],<br> &nbsp;&nbsp;&nbsp;&nbsp;\"direction\": \"before\",<br> &nbsp;&nbsp;&nbsp;&nbsp;\"compared_to\": \"124\"<br> &nbsp;&nbsp;}<br> } <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc\/{id}\/configuration": {
      "put": {
        "operationId": "tuleap\\Artidoc\\REST\\v1\\ArtidocResourceUpdateConfiguration",
        "tags": ["artidoc"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the document",
            "in": "path",
            "required": true
          },
          {
            "name": "configuration",
            "description": "selected_tracker_ids  \nfields  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\PUTConfigurationRepresentation"
            }
          }
        ],
        "summary": "Set configuration \u25d1",
        "description": "Update the configuration of an artidoc document. <p>Payload example:<\/p> <pre> {<br> &nbsp;&nbsp;\"selected_tracker_ids\": [ 123 ],<br> &nbsp;&nbsp;\"fields\": [<br> &nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"field_id\": 1001,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"display_type\": \"column\"<br> &nbsp;&nbsp;&nbsp;&nbsp;},<br> &nbsp;&nbsp;&nbsp;&nbsp;{<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"field_id\": 1002,<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"display_type\": \"block\"<br> &nbsp;&nbsp;&nbsp;&nbsp;}<br> &nbsp;&nbsp;]<br> } <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc_sections\/{id}": {
      "get": {
        "operationId": "retrieveTuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResource",
        "tags": ["artidoc_sections"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Uuid of the section",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get content of a section \u25d1",
        "description": "",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "updateTuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResource",
        "tags": ["artidoc_sections"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Uuid of the section",
            "in": "path",
            "required": true
          },
          {
            "name": "content",
            "description": "title  \ndescription  \nattachments  \nlevel  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\PUTSectionRepresentation"
            }
          }
        ],
        "summary": "Update section \u25d1",
        "description": "Update the content of a section (title, description, and level) <p>Example payload, to update a section:<\/p> <pre> {<br> &nbsp;&nbsp;\"title\": \"New title\",<br> &nbsp;&nbsp;\"description\": \"New description\",<br> &nbsp;&nbsp;\"attachments\": [123, 124],<br> &nbsp;&nbsp;\"level\": 1,<br> } <\/pre> <p><b>Note:<\/b> attachments field is only used for artifact section and will be ignored for freetext section.<\/p>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResource",
        "tags": ["artidoc_sections"],
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Uuid of the section",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete section \u25d1",
        "description": "Delete the section of a document",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc_sections": {
      "post": {
        "operationId": "tuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResourceCreateSection",
        "tags": ["artidoc_sections"],
        "parameters": [
          {
            "name": "tuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResourceCreateSectionModel",
            "description": "**artidoc_id** (required)  \n**section** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/tuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResourceCreateSectionModel"
            }
          }
        ],
        "summary": "Create section \u25d1",
        "description": "Create one section in an artidoc document. <p>Example payload, to create a section based on an existing artifact #123. The new section will be placed before its sibling:<\/p> <pre> {<br> &nbsp;&nbsp;id: 456,<br> &nbsp;&nbsp;section:{<br> &nbsp;&nbsp;&nbsp;&nbsp;\"artifact\": { \"id\": 123 },<br> &nbsp;&nbsp;&nbsp;&nbsp;\"position\": { \"before\": \"550e8400-e29b-41d4-a716-446655440000\" },<br> &nbsp;&nbsp;}<br> } <\/pre> <p>Another example, if you want to put the section at the end of the document:<\/p> <pre> {<br> &nbsp;&nbsp;id: 456,<br> &nbsp;&nbsp;section:{<br> &nbsp;&nbsp;&nbsp;&nbsp;\"artifact\": { \"id\": 123 },<br> &nbsp;&nbsp;&nbsp;&nbsp;\"position\": null,<br> &nbsp;&nbsp;}<br> } <\/pre> <p>Example payload, to create a section based on freetext. The new section will be placed before its sibling:<\/p> <pre> {<br> &nbsp;&nbsp;id: 456,<br> &nbsp;&nbsp;section:{<br> &nbsp;&nbsp;&nbsp;&nbsp;\"content\": { \"title\": \"My title\", \"description\": \"My freetext description\", type: \"freetext\", attachments: [] },<br> &nbsp;&nbsp;&nbsp;&nbsp;\"position\": { \"before\": \"550e8400-e29b-41d4-a716-446655440000\" },<br> &nbsp;&nbsp;}<br> } <\/pre> <p>Example payload, to create a section based on artifact. The artifact will be created in the configured tracker of the document.<\/p> <pre> {<br> &nbsp;&nbsp;id: 456,<br> &nbsp;&nbsp;section:{<br> &nbsp;&nbsp;&nbsp;&nbsp;\"content\": { \"title\": \"My title\", \"description\": \"My artifact description\", type: \"artifact\", attachments: [] },<br> &nbsp;&nbsp;&nbsp;&nbsp;\"position\": { \"before\": \"550e8400-e29b-41d4-a716-446655440000\" },<br> &nbsp;&nbsp;}<br> } <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "RestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/artidoc_files": {
      "post": {
        "operationId": "createTuleap\\Artidoc\\REST\\v1\\ArtidocFilesResource",
        "tags": ["artidoc_files"],
        "parameters": [
          {
            "name": "payload",
            "description": "artidoc_id  \nname  \nfile_size  \nfile_type  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\FilePOSTRepresentation"
            }
          }
        ],
        "summary": "Create file \ud83d\udd10",
        "description": "Create a file in an artidoc so that it can be attached to a freetext section later.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\CreatedFileRepresentation"
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/baselines": {
      "post": {
        "operationId": "create\\Tuleap\\Baseline\\REST\\BaselinesResource",
        "tags": ["baselines"],
        "parameters": [
          {
            "name": "create\\Tuleap\\Baseline\\REST\\BaselinesResourceModel",
            "description": "**name** (required)  \n**artifact_id** (required)  \nsnapshot_date  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/create\\Tuleap\\Baseline\\REST\\BaselinesResourceModel"
            }
          }
        ],
        "summary": "Create a new Baseline \ud83d\udd10",
        "description": "Create a new Baseline on current date time. Example: <pre> { \"name\": \"\", \"artifact_id\": 14, \"snapshot_date\": \"2019-03-21T14:47:03+01:00\" } <\/pre> snapshot_date format is ISO 8601. Current date is used if no snapshot date provided.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\BaselineRepresentation" }
          },
          "500": { "description": "\\Luracast\\Restler\\RestException" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/baselines\/{id}": {
      "delete": {
        "operationId": "remove\\Tuleap\\Baseline\\REST\\BaselinesResource",
        "tags": ["baselines"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete a Baseline \ud83d\udd10",
        "description": "Delete a Baseline by id.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "\\Luracast\\Restler\\RestException" },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" },
          "409": { "description": "Conflict" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "get": {
        "operationId": "\\Tuleap\\Baseline\\REST\\BaselinesResourceRetrieveById",
        "tags": ["baselines"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The baseline id",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a Baseline \u25d1",
        "description": "Get a Baseline",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\BaselineRepresentation" }
          },
          "500": { "description": "\\Luracast\\Restler\\RestException" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/baselines\/{id}\/artifacts": {
      "get": {
        "operationId": "tuleap\\Baseline\\REST\\BaselineArtifactsResourceRetrieveBaselines",
        "tags": ["baselines"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the baseline",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "JSON object of search criteria properties",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get artifacts \u25d1",
        "description": "Get all artifacts contained in a baseline. <p> By default, only first level (i.e. artifacts linked to baseline artifact). <br\/> <code>query<\/code> parameter can be used to retrieve sub levels. <\/p> <p> <code>query<\/code> parameter: <ul> <li>format is <code>{\"ids\":[x,y,z]}<\/code> where <code>x<\/code>, <code>y<\/code> and <code>z<\/code> are ids of artifacts to retrieve<\/li> <li>it must be a URL-encoded JSON object<\/li> <li>no more than 100 artifacts can be requested at once with this parameter<\/li> <\/ul> <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\BaselineArtifactCollectionRepresentation"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/baselines_comparisons": {
      "post": {
        "operationId": "createTuleap\\Baseline\\REST\\ComparisonsResource",
        "tags": ["baselines_comparisons"],
        "parameters": [
          {
            "name": "createTuleap\\Baseline\\REST\\ComparisonsResourceModel",
            "description": "**base_baseline_id** (required)  \n**compared_to_baseline_id** (required)  \nname  \ncomment  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/createTuleap\\Baseline\\REST\\ComparisonsResourceModel"
            }
          }
        ],
        "summary": "Create a new baseline comparison. \ud83d\udd10",
        "description": " Create a new comparison between two baselines.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\ComparisonRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "NotFoundRestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/baselines_comparisons\/{id}": {
      "get": {
        "operationId": "tuleap\\Baseline\\REST\\ComparisonsResourceRetrieveById",
        "tags": ["baselines_comparisons"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "The comparison id",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get a Comparison \u25d1",
        "description": "Get a comparison between two baselines",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/Tuleap\\Baseline\\REST\\ComparisonRepresentation" }
          },
          "500": { "description": "\\Luracast\\Restler\\RestException" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Baseline\\REST\\ComparisonsResource",
        "tags": ["baselines_comparisons"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete a Comparison \ud83d\udd10",
        "description": "Delete a Comparison by id.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "\\Luracast\\Restler\\RestException" },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_repositories": {
      "post": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryResourceCreateGitlabRepository",
        "tags": ["gitlab_repositories"],
        "parameters": [
          {
            "name": "gitlab_repository",
            "description": "project_id  \ngitlab_server_url  \ngitlab_bot_api_token  \ngitlab_repository_id  \nallow_artifact_closure  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryPOSTRepresentation"
            }
          }
        ],
        "summary": "Integrate a GitLab repository into a project. \ud83d\udd10",
        "description": " \/!\\ This route is under construction. <br> Integrate the given GitLab repository into project. <br> <br> A GitLab repository can be integrated into a project like: <br> <pre> {<br> &nbsp;\"project_id\": 122,<br> &nbsp;\"gitlab_server_url\" : \"https:\/\/example.com\",<br> &nbsp;\"gitlab_bot_api_token\" : \"project_bot_token\",<br> &nbsp;\"gitlab_repository_id\" : 145896<br> }<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/GitlabRepositoryRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_repositories\/{id}": {
      "delete": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryResourceRemoveGitlabRepository",
        "tags": ["gitlab_repositories"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the GitLab repository integration",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete Gitlab Integrations. \ud83d\udd10",
        "description": " \/!\\ This route is under construction. <br> Delete the given GitLab integration.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryResourceModifyId",
        "tags": ["gitlab_repositories"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the Gitlab integration",
            "in": "path",
            "required": true
          },
          {
            "name": "patch_representation",
            "description": "update_bot_api_token  \ngenerate_new_secret  \nallow_artifact_closure  \ncreate_branch_prefix  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryPatchRepresentation"
            }
          }
        ],
        "summary": "Update GitLab integration \ud83d\udd10",
        "description": "<pre> \/!\\ This route is under construction and subject to changes \/!\\ <\/pre> <p>To update the API token, used by Tuleap to communicate with GitLab:<\/p> <pre> {<br> &nbsp;\"update_bot_api_token\": {<br> &nbsp;&nbsp;&nbsp;\"gitlab_api_token\" : \"The new token\"<br> &nbsp;}<br> }<br> <\/pre> <br> <p> <strong>Note:<\/strong> To ensure that the new token has needed access, it will regenerate the webhook used by GitLab. <\/p> <p>To update the webhook secret, used by GitLab to communicate with Tuleap:<\/p> <pre> {<br> &nbsp;\"generate_new_secret\": true }<br> <\/pre> <p>To update the artifact closure option :<\/p> <pre> {<br> &nbsp;\"allow_artifact_closure\" : false<br> }<br> <\/pre> <p>To update the prefix used in the branch creation (feature flag must be enabled):<\/p> <pre> {<br> &nbsp;\"create_branch_prefix\" : \"dev-\"<br> }<br> <\/pre> <p> <strong>Note:<\/strong> You cannot do multiple actions at the same. You will get a <code>400<\/code> if you send either <code>update_bot_api_token<\/code> or <code>generate_new_secret<\/code> or <code>allow_artifact_closure<\/code> or <code>create_branch_prefix<\/code>. <\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/GitlabRepositoryRepresentation" }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_repositories\/{id}\/branches": {
      "get": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryResourceRetrieveBranches",
        "tags": ["gitlab_repositories"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the GitLab integration Only members of the project where the integration lives can access the branches information",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get information on branches of the GitLab repository \ud83d\udd10",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\BranchesInformationRepresentation"
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_branch": {
      "post": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabBranchResourceCreateGitlabBranch",
        "tags": ["gitlab_branch"],
        "parameters": [
          {
            "name": "gitlab_branch",
            "description": "gitlab_integration_id  \nartifact_id  \nreference  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\GitlabBranchPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a GitLab branch. \ud83d\udd10",
        "description": " \/!\\ This route is under construction. <br> Create a branch in a GitLab integration. The branch name is defined by Tuleap. The name will be like {prefix}TULEAP-{artifact_id} <br> <br> A GitLab branch can be created like: <br> <pre> {<br> &nbsp;\"gitlab_integration_id\": 1,<br> &nbsp;\"artifact_id\": 123,<br> &nbsp;\"reference\": \"main\"<br> }<br> <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\GitlabBranchRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_merge_request": {
      "post": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabMergeRequestResourceCreateGitlabMergeRequest",
        "tags": ["gitlab_merge_request"],
        "parameters": [
          {
            "name": "gitlab_merge_request",
            "description": "gitlab_integration_id  \nartifact_id  \nsource_branch  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\GitlabMergeRequestPOSTRepresentation"
            }
          }
        ],
        "summary": "Create a GitLab merge request. \ud83d\udd10",
        "description": " \/!\\ This route is under construction. <br> Create a merge request in a GitLab integration. The merge request title is defined by Tuleap. The title will be like TULEAP-{artifact_id}: {artifact_title} The merge request target branch is the GitLab repository default branch. The merge request will be in draft. <br> <br> A GitLab merge request can be created like: <br> <pre> {<br> &nbsp;\"gitlab_integration_id\": 1,<br> &nbsp;\"artifact_id\": 123,<br> &nbsp;\"source_branch\": \"dev_TULEAP-123\",<br> }<br> <\/pre>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_groups": {
      "post": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabGroupResourceCreateGroup",
        "tags": ["gitlab_groups"],
        "parameters": [
          {
            "name": "gitlab_group_link_representation",
            "description": "gitlab_server_url  \ncreate_branch_prefix  \nproject_id  \ngitlab_group_id  \ngitlab_token  \nallow_artifact_closure  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\Group\\GitlabGroupPOSTRepresentation"
            }
          }
        ],
        "summary": "Link a GitLab group to a Tuleap project. \ud83d\udd10",
        "description": " It will link a GitLab group to a Tuleap project. It will retrieve all the GitLab projects of the group and integrate them with Tuleap. <br> Use an empty string for `create_branch_prefix` if you don't want any prefix: `\"create_branch_prefix\": \"\"`.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/GitlabGroupRepresentation" }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_groups\/{id}": {
      "patch": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabGroupResourceUpdateGroupLink",
        "tags": ["gitlab_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the GitLab group link",
            "in": "path",
            "required": true
          },
          {
            "name": "gitlab_group_link_representation",
            "description": "create_branch_prefix  \nallow_artifact_closure  \ngitlab_token  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Gitlab\\REST\\v1\\Group\\GitlabGroupPATCHRepresentation"
            }
          }
        ],
        "summary": "Update a GitLab group linked with Tuleap. \ud83d\udd10",
        "description": " It will update a GitLab group integration. <br> <p>To update the prefix used in the branch creation for repositories that come with the linked group:<\/p> <pre> {<br> &nbsp;\"create_branch_prefix\": \"dev-\"<br> } <\/pre> <p>Use an empty string for `create_branch_prefix` if you want to remove a prefix: `\"create_branch_prefix\": \"\"`.<\/p> <p>To update the artifact closure for repositories that come with the linked group:<\/p> <pre> {<br> &nbsp;\"allow_artifact_closure\": false<br> } <\/pre> <p>To update the Gitlab token of the linked group:<\/p> <pre> {<br> &nbsp;\"gitlab_token\": \"my_t0k3n\"<br> } <\/pre> <p>All parameters can be updated at once:<\/p> <pre> {<br> &nbsp;\"create_branch_prefix\": \"dev-\",<br> &nbsp;\"allow_artifact_closure\": false,<br> &nbsp;\"gitlab_token\": \"my_t0k3n\"<br> } <\/pre>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/GitlabGroupLinkRepresentation" }
          },
          "404": { "description": "Not Found" },
          "403": { "description": "Forbidden" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabGroupResourceRemoveGroupLink",
        "tags": ["gitlab_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the GitLab group link",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Unlink the Tuleap Project and the GitLab group. \ud83d\udd10",
        "description": " It will not delete the Group on GitLab side. It deletes the link between the Tuleap Project and the GitLab group. All GitLab projects part of the group will stay integrated with Tuleap, their configuration will not change. If you wish to remove the integrations of the GitLab projects part of this group, please call DELETE `\/gitlab_repositories\/{id}` for each one.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/gitlab_groups\/{id}\/synchronize": {
      "post": {
        "operationId": "tuleap\\Gitlab\\REST\\v1\\GitlabGroupResourceCreateSynchronizeGroupLink",
        "tags": ["gitlab_groups"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the GitLab group link",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Synchronize GitLab projects of a group with Tuleap \ud83d\udd10",
        "description": "It will retrieve all the GitLab projects of the group and integrate them with Tuleap. Please note that Group link settings such as the branch prefix name will only be applied to GitLab projects that were <strong>created since last synchronisation<\/strong>. Existing integrations' settings will not change after synchronization. <p><strong>Note:<\/strong> If a GitLab project is removed on the GitLab side, the group link and the repository integration on the Tuleap side will not be removed.<\/p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#\/definitions\/GitlabGroupLinkSynchronizedRepresentation" }
          },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/program_increment\/{id}\/content": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementResourceRetrieveContent",
        "tags": ["program_increment"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the program",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get content of a program increment \u25d1",
        "description": "In a program increment get all the elements planned in team and linked to a program increment",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "patch": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementResourceModifyContent",
        "tags": ["program_increment"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "ID of the program increment",
            "in": "path",
            "required": true
          },
          {
            "name": "patch_representation",
            "description": "add  \norder  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementContentPatchRepresentation"
            }
          }
        ],
        "summary": "Change the program increment's contents \ud83d\udd10",
        "description": "Plan elements in the program increment. <br> Add example <pre> { \"add\": [ { \"id\": 34 } ], \"order\": { \"ids\": [ 34 ], \"compared_to\": 35, \"direction\": \"before\" } } <\/pre> <br> The feature with id 34 is planned (added to the contents) of the Program Increment. It is also ordered before feature with id 35. <code>order<\/code> is not mandatory.",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "400": { "description": "Bad Request" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/program_increment\/{id}\/iterations": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementResourceRetrieveIterations",
        "tags": ["program_increment"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the program increment",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get iterations linked to a program increment \u25d1",
        "description": "In a program increment get all its iterations",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/program_increment\/{id}\/backlog": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementResourceRetrieveBacklog",
        "tags": ["program_increment"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Identifier of the program increment",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the backlog of the program increment \u25d1",
        "description": "It returns all user stories (from Team projects) that are children of features planned in the program increment and that are _not_ also planned in any of the teams' iterations. Contrary to the \"content\" route, it returns user stories, not features. Features are in the Program project, user stories are children of features and are in Team projects.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "500": { "description": "I18NRestException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/program_backlog_items\/{id}\/children": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\ProgramBacklogItemsResourceRetrieveChildren",
        "tags": ["program_backlog_items"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the feature",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get content of a feature \u25d1",
        "description": "In a feature, get all elements planned in team and linked to a program increment",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/iteration\/{id}\/content": {
      "get": {
        "operationId": "tuleap\\ProgramManagement\\REST\\v1\\IterationResourceRetrieveIterations",
        "tags": ["iteration"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the iteration",
            "in": "path",
            "required": true
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "maximum": 50,
            "description": "Number of elements displayed per page",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "Position of the first element to display",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get the user stories linked to an iteration in team projects \u25d1",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/timetracking": {
      "get": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\TimetrackingResourceRetrieveTrackedTimeOnArtifact",
        "tags": ["timetracking"],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "description": "A query",
            "in": "query",
            "required": true
          }
        ],
        "summary": "Retrieve time recorded on something \ud83d\udd10",
        "description": "As of today it only works on one artifact so the query should looks like <code>{ \"artifact_id\": 123 }<\/code>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\ArtifactTimeRepresentation"
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "400": { "description": "Bad Request" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "post": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\TimetrackingResourceAddTime",
        "tags": ["timetracking"],
        "parameters": [
          {
            "name": "item",
            "description": "date_time  \nartifact_id  \ntime_value  \nstep  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingPOSTRepresentation"
            }
          }
        ],
        "summary": "Add a Time \ud83d\udd10",
        "description": "Add a time in Timetracking modal <br><br> Notes on the query parameter <ol> <li>You do not have the obligation to fill in the step field <\/li> <li>A time needs to respect the format \"11:11\" <\/li> <li>Exemple of date \"2018-01-01\"<\/li> <li>artifact_id is an integer like 1<\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/timetracking\/{id}": {
      "put": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\TimetrackingResourceUpdateTime",
        "tags": ["timetracking"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the time",
            "in": "path",
            "required": true
          },
          {
            "name": "item",
            "description": "date_time  \ntime_value  \nstep  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingPUTRepresentation"
            }
          }
        ],
        "summary": "Update a Time \ud83d\udd10",
        "description": "Update a time in Timetracking modal <br><br> Notes on the query parameter <ol> <li>You do not have the obligation to fill in the step field <\/li> <li>A time needs to respect the format \"11:11\" <\/li> <li>Exemple of date \"2018-01-01\"<\/li> <li>time_id is an integers or 602<\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "delete": {
        "operationId": "removeTuleap\\Timetracking\\REST\\v1\\TimetrackingResource",
        "tags": ["timetracking"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the time",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Delete time \ud83d\udd10",
        "description": "Notes on the query parameter <ol> <li>time_id is an integer like 602<\/li> <\/ol>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/timetracking_reports\/{id}": {
      "get": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\TimetrackingReportResourceRetrieveId",
        "tags": ["timetracking_reports"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report",
            "in": "path",
            "required": true
          }
        ],
        "summary": "Get timetracking report \ud83d\udd10",
        "description": "Get the report and report's trackers of the given report id",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingReportRepresentation"
            }
          },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      },
      "put": {
        "operationId": "updateTuleap\\Timetracking\\REST\\v1\\TimetrackingReportResource",
        "tags": ["timetracking_reports"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report",
            "in": "path",
            "required": true
          },
          {
            "name": "updateTuleap\\Timetracking\\REST\\v1\\TimetrackingReportResourceModel",
            "description": "**trackers_id** (required)  \n",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/updateTuleap\\Timetracking\\REST\\v1\\TimetrackingReportResourceModel"
            }
          }
        ],
        "summary": "Update a timetracking report \ud83d\udd10",
        "description": "Use this route to update given report's trackers.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#\/definitions\/Tuleap\\Timetracking\\REST\\v1\\TimetrackingReportRepresentation"
            }
          },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        },
        "security": [{ "api_access_key": [] }]
      }
    },
    "\/timetracking_reports\/{id}\/times": {
      "get": {
        "operationId": "tuleap\\Timetracking\\REST\\v1\\TimetrackingReportResourceRetrieveIdTimes",
        "tags": ["timetracking_reports"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "format": "int64",
            "description": "Id of the report",
            "in": "path",
            "required": true
          },
          {
            "name": "query",
            "type": "string",
            "description": "With a property \"trackers_id\",\"start_date\" and \"end_date\" to search trackers' times.",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "format": "int64",
            "default": 50,
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "format": "int64",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Get times of the report's trackers \ud83d\udd10",
        "description": "Get times af a selected report Times are grouped by trackers <br><br> Notes on the query parameter <ol> <li>The query parameter is optional<\/li> <li>You can specify trackers'id. If you don't, report's default trackers will be searched<\/li> <li>You can specify a start_date and an end_date. If you don't, the times will be recovered on the last month<\/li> <li>One day minimum between the two dates<\/li> <li>end_date must be greater than start_date<\/li> <li>Dates must be in ISO date format<\/li> <\/ol> Examples of queries: <br><br> <ul> <li>{\"trackers_id\":[16,22],\"start_date\":\"2019-01-01T00:00:00+01\",\"end_date\":\"2019-01-20T00:00:00+01\"}<\/li> <li>{\"start_date\":\"2019-01-01T00:00:00+01\",\"end_date\":\"2019-01-20T00:00:00+01\"}<\/li> <li>{\"trackers_id\":[16,22]}<\/li> <\/ul>",
        "responses": {
          "200": { "description": "Success", "schema": { "type": "string" } },
          "500": { "description": "\\User_StatusSuspendedException" }
        },
        "security": [{ "api_access_key": [] }]
      }
    }
  },
  "definitions": {
    "\\Tuleap\\Project\\REST\\v1\\Project\\ProjectFilePOSTRepresentation": {
      "properties": {
        "file_name": { "type": "string", "description": "The filename of the file to upload" },
        "file_size": {
          "type": "integer",
          "format": "int64",
          "description": "The filesize of the file to upload"
        }
      },
      "required": ["file_name", "file_size"]
    },
    "Tuleap\\Project\\REST\\v1\\ProjectPostRepresentation": {
      "properties": {
        "shortname": { "type": "string", "description": "Name of the project" },
        "description": { "type": "string", "description": "Full description of the project" },
        "label": { "type": "string", "description": "LA short description of the project" },
        "is_public": { "type": "boolean", "description": "Define the visibility of the project" },
        "allow_restricted": {
          "type": "boolean",
          "description": "| null Define if the project should accept restricted users"
        },
        "template_id": {
          "type": "integer",
          "format": "int64",
          "description": "Template for this project.",
          "minimum": 1
        },
        "xml_template_name": {
          "type": "string",
          "description": "Template name provided by the platform"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\v1\\CategoryPostRepresentation"
          },
          "description": "Categories to be set a project creation"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\v1\\FieldsPostRepresentation"
          },
          "description": "Custom fields to be set a project creation"
        },
        "from_archive": {
          "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\v1\\Project\\ProjectFilePOSTRepresentation",
          "description": "| null Archive to use to create project"
        }
      },
      "required": ["shortname", "label", "is_public"]
    },
    "Tuleap\\Project\\REST\\v1\\PATCHProjectRepresentation": {
      "properties": {
        "status": {
          "type": "string",
          "description": "status to apply",
          "enum": ["active", "suspended"]
        }
      },
      "required": ["status"]
    },
    "Tuleap\\Project\\REST\\v1\\BannerRepresentation": {
      "properties": { "message": { "type": "string", "description": "" } },
      "required": ["message"]
    },
    "Tuleap\\Project\\REST\\v1\\HeaderBackgroundRepresentation": {
      "properties": {
        "identifier": {
          "type": "string",
          "description": "",
          "enum": [
            "aerial-water",
            "asphalt-rock",
            "beach-daytime",
            "blue-rain",
            "blue-sand",
            "brown-alpaca",
            "brown-desert",
            "brown-grass",
            "brown-textile",
            "brush-daytime",
            "green-grass",
            "green-leaf",
            "green-trees",
            "led-light",
            "ocean-waves",
            "octopus-black",
            "orange-tulip",
            "purple-building",
            "purple-droplet",
            "purple-textile",
            "snow-mountain",
            "tree-water",
            "white-sheep",
            "wooden-surface"
          ]
        }
      },
      "required": ["identifier"]
    },
    "\\Tuleap\\Project\\REST\\v1\\ProjectResourceExtractReferencesModel": {
      "properties": {
        "text": { "type": "string", "description": "the text to add Tuleap references" }
      },
      "required": ["text"]
    },
    "Tuleap\\Project\\REST\\v1\\ProjectSidebarDataRepresentation": {
      "properties": {
        "is_collapsed": { "type": "boolean", "description": "" },
        "config": { "type": "string", "description": "" }
      },
      "required": ["is_collapsed", "config"]
    },
    "Tuleap\\Project\\REST\\v1\\ThirdPartyIntegrationStylesRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "" },
        "variant_name": { "type": "string", "description": "" }
      },
      "required": ["content", "variant_name"]
    },
    "Tuleap\\Project\\REST\\v1\\ThirdPartyIntegrationDataRepresentation": {
      "properties": {
        "project_sidebar": {
          "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\ProjectSidebarDataRepresentation",
          "description": ""
        },
        "styles": {
          "$ref": "#\/definitions\/Tuleap\\Project\\REST\\v1\\ThirdPartyIntegrationStylesRepresentation",
          "description": ""
        },
        "references": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["project_sidebar", "styles", "references"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Service\\DocmanServicePermissionsForGroupsRepresentation": {
      "properties": {
        "can_admin": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        }
      },
      "required": ["can_admin"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsRepresentation": {
      "properties": {
        "can_read": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        },
        "can_write": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        },
        "can_manage": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        }
      },
      "required": ["can_read", "can_write", "can_manage"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\ItemRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "| null" },
        "post_processed_description": { "type": "string", "description": "" },
        "owner": { "type": "string", "description": "" },
        "last_update_date": { "type": "string", "description": "| null" },
        "creation_date": { "type": "string", "description": "| null" },
        "user_can_write": { "type": "boolean", "description": "" },
        "user_can_delete": { "type": "boolean", "description": "" },
        "type": { "type": "string", "description": "| null" },
        "file_properties": { "type": "string", "description": "| null" },
        "embedded_file_properties": { "type": "string", "description": "" },
        "link_properties": { "type": "string", "description": "| null" },
        "wiki_properties": { "type": "string", "description": "| null" },
        "parent_id": { "type": "integer", "format": "int64", "description": "" },
        "is_expanded": { "type": "boolean", "description": "" },
        "can_user_manage": { "type": "boolean", "description": "" },
        "lock_info": { "type": "string", "description": "| null" },
        "metadata": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/ItemMetadataRepresentation" },
          "description": ""
        },
        "has_approval_table": { "type": "boolean", "description": "" },
        "is_approval_table_enabled": { "type": "boolean", "description": "" },
        "approval_table": { "type": "string", "description": "| null" },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsRepresentation",
          "description": ""
        },
        "folder_properties": { "type": "string", "description": "| null" },
        "other_type_properties": { "type": "string", "description": "| null" },
        "move_uri": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "title",
        "description",
        "post_processed_description",
        "owner",
        "last_update_date",
        "creation_date",
        "user_can_write",
        "user_can_delete",
        "type",
        "file_properties",
        "embedded_file_properties",
        "link_properties",
        "wiki_properties",
        "parent_id",
        "is_expanded",
        "can_user_manage",
        "lock_info",
        "metadata",
        "has_approval_table",
        "is_approval_table_enabled",
        "approval_table",
        "folder_properties",
        "other_type_properties",
        "move_uri"
      ]
    },
    "Tuleap\\Docman\\REST\\v1\\Service\\DocmanServiceRepresentation": {
      "properties": {
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Service\\DocmanServicePermissionsForGroupsRepresentation",
          "description": ""
        },
        "root_item": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\ItemRepresentation",
          "description": ""
        }
      }
    },
    "Tuleap\\Git\\REST\\v1\\GitRepositoryListRepresentation": {
      "properties": {
        "repositories": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/GitRepositoryRepresentation" },
          "description": ""
        }
      },
      "required": ["repositories"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceUpdateBacklogModel": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Ids of backlog items"
        }
      },
      "required": ["ids"]
    },
    "Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation": {
      "properties": {
        "ids": { "type": "array", "items": { "type": "integer" }, "description": "" },
        "direction": { "type": "string", "description": "before|after" },
        "compared_to": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["ids", "direction", "compared_to"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\AgileDashboardProjectResourceModifyBacklogModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogAddRepresentation"
          },
          "description": "Add (move) item to the backlog"
        },
        "remove": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogRemoveRepresentation"
          },
          "description": "Remove item to the backlog"
        }
      }
    },
    "Tuleap\\HudsonGit\\REST\\v1\\JenkinsServerRepresentationCollection": {
      "properties": {
        "git_jenkins_servers_representations": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/JenkinsServerRepresentation" },
          "description": ""
        },
        "total": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["git_jenkins_servers_representations", "total"]
    },
    "\\Tuleap\\FRS\\REST\\v1\\ServicePermissionsForGroupsRepresentation": {
      "properties": {
        "can_admin": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        },
        "can_read": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\MinimalUserGroupRepresentation"
          },
          "description": ""
        }
      },
      "required": ["can_admin", "can_read"]
    },
    "\\Tuleap\\FRS\\REST\\v1\\ServiceRepresentation": {
      "properties": {
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\FRS\\REST\\v1\\ServicePermissionsForGroupsRepresentation",
          "description": ""
        }
      }
    },
    "CollectionOfLabeledItemsRepresentation": {
      "properties": {
        "labeled_items": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/LabeledItemRepresentation" },
          "description": ""
        },
        "are_there_items_user_cannot_see": { "type": "boolean", "description": "" }
      },
      "required": ["labeled_items", "are_there_items_user_cannot_see"]
    },
    "Tuleap\\MediawikiStandalone\\Permissions\\UserPermissions": {
      "properties": {
        "is_bot": { "type": "boolean", "description": "" },
        "is_reader": { "type": "boolean", "description": "" },
        "is_writer": { "type": "boolean", "description": "" },
        "is_admin": { "type": "boolean", "description": "" }
      },
      "required": ["is_reader", "is_writer", "is_admin"]
    },
    "Tuleap\\MediawikiStandalone\\REST\\v1\\GetPermissionsRepresentation": {
      "properties": {
        "permissions": {
          "$ref": "#\/definitions\/Tuleap\\MediawikiStandalone\\Permissions\\UserPermissions",
          "description": ""
        }
      },
      "required": ["permissions"]
    },
    "Tuleap\\Baseline\\REST\\BaselinesPageRepresentation": {
      "properties": {
        "baselines": { "type": "string", "description": "" },
        "total_count": { "type": "string", "description": "" }
      },
      "required": ["baselines", "total_count"]
    },
    "Tuleap\\Baseline\\REST\\ComparisonsPageRepresentation": {
      "properties": {
        "comparisons": { "type": "string", "description": "" },
        "total_count": { "type": "string", "description": "" }
      },
      "required": ["comparisons", "total_count"]
    },
    "\\Tuleap\\ProgramManagement\\REST\\v1\\PlanPutPermissions": {
      "properties": {
        "can_prioritize_features": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "",
          "minimum": 1
        }
      },
      "required": ["can_prioritize_features"]
    },
    "\\Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutPlanIterationRepresentation": {
      "properties": {
        "iteration_tracker_id": { "type": "integer", "format": "int64", "description": "" },
        "iteration_label": { "type": "string", "description": "| null", "maximum": 255 },
        "iteration_sub_label": { "type": "string", "description": "| null", "maximum": 255 }
      },
      "required": ["iteration_tracker_id"]
    },
    "Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutPlanRepresentation": {
      "properties": {
        "program_increment_tracker_id": { "type": "integer", "format": "int64", "description": "" },
        "plannable_tracker_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": ""
        },
        "permissions": {
          "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\PlanPutPermissions",
          "description": ""
        },
        "program_increment_label": { "type": "string", "description": "| null", "maximum": 255 },
        "program_increment_sub_label": {
          "type": "string",
          "description": "| null",
          "maximum": 255
        },
        "iteration": {
          "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutPlanIterationRepresentation",
          "description": "| null"
        }
      },
      "required": ["program_increment_tracker_id", "plannable_tracker_ids", "permissions"]
    },
    "Tuleap\\ProgramManagement\\REST\\v1\\ProjectResourcePutTeamsRepresentation": {
      "properties": {
        "team_ids": { "type": "array", "items": { "type": "integer" }, "description": "" }
      },
      "required": ["team_ids"]
    },
    "\\Tuleap\\ProgramManagement\\REST\\v1\\FeatureElementToOrderInvolvedInChangeRepresentation": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "",
          "minimum": 1,
          "maximum": 1
        },
        "direction": { "type": "string", "description": "", "enum": ["after", "before"] },
        "compared_to": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["ids", "direction", "compared_to"]
    },
    "Tuleap\\ProgramManagement\\REST\\v1\\BacklogPatchRepresentation": {
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\TopBacklogElementInvolvedInChangeRepresentation"
          },
          "description": "",
          "maximum": 1
        },
        "remove": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\TopBacklogElementInvolvedInChangeRepresentation"
          },
          "description": "",
          "maximum": 1
        },
        "remove_from_program_increment_to_add_to_the_backlog": {
          "type": "boolean",
          "description": ""
        },
        "order": {
          "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\FeatureElementToOrderInvolvedInChangeRepresentation",
          "description": "| null $order"
        }
      },
      "required": ["add", "remove"]
    },
    "createTuleap\\Token\\REST\\v1\\TokenResourceModel": {
      "properties": {
        "username": { "type": "string", "description": "The username of the user" },
        "password": { "type": "string", "description": "The password of the user" }
      },
      "required": ["username", "password"]
    },
    "Tuleap\\Project\\REST\\UserGroupRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "users_uri": { "type": "string", "description": "" },
        "short_name": { "type": "string", "description": "" },
        "key": { "type": "string", "description": "" },
        "project": { "type": "string", "description": "" },
        "additional_information": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/UserGroupAdditionalInformation" },
          "description": "| null[]"
        }
      },
      "required": [
        "id",
        "uri",
        "label",
        "users_uri",
        "short_name",
        "key",
        "project",
        "additional_information"
      ]
    },
    "tuleap\\Project\\REST\\v1\\UserGroupResourceUpdateUsersModel": {
      "properties": {
        "user_references": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["user_references"]
    },
    "Tuleap\\Project\\REST\\UserGroupPOSTRepresentation": {
      "properties": {
        "project_id": { "type": "integer", "format": "int64", "description": "" },
        "short_name": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" }
      },
      "required": ["project_id", "short_name"]
    },
    "tuleap\\User\\REST\\v1\\UserResourceModifyUserDetailsModel": {
      "properties": {
        "values": {
          "type": "array",
          "items": { "type": "string" },
          "description": "User fields values"
        }
      },
      "required": ["values"]
    },
    "Tuleap\\User\\REST\\v1\\UserPreferenceRepresentation": {
      "properties": {
        "key": { "type": "string", "description": "" },
        "value": { "type": "string", "description": "| false" }
      },
      "required": ["key", "value"]
    },
    "Tuleap\\User\\REST\\v1\\UserHistoryRepresentation": {
      "properties": {
        "entries": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["entries"]
    },
    "tuleap\\User\\REST\\v1\\UserResourceUpdateHistoryModel": {
      "properties": {
        "history_entries": {
          "type": "array",
          "items": { "type": "string" },
          "description": "History entries representation"
        }
      },
      "required": ["history_entries"]
    },
    "Tuleap\\REST\\v1\\PaginatedProjectFieldRepresentations": {
      "properties": {
        "project_fields_representation": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/ProjectFieldRepresentation" },
          "description": ""
        },
        "total_size": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["project_fields_representation", "total_size"]
    },
    "Tuleap\\PhpWiki\\REST\\v1\\PhpWikiPageFullRepresentation": {
      "properties": {
        "last_version": { "type": "integer", "format": "int64", "description": "" },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\PhpWiki\\REST\\v1\\PhpWikiPageVersionRepresentation"
          },
          "description": ""
        },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" }
      },
      "required": ["last_version", "versions", "id", "uri", "name"]
    },
    "Tuleap\\User\\AccessKey\\REST\\AccessKeyPOSTRepresentation": {
      "properties": {
        "description": { "type": "string", "description": "" },
        "expiration_date": { "type": "string", "description": "" },
        "scopes": {
          "type": "array",
          "items": { "type": "string" },
          "description": "",
          "minimum": 1
        }
      },
      "required": ["description"]
    },
    "Tuleap\\User\\AccessKey\\REST\\UserAccessKeyCreationRepresentation": {
      "properties": { "identifier": { "type": "string", "description": "" } },
      "required": ["identifier"]
    },
    "Tuleap\\User\\AccessKey\\REST\\UserAccessKeyRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "creation_date": { "type": "string", "description": "" },
        "expiration_date": { "type": "string", "description": "| null" },
        "description": { "type": "string", "description": "" },
        "last_used_on": { "type": "string", "description": "| null" },
        "last_used_by": { "type": "string", "description": "| null" },
        "scopes": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/UserAccessKeyScopeRepresentation" },
          "description": ""
        }
      },
      "required": [
        "id",
        "creation_date",
        "expiration_date",
        "description",
        "last_used_on",
        "last_used_by",
        "scopes"
      ]
    },
    "Tuleap\\Project\\REST\\v1\\Service\\ServicePUTRepresentation": {
      "properties": {
        "is_enabled": { "type": "boolean", "description": "Enable or disable the service" }
      },
      "required": ["is_enabled"]
    },
    "Tuleap\\InviteBuddy\\REST\\v1\\InvitationPOSTRepresentation": {
      "properties": {
        "emails": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "",
          "minimum": 1
        },
        "custom_message": { "type": "string", "description": "" },
        "project_id": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["emails"]
    },
    "Tuleap\\InviteBuddy\\REST\\v1\\InvitationPOSTResultRepresentation": {
      "properties": {
        "failures": { "type": "array", "items": { "type": "string" }, "description": "" },
        "already_project_members": {
          "type": "array",
          "items": { "type": "string" },
          "description": ""
        },
        "known_users_added_to_project_members": {
          "type": "array",
          "items": { "type": "string" },
          "description": ""
        },
        "known_users_not_alive": {
          "type": "array",
          "items": { "type": "string" },
          "description": ""
        },
        "known_users_are_restricted": {
          "type": "array",
          "items": { "type": "string" },
          "description": ""
        }
      },
      "required": [
        "failures",
        "already_project_members",
        "known_users_added_to_project_members",
        "known_users_not_alive",
        "known_users_are_restricted"
      ]
    },
    "Tuleap\\Platform\\Banner\\REST\\v1\\BannerRepresentation": {
      "properties": {
        "message": { "type": "string", "description": "" },
        "importance": {
          "type": "string",
          "description": "",
          "enum": ["standard", "warning", "critical"]
        },
        "expiration_date": {
          "type": "string",
          "description": "Expiration date in ISO 8601 date format"
        }
      },
      "required": ["message", "importance"]
    },
    "Tuleap\\BuildVersion\\REST\\v1\\VersionRepresentation": {
      "properties": {
        "flavor_name": { "type": "string", "description": "" },
        "version_number": { "type": "string", "description": "" }
      },
      "required": ["flavor_name", "version_number"]
    },
    "Tuleap\\Docman\\REST\\v1\\ItemRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "| null" },
        "post_processed_description": { "type": "string", "description": "" },
        "owner": { "type": "string", "description": "" },
        "last_update_date": { "type": "string", "description": "| null" },
        "creation_date": { "type": "string", "description": "| null" },
        "user_can_write": { "type": "boolean", "description": "" },
        "user_can_delete": { "type": "boolean", "description": "" },
        "type": { "type": "string", "description": "| null" },
        "file_properties": { "type": "string", "description": "| null" },
        "embedded_file_properties": { "type": "string", "description": "" },
        "link_properties": { "type": "string", "description": "| null" },
        "wiki_properties": { "type": "string", "description": "| null" },
        "parent_id": { "type": "integer", "format": "int64", "description": "" },
        "is_expanded": { "type": "boolean", "description": "" },
        "can_user_manage": { "type": "boolean", "description": "" },
        "lock_info": { "type": "string", "description": "| null" },
        "metadata": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/ItemMetadataRepresentation" },
          "description": ""
        },
        "has_approval_table": { "type": "boolean", "description": "" },
        "is_approval_table_enabled": { "type": "boolean", "description": "" },
        "approval_table": { "type": "string", "description": "| null" },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsRepresentation",
          "description": ""
        },
        "folder_properties": { "type": "string", "description": "| null" },
        "other_type_properties": { "type": "string", "description": "| null" },
        "move_uri": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "title",
        "description",
        "post_processed_description",
        "owner",
        "last_update_date",
        "creation_date",
        "user_can_write",
        "user_can_delete",
        "type",
        "file_properties",
        "embedded_file_properties",
        "link_properties",
        "wiki_properties",
        "parent_id",
        "is_expanded",
        "can_user_manage",
        "lock_info",
        "metadata",
        "has_approval_table",
        "is_approval_table_enabled",
        "approval_table",
        "folder_properties",
        "other_type_properties",
        "move_uri"
      ]
    },
    "\\Tuleap\\Docman\\REST\\v1\\MoveItem\\DocmanMoveItemRepresentation": {
      "properties": {
        "destination_folder_id": {
          "type": "integer",
          "format": "int64",
          "description": "$destination_folder_id Destination folder ID"
        }
      },
      "required": ["destination_folder_id"]
    },
    "Tuleap\\Docman\\REST\\v1\\DocmanPATCHItemRepresentation": {
      "properties": {
        "move": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\MoveItem\\DocmanMoveItemRepresentation",
          "description": "$move"
        }
      },
      "required": ["move"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Files\\FilePropertiesPOSTPATCHRepresentation": {
      "properties": {
        "file_name": { "type": "string", "description": "Name of the file" },
        "file_size": { "type": "integer", "format": "int64", "description": "Size of the file" }
      },
      "required": ["file_name", "file_size"]
    },
    "Tuleap\\Docman\\REST\\v1\\Files\\DocmanFileVersionPOSTRepresentation": {
      "properties": {
        "version_title": { "type": "string", "description": "Title of version" },
        "change_log": { "type": "string", "description": "Description of changes" },
        "file_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Files\\FilePropertiesPOSTPATCHRepresentation",
          "description": "File properties must be set when creating a new file"
        },
        "should_lock_file": { "type": "boolean", "description": "Lock file while updating" },
        "approval_table_action": {
          "type": "string",
          "description": "| null action for approval table when an item is updated",
          "enum": ["copy", "reset", "empty"]
        }
      },
      "required": ["file_properties", "should_lock_file"]
    },
    "Tuleap\\Docman\\REST\\v1\\Files\\CreatedItemFilePropertiesRepresentation": {
      "properties": {
        "upload_href": {
          "type": "string",
          "description": "URL to upload the file using the tus resumable upload protocol"
        }
      },
      "required": ["upload_href"]
    },
    "Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataRepresentation": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "owner_id": {
          "type": "integer",
          "format": "int64",
          "description": "The new owner id of the item"
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "title": { "type": "string", "description": "Item title" },
        "description": { "type": "string", "description": "Item description" }
      },
      "required": ["owner_id", "title"]
    },
    "Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation": {
      "properties": {
        "can_read": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_write": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_manage": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        }
      },
      "required": ["can_read", "can_write", "can_manage"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation": {
      "properties": {
        "can_read": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_write": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_manage": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        }
      },
      "required": ["can_read", "can_write", "can_manage"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation": {
      "properties": {
        "item_id": { "type": "integer", "format": "int64", "description": "$item_id" }
      },
      "required": ["item_id"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Files\\DocmanPOSTFilesRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "file_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Files\\FilePropertiesPOSTPATCHRepresentation",
          "description": "File properties must be set when creating a new file Mandatory if copy is not set"
        },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "Tuleap\\Docman\\REST\\v1\\CreatedItemRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "file_properties": { "type": "string", "description": "| null" }
      },
      "required": ["id", "uri"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Folders\\DocmanFolderPOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\Empties\\DocmanEmptyPOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\Wiki\\WikiPropertiesPOSTPATCHRepresentation": {
      "properties": { "page_name": { "type": "string", "description": "" } },
      "required": ["page_name"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Wiki\\DocmanWikiPOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "wiki_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Wiki\\WikiPropertiesPOSTPATCHRepresentation",
          "description": "Mandatory if copy is not set"
        },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedPropertiesPOSTPATCHRepresentation": {
      "properties": { "content": { "type": "string", "description": "" } }
    },
    "Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\DocmanEmbeddedPOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "embedded_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedPropertiesPOSTPATCHRepresentation",
          "description": "Mandatory if copy is not set"
        },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\Links\\LinkPropertiesPOSTPATCHRepresentation": {
      "properties": { "link_url": { "type": "string", "description": "" } },
      "required": ["link_url"]
    },
    "\\Tuleap\\Docman\\REST\\v1\\Links\\DocmanLinkPOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "link_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Links\\LinkPropertiesPOSTPATCHRepresentation",
          "description": "Mandatory if copy is not set"
        },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": ""
        },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Mandatory if others parameters are not set"
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\Others\\DocmanOtherTypePOSTRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "Item title Mandatory if copy is not set" },
        "description": { "type": "string", "description": "Item description" },
        "status": {
          "type": "string",
          "description": "| null Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "obsolescence_date": { "type": "string", "description": "| null Obsolescence date" },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\POSTCustomMetadataRepresentation"
          },
          "description": "| null The metadata"
        },
        "permissions_for_groups": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanItemPermissionsForGroupsSetRepresentation",
          "description": "The permissions"
        },
        "type": { "type": "string", "description": "| null The type of the item" },
        "copy": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\CopyItem\\DocmanCopyItemRepresentation",
          "description": "Where to copy paste the item. Mandatory if others parameters are not set."
        }
      }
    },
    "\\Tuleap\\Docman\\REST\\v1\\Metadata\\PUTRecursiveStatusRepresentation": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Item status",
          "enum": ["none", "draft", "approved", "rejected"]
        },
        "recursion": {
          "type": "string",
          "description": "recursive option",
          "enum": ["none", "folders", "all_items"]
        }
      },
      "required": ["recursion"]
    },
    "Tuleap\\Docman\\REST\\v1\\Metadata\\PUTMetadataFolderRepresentation": {
      "properties": {
        "status": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\PUTRecursiveStatusRepresentation",
          "description": ""
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Metadata\\PUTCustomMetadataRepresentation"
          },
          "description": "| null"
        },
        "title": { "type": "string", "description": "Item title" },
        "description": { "type": "string", "description": "Item description" }
      },
      "required": ["status", "title"]
    },
    "Tuleap\\Docman\\REST\\v1\\Permissions\\DocmanFolderPermissionsForGroupsPUTRepresentation": {
      "properties": {
        "apply_permissions_on_children": { "type": "boolean", "description": "" },
        "can_read": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_write": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        },
        "can_manage": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Permissions\\MinimalUserGroupRepresentationForUpdate"
          },
          "description": ""
        }
      },
      "required": ["can_read", "can_write", "can_manage"]
    },
    "Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\DocmanEmbeddedFileVersionPOSTRepresentation": {
      "properties": {
        "version_title": { "type": "string", "description": "Title of version" },
        "change_log": { "type": "string", "description": "Description of changes" },
        "embedded_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedPropertiesPOSTPATCHRepresentation",
          "description": "Embedded file properties must be set when creating a new file"
        },
        "should_lock_file": { "type": "boolean", "description": "Lock file while updating" },
        "approval_table_action": {
          "type": "string",
          "description": "| null action for approval table when an item is updated",
          "enum": ["copy", "reset", "empty"]
        }
      },
      "required": ["embedded_properties", "should_lock_file"]
    },
    "Tuleap\\Docman\\REST\\v1\\Wiki\\DocmanWikiVersionPOSTRepresentation": {
      "properties": {
        "version_title": { "type": "string", "description": "Title of version" },
        "change_log": { "type": "string", "description": "Description of changes" },
        "wiki_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Wiki\\WikiPropertiesPOSTPATCHRepresentation",
          "description": "Link properties must be set when creating a new file"
        },
        "should_lock_file": { "type": "boolean", "description": "Lock file while updating" }
      },
      "required": ["wiki_properties", "should_lock_file"]
    },
    "Tuleap\\Docman\\REST\\v1\\Links\\DocmanLinkVersionPOSTRepresentation": {
      "properties": {
        "version_title": { "type": "string", "description": "Title of version" },
        "change_log": { "type": "string", "description": "Description of changes" },
        "link_properties": {
          "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Links\\LinkPropertiesPOSTPATCHRepresentation",
          "description": "Link properties must be set when creating a new file"
        },
        "should_lock_file": { "type": "boolean", "description": "Lock file while updating" },
        "approval_table_action": {
          "type": "string",
          "description": "| null action for approval table when an item is updated",
          "enum": ["copy", "reset", "empty"]
        }
      },
      "required": ["link_properties", "should_lock_file"]
    },
    "Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\EmbeddedPropertiesPOSTPATCHRepresentation": {
      "properties": { "content": { "type": "string", "description": "" } }
    },
    "Tuleap\\Docman\\REST\\v1\\Links\\LinkPropertiesPOSTPATCHRepresentation": {
      "properties": { "link_url": { "type": "string", "description": "" } },
      "required": ["link_url"]
    },
    "Tuleap\\Docman\\REST\\v1\\Files\\FilePropertiesPOSTPATCHRepresentation": {
      "properties": {
        "file_name": { "type": "string", "description": "Name of the file" },
        "file_size": { "type": "integer", "format": "int64", "description": "Size of the file" }
      },
      "required": ["file_name", "file_size"]
    },
    "Tuleap\\Docman\\REST\\v1\\Search\\PostSearchRepresentation": {
      "properties": {
        "global_search": { "type": "string", "description": "search in all string properties" },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Search\\SearchPropertyRepresentation"
          },
          "description": ""
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Docman\\REST\\v1\\Search\\SearchSortRepresentation"
          },
          "description": ""
        },
        "limit": { "type": "integer", "format": "int64", "description": "limit", "maximum": 50 },
        "offset": { "type": "integer", "format": "int64", "description": "offset" }
      }
    },
    "Tuleap\\Docman\\REST\\v1\\EmbeddedFiles\\VersionContentRepresentation": {
      "properties": {
        "version_number": {
          "type": "integer",
          "format": "int64",
          "description": "The number of the version"
        },
        "content": { "type": "string", "description": "The content" }
      },
      "required": ["version_number", "content"]
    },
    "Tuleap\\Git\\REST\\v1\\GitRepositoryRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "path": { "type": "string", "description": "" },
        "path_without_project": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "last_update_date": { "type": "string", "description": "" },
        "permissions": { "type": "string", "description": "| null" },
        "server": { "type": "string", "description": "| null" },
        "html_url": { "type": "string", "description": "" },
        "default_branch": { "type": "string", "description": "" },
        "additional_information": {
          "type": "array",
          "items": { "type": "string" },
          "description": ""
        }
      },
      "required": [
        "id",
        "uri",
        "name",
        "label",
        "path",
        "path_without_project",
        "description",
        "last_update_date",
        "permissions",
        "server",
        "html_url",
        "default_branch",
        "additional_information"
      ]
    },
    "Tuleap\\Git\\REST\\v1\\GitRepositoryGerritMigratePATCHRepresentation": {
      "properties": {
        "server": { "type": "integer", "format": "int64", "description": "" },
        "permissions": { "type": "string", "description": "", "enum": ["default", " none"] }
      },
      "required": ["server", "permissions"]
    },
    "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModifyIdModel": {
      "properties": {
        "migrate_to_gerrit": {
          "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitRepositoryGerritMigratePATCHRepresentation",
          "description": ""
        },
        "disconnect_from_gerrit": {
          "type": "string",
          "description": "",
          "enum": ["delete", "read-only", "noop"]
        },
        "default_branch": {
          "type": "string",
          "description": "New default branch to set, the branch needs to exist"
        }
      }
    },
    "create\\Tuleap\\Git\\REST\\v1\\RepositoryResourceModel": {
      "properties": {
        "project_id": { "type": "integer", "format": "int64", "description": "project id" },
        "name": { "type": "string", "description": "Repository name" }
      },
      "required": ["project_id", "name"]
    },
    "\\Tuleap\\Git\\REST\\v1\\RepositoryResourceCreateCommitStatusModel": {
      "properties": {
        "state": { "type": "string", "description": "", "enum": ["failure", "success", "pending"] },
        "token": { "type": "string", "description": "" }
      },
      "required": ["state"]
    },
    "Tuleap\\Git\\REST\\v1\\GitFileContentRepresentation": {
      "properties": {
        "encoding": { "type": "string", "description": "" },
        "size": { "type": "integer", "format": "int64", "description": "" },
        "name": { "type": "string", "description": "" },
        "path": { "type": "string", "description": "" },
        "content": { "type": "string", "description": "" }
      },
      "required": ["encoding", "size", "name", "path", "content"]
    },
    "Tuleap\\Git\\REST\\v1\\GitBranchPOSTRepresentation": {
      "properties": {
        "branch_name": { "type": "string", "description": "" },
        "reference": { "type": "string", "description": "" }
      },
      "required": ["branch_name", "reference"]
    },
    "Tuleap\\Git\\REST\\v1\\GitBranchRepresentation": {
      "properties": {
        "name": { "type": "string", "description": "" },
        "commit": { "type": "string", "description": "" },
        "html_url": { "type": "string", "description": "" }
      },
      "required": ["name", "commit", "html_url"]
    },
    "Tuleap\\User\\REST\\MinimalUserRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "| null" },
        "uri": { "type": "string", "description": "| null" },
        "user_url": { "type": "string", "description": "| null" },
        "real_name": { "type": "string", "description": "| null" },
        "display_name": { "type": "string", "description": "" },
        "username": { "type": "string", "description": "| null" },
        "ldap_id": { "type": "string", "description": "| null" },
        "avatar_url": { "type": "string", "description": "" },
        "is_anonymous": { "type": "boolean", "description": "" },
        "has_avatar": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "uri",
        "user_url",
        "real_name",
        "display_name",
        "username",
        "ldap_id",
        "avatar_url",
        "is_anonymous",
        "has_avatar"
      ]
    },
    "Tuleap\\Git\\REST\\v1\\GitCommitStatusRepresentation": {
      "properties": {
        "name": { "type": "string", "description": "" },
        "date": { "type": "string", "format": "date", "description": "" }
      },
      "required": ["name", "date"]
    },
    "Tuleap\\Git\\REST\\v1\\GitCommitVerificationRepresentation": {
      "properties": { "signature": { "type": "string", "description": "| null" } },
      "required": ["signature"]
    },
    "Tuleap\\Git\\REST\\v1\\GitCommitRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "author_name": { "type": "string", "description": "" },
        "authored_date": { "type": "string", "description": "" },
        "committed_date": { "type": "string", "description": "" },
        "title": { "type": "string", "description": "" },
        "message": { "type": "string", "description": "" },
        "author_email": { "type": "string", "description": "" },
        "author": {
          "$ref": "#\/definitions\/Tuleap\\User\\REST\\MinimalUserRepresentation",
          "description": ""
        },
        "html_url": { "type": "string", "description": "" },
        "commit_status": {
          "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitCommitStatusRepresentation",
          "description": ""
        },
        "verification": {
          "$ref": "#\/definitions\/Tuleap\\Git\\REST\\v1\\GitCommitVerificationRepresentation",
          "description": ""
        },
        "cross_references": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/ReferenceRepresentation" },
          "description": ""
        }
      },
      "required": [
        "id",
        "author_name",
        "authored_date",
        "committed_date",
        "title",
        "message",
        "author_email",
        "html_url",
        "commit_status",
        "verification",
        "cross_references"
      ]
    },
    "Tuleap\\PullRequest\\REST\\v1\\RepositoryPullRequestRepresentation": {
      "properties": {
        "collection": { "type": "string", "description": "" },
        "total_size": { "type": "string", "description": "" }
      },
      "required": ["collection", "total_size"]
    },
    "Tuleap\\Tracker\\REST\\TrackerReference": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "ID of the tracker" },
        "uri": { "type": "string", "description": "URI of the tracker" },
        "label": { "type": "string", "description": "Display Name of the tracker" },
        "color": { "type": "string", "description": "Color of the tracker" },
        "project": { "type": "string", "description": "" }
      },
      "required": ["id"]
    },
    "\\Tuleap\\Tracker\\REST\\TrackerReference": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "ID of the tracker" },
        "uri": { "type": "string", "description": "URI of the tracker" },
        "label": { "type": "string", "description": "Display Name of the tracker" },
        "color": { "type": "string", "description": "Color of the tracker" },
        "project": { "type": "string", "description": "" }
      },
      "required": ["id"]
    },
    "Tuleap\\Tracker\\REST\\Artifact\\ArtifactReference": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "ID of the milestone" },
        "uri": { "type": "string", "description": "URI of the milestone" },
        "tracker": {
          "$ref": "#\/definitions\/\\Tuleap\\Tracker\\REST\\TrackerReference",
          "description": ""
        }
      },
      "required": ["id"]
    },
    "createTuleap\\Tracker\\REST\\v1\\ArtifactsResourceModel": {
      "properties": {
        "tracker": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\TrackerReference",
          "description": "Tracker in which the artifact must be created"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\ArtifactValuesRepresentation"
          },
          "description": "Artifact fields values"
        },
        "values_by_field": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Artifact fields values indexed by field"
        },
        "from_artifact": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\ArtifactReference",
          "description": "Id of the artifact to copy"
        }
      },
      "required": ["tracker"]
    },
    "\\Tuleap\\Tracker\\REST\\v1\\MoveRepresentation": {
      "properties": {
        "tracker_id": { "type": "integer", "format": "int64", "description": "" },
        "dry_run": { "type": "boolean", "description": "" },
        "should_populate_feedback_on_success": { "type": "boolean", "description": "" }
      },
      "required": ["tracker_id"]
    },
    "\\Tuleap\\Tracker\\REST\\v1\\ArtifactPatchRepresentation": {
      "properties": {
        "move": {
          "$ref": "#\/definitions\/\\Tuleap\\Tracker\\REST\\v1\\MoveRepresentation",
          "description": ""
        }
      },
      "required": ["move"]
    },
    "ArtifactPatchDryRunFieldsResponseRepresentation": {
      "properties": {
        "fields_migrated": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalFieldRepresentation" },
          "description": ""
        },
        "fields_not_migrated": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalFieldRepresentation" },
          "description": ""
        },
        "fields_partially_migrated": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalFieldRepresentation" },
          "description": ""
        }
      },
      "required": ["fields_migrated", "fields_not_migrated", "fields_partially_migrated"]
    },
    "ArtifactPatchDryRunResponseRepresentation": {
      "properties": {
        "fields": {
          "$ref": "#\/definitions\/ArtifactPatchDryRunFieldsResponseRepresentation",
          "description": ""
        }
      },
      "required": ["fields"]
    },
    "Tuleap\\Tracker\\REST\\v1\\ArtifactPatchResponseRepresentation": {
      "properties": {
        "dry_run": {
          "$ref": "#\/definitions\/ArtifactPatchDryRunResponseRepresentation",
          "description": "| null"
        }
      },
      "required": ["dry_run"]
    },
    "Tuleap\\Tracker\\REST\\v1\\ArtifactLinkRepresentation": {
      "properties": {
        "natures": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["natures"]
    },
    "Tuleap\\Tracker\\REST\\Artifact\\Changeset\\Comment\\NewChangesetCommentRepresentation": {
      "properties": {
        "body": { "type": "string", "description": "Content of the comment" },
        "format": { "type": "string", "description": "Type of the comment (text|html)" }
      },
      "required": ["format"]
    },
    "tuleap\\Tracker\\REST\\v1\\ArtifactsResourceUpdateIdModel": {
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\v1\\ArtifactValuesRepresentation"
          },
          "description": "Artifact fields values"
        },
        "comment": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\Changeset\\Comment\\NewChangesetCommentRepresentation",
          "description": "Comment about update {body, format}"
        }
      },
      "required": ["values"]
    },
    "Tuleap\\Tracker\\REST\\Artifact\\FileDataRepresentation": {
      "properties": { "data": { "type": "string", "description": "Chunk" } },
      "required": ["data"]
    },
    "createTuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceModel": {
      "properties": {
        "name": { "type": "string", "description": "Name of the file" },
        "mimetype": { "type": "string", "description": "Mime-Type of the file" },
        "content": { "type": "string", "description": "First chunk of the file (base64-encoded)" },
        "description": { "type": "string", "description": "Description of the file" }
      },
      "required": ["name", "mimetype", "content"]
    },
    "Tuleap\\Tracker\\REST\\Artifact\\FileInfoRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "ID of the file" },
        "submitted_by": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the user who created the file"
        },
        "description": { "type": "string", "description": "Description of the file" },
        "name": { "type": "string", "description": "Name of the file" },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the file in bytes"
        },
        "type": { "type": "string", "description": "Mime type" },
        "html_url": { "type": "string", "description": "" },
        "html_preview_url": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "submitted_by",
        "description",
        "name",
        "size",
        "type",
        "html_url",
        "html_preview_url",
        "uri"
      ]
    },
    "tuleap\\Tracker\\REST\\v1\\ArtifactTemporaryFilesResourceUpdateIdModel": {
      "properties": {
        "content": { "type": "string", "description": "Chunk of the file (base64-encoded)" },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Used to check that the chunk uploaded is the next one (minimum value is 2)"
        }
      },
      "required": ["content", "offset"]
    },
    "Tuleap\\Tracker\\REST\\ReportRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "is_public": { "type": "boolean", "description": "" },
        "is_default": { "type": "boolean", "description": "" },
        "resources": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["id", "uri", "label", "is_public", "is_default", "resources"]
    },
    "Tuleap\\REST\\v1\\TrackerFieldRepresentations\\TrackerFieldPatchRepresentation": {
      "properties": {
        "new_values": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "| null"
        }
      },
      "required": ["new_values"]
    },
    "Tracker_REST_FormElementRepresentation": {
      "properties": {
        "field_id": { "type": "integer", "format": "int64", "description": "" },
        "label": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "type": {
          "type": "string",
          "description": "(string|text|sb|msb|cb|date|file|int|float|tbl|art_link|perm|shared|aid|atid|lud|subby|subon|cross|burndown|computed|fieldset|column|linebreak|separator|staticrichtext)"
        },
        "values": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\FieldValueRepresentation " },
          "description": "| null"
        },
        "required": { "type": "boolean", "description": "" },
        "collapsed": { "type": "boolean", "description": "" },
        "bindings": { "type": "array", "items": { "type": "string" }, "description": "" },
        "permissions": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "One of (read, update, submit)"
        },
        "permissions_for_groups": { "type": "string", "description": "| null" },
        "default_value": { "type": "string", "description": "" }
      },
      "required": [
        "field_id",
        "label",
        "name",
        "type",
        "values",
        "required",
        "collapsed",
        "bindings",
        "permissions",
        "permissions_for_groups",
        "default_value"
      ]
    },
    "Tuleap\\Tracker\\REST\\v1\\FilePOSTRepresentation": {
      "properties": {
        "name": { "type": "string", "description": "The file name" },
        "file_size": { "type": "integer", "format": "int64", "description": "The file size" },
        "file_type": { "type": "string", "description": "The file type" },
        "description": { "type": "string", "description": "| null Description of the file" }
      },
      "required": ["name", "file_size", "file_type"]
    },
    "Tuleap\\Tracker\\REST\\v1\\CreatedFileRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "download_href": { "type": "string", "description": "" },
        "upload_href": {
          "type": "string",
          "description": "URL to upload the file using the <a href=\"https:\/\/tus.io\/protocols\/resumable-upload.html\">tus resumable upload protocol<\/a>"
        }
      },
      "required": ["id", "download_href", "upload_href"]
    },
    "tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionsResourceCreateTransitionModel": {
      "properties": {
        "tracker_id": { "type": "integer", "format": "int64", "description": "Id of the tracker" },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "description": "Transition source as a field value id"
        },
        "to_id": {
          "type": "integer",
          "format": "int64",
          "description": "Transition destination as a field value id"
        }
      },
      "required": ["tracker_id", "from_id", "to_id"]
    },
    "Tuleap\\Tracker\\REST\\v1\\Workflow\\WorkflowTransitionPATCHRepresentation": {
      "properties": {
        "authorized_user_group_ids": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "Authorized user group id"
        },
        "not_empty_field_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Ids of not empty fields"
        },
        "is_comment_required": { "type": "boolean", "description": "" }
      },
      "required": ["authorized_user_group_ids", "not_empty_field_ids", "is_comment_required"]
    },
    "Tuleap\\Tracker\\REST\\v1\\Workflow\\TransitionRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "from_id": { "type": "integer", "format": "int64", "description": "Source value id" },
        "to_id": { "type": "integer", "format": "int64", "description": "Target value id" },
        "authorized_user_group_ids": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "Ids of authorized user groups"
        },
        "not_empty_field_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Ids of not empty fields"
        },
        "is_comment_required": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "from_id",
        "to_id",
        "authorized_user_group_ids",
        "not_empty_field_ids",
        "is_comment_required"
      ]
    },
    "Tuleap\\Tracker\\REST\\v1\\Workflow\\PostActionsPUTRepresentation": {
      "properties": {
        "post_actions": {
          "type": "array",
          "items": { "type": "string" },
          "description": "$post_actions"
        }
      },
      "required": ["post_actions"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateSubmilestonesModel": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Ids of the new milestones"
        }
      },
      "required": ["ids"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifySubmilestonesModel": {
      "properties": {
        "add": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Submilestones to add in milestone"
        }
      }
    },
    "Tuleap\\AgileDashboard\\REST\\v1\\MilestoneRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "description": { "type": "string", "description": "" },
        "post_processed_description": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "submitted_by": { "type": "integer", "format": "int64", "description": "" },
        "submitted_on": { "type": "string", "description": "" },
        "planning": { "type": "string", "description": "" },
        "project": { "type": "string", "description": "" },
        "start_date": { "type": "string", "description": "| null" },
        "end_date": { "type": "string", "description": "| null" },
        "number_days_since_start": {
          "type": "integer",
          "format": "int64",
          "description": "| null"
        },
        "number_days_until_end": { "type": "integer", "format": "int64", "description": "| null" },
        "capacity": { "type": "number", "format": "double", "description": "| null" },
        "remaining_effort": { "type": "number", "format": "double", "description": "| null" },
        "status_value": { "type": "string", "description": "" },
        "semantic_status": { "type": "string", "description": "" },
        "parent": { "type": "string", "description": "| null" },
        "artifact": { "type": "string", "description": "" },
        "sub_milestones_uri": { "type": "string", "description": "" },
        "sub_milestone_type": { "type": "string", "description": "| null" },
        "backlog_uri": { "type": "string", "description": "" },
        "content_uri": { "type": "string", "description": "" },
        "cardwall_uri": { "type": "string", "description": "" },
        "burndown_uri": { "type": "string", "description": "" },
        "last_modified_date": {
          "type": "string",
          "description": "| null Date, when the last modification occurs"
        },
        "status_count": { "type": "array", "items": { "type": "string" }, "description": "| null" },
        "has_user_priority_change_permission": { "type": "boolean", "description": "" },
        "resources": { "type": "array", "items": { "type": "string" }, "description": "" },
        "original_project_provider": { "type": "string", "description": "| null" }
      },
      "required": [
        "id",
        "description",
        "post_processed_description",
        "uri",
        "label",
        "submitted_by",
        "submitted_on",
        "planning",
        "project",
        "start_date",
        "end_date",
        "number_days_since_start",
        "number_days_until_end",
        "capacity",
        "remaining_effort",
        "status_value",
        "semantic_status",
        "parent",
        "artifact",
        "sub_milestones_uri",
        "sub_milestone_type",
        "backlog_uri",
        "content_uri",
        "cardwall_uri",
        "burndown_uri",
        "last_modified_date",
        "status_count",
        "has_user_priority_change_permission",
        "resources",
        "original_project_provider"
      ]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateContentModel": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Ids of backlog items"
        }
      },
      "required": ["ids"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyContentModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogAddRepresentation"
          },
          "description": "Ids to add\/move to milestone content"
        }
      }
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceUpdateBacklogModel": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Ids of backlog items"
        }
      },
      "required": ["ids"]
    },
    "\\Tuleap\\AgileDashboard\\REST\\v1\\MilestoneResourceModifyBacklogModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogAddRepresentation"
          },
          "description": "Ids to add\/move to milestone backlog"
        }
      }
    },
    "BacklogItemReference": {
      "properties": {
        "artifact": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Identification of the backlog item"
        }
      },
      "required": ["artifact"]
    },
    "Tuleap\\Tracker\\REST\\Artifact\\BurndownRepresentation": {
      "properties": {
        "start_date": { "type": "string", "format": "date", "description": "" },
        "duration": {
          "type": "integer",
          "format": "int64",
          "description": "Time needed to complete the milestone (in days)"
        },
        "capacity": {
          "type": "number",
          "format": "double",
          "description": "Capacity of the team for the milestone"
        },
        "points": {
          "type": "array",
          "items": { "type": "number", "format": "float" },
          "description": ""
        },
        "is_under_calculation": { "type": "boolean", "description": "Is cache calcul asked" },
        "opening_days": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Opening days in week (Sunday as 0 and Saturday as 6)"
        },
        "points_with_date": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/BurndownPointRepresentation" },
          "description": ""
        }
      },
      "required": [
        "start_date",
        "duration",
        "capacity",
        "points",
        "is_under_calculation",
        "opening_days",
        "points_with_date"
      ]
    },
    "modify\\Tuleap\\AgileDashboard\\REST\\v1\\BacklogItemResourceModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\AgileDashboard\\REST\\v1\\BacklogAddRepresentation"
          },
          "description": "Ids to add to backlog_items content"
        }
      }
    },
    "\\Tuleap\\Cardwall\\REST\\v1\\CardsResourceUpdateIdModel": {
      "properties": {
        "label": { "type": "string", "description": "Label of the card" },
        "values": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Card's fields values"
        },
        "column_id": {
          "type": "integer",
          "format": "int64",
          "description": "Where the card should stands"
        }
      },
      "required": ["label", "values"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestPOSTRepresentation": {
      "properties": {
        "repository_id": { "type": "integer", "format": "int64", "description": "" },
        "repository_dest_id": { "type": "integer", "format": "int64", "description": "" },
        "branch_src": { "type": "string", "description": "" },
        "branch_dest": { "type": "string", "description": "" }
      },
      "required": ["repository_id", "repository_dest_id", "branch_src", "branch_dest"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestReference": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "id" },
        "uri": { "type": "string", "description": "" }
      },
      "required": ["id", "uri"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestShortStatRepresentation": {
      "properties": {
        "files_changed": { "type": "string", "description": "" },
        "lines_added": { "type": "string", "description": "" },
        "lines_removed": { "type": "string", "description": "" }
      },
      "required": ["files_changed", "lines_added", "lines_removed"]
    },
    "MinimalUserRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "| null" },
        "uri": { "type": "string", "description": "| null" },
        "user_url": { "type": "string", "description": "| null" },
        "real_name": { "type": "string", "description": "| null" },
        "display_name": { "type": "string", "description": "" },
        "username": { "type": "string", "description": "| null" },
        "ldap_id": { "type": "string", "description": "| null" },
        "avatar_url": { "type": "string", "description": "" },
        "is_anonymous": { "type": "boolean", "description": "" },
        "has_avatar": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "uri",
        "user_url",
        "real_name",
        "display_name",
        "username",
        "ldap_id",
        "avatar_url",
        "is_anonymous",
        "has_avatar"
      ]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestStatusInfoRepresentation": {
      "properties": {
        "status_type": { "type": "string", "description": "" },
        "status_date": { "type": "string", "description": "" },
        "status_updater": { "$ref": "#\/definitions\/MinimalUserRepresentation", "description": "" }
      },
      "required": ["status_type", "status_date", "status_updater"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\GitRepositoryReference": {
      "properties": {
        "name": { "type": "string", "description": "" },
        "project": { "type": "string", "description": "" },
        "clone_http_url": { "type": "string", "description": "" },
        "clone_ssh_url": { "type": "string", "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" }
      },
      "required": ["name", "project", "clone_http_url", "clone_ssh_url", "id", "uri"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestHEADRepresentation": {
      "properties": { "id": { "type": "string", "description": "" } },
      "required": ["id"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestRepresentation": {
      "properties": {
        "description": { "type": "string", "description": "" },
        "reference_src": { "type": "string", "description": "" },
        "reference_dest": { "type": "string", "description": "" },
        "head_reference": { "type": "string", "description": "" },
        "resources": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/[uri: string]" },
          "description": "$resources"
        },
        "user_can_merge": { "type": "boolean", "description": "" },
        "user_can_abandon": { "type": "boolean", "description": "" },
        "user_can_update_labels": { "type": "boolean", "description": "" },
        "merge_status": { "type": "string", "description": "" },
        "short_stat": {
          "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestShortStatRepresentation",
          "description": ""
        },
        "last_build_status": { "type": "string", "description": "" },
        "last_build_date": { "type": "string", "description": "" },
        "raw_title": { "type": "string", "description": "" },
        "raw_description": { "type": "string", "description": "" },
        "user_can_reopen": { "type": "boolean", "description": "" },
        "status_info": {
          "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestStatusInfoRepresentation",
          "description": ""
        },
        "user_can_update_title_and_description": { "type": "boolean", "description": "" },
        "description_format": { "type": "string", "description": "" },
        "post_processed_description": { "type": "string", "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "title": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" },
        "repository": {
          "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\GitRepositoryReference",
          "description": ""
        },
        "repository_dest": {
          "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\GitRepositoryReference",
          "description": ""
        },
        "user_id": { "type": "integer", "format": "int64", "description": "" },
        "creator": {
          "$ref": "#\/definitions\/Tuleap\\User\\REST\\MinimalUserRepresentation",
          "description": ""
        },
        "creation_date": { "type": "string", "description": "" },
        "branch_src": { "type": "string", "description": "" },
        "branch_dest": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "" },
        "head": {
          "$ref": "#\/definitions\/Tuleap\\PullRequest\\REST\\v1\\PullRequestHEADRepresentation",
          "description": ""
        },
        "is_git_reference_broken": { "type": "boolean", "description": "" },
        "reviewers": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalUserRepresentation" },
          "description": ""
        }
      },
      "required": [
        "description",
        "reference_src",
        "reference_dest",
        "head_reference",
        "resources",
        "user_can_merge",
        "user_can_abandon",
        "user_can_update_labels",
        "merge_status",
        "short_stat",
        "last_build_status",
        "last_build_date",
        "raw_title",
        "raw_description",
        "user_can_reopen",
        "status_info",
        "user_can_update_title_and_description",
        "description_format",
        "post_processed_description",
        "id",
        "title",
        "uri",
        "repository",
        "repository_dest",
        "user_id",
        "creator",
        "creation_date",
        "branch_src",
        "branch_dest",
        "status",
        "head",
        "is_git_reference_broken",
        "reviewers"
      ]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestPATCHRepresentation": {
      "properties": {
        "status": { "type": "string", "description": "" },
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "description_format": { "type": "string", "description": "" }
      }
    },
    "Tuleap\\Label\\REST\\LabelsPATCHRepresentation": {
      "properties": {
        "add": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/\\Tuleap\\Label\\REST\\LabelRepresentation" },
          "description": "",
          "minimum": 1
        },
        "remove": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/\\Tuleap\\Label\\REST\\LabelRepresentation" },
          "description": "",
          "minimum": 1
        }
      }
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestFileUniDiffRepresentation": {
      "properties": {
        "lines": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/PullRequestLineUniDiffRepresentation[]" },
          "description": ""
        },
        "inline_comments": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/InlineCommentRepresentation" },
          "description": "$inline_comments"
        },
        "mime_type": { "type": "string", "description": "" },
        "charset": { "type": "string", "description": "" },
        "special_format": { "type": "string", "description": "" }
      },
      "required": ["lines", "inline_comments", "mime_type", "charset", "special_format"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\PullRequestInlineCommentPOSTRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "" },
        "format": { "type": "string", "description": "| null", "enum": ["text", "commonmark"] },
        "file_path": { "type": "string", "description": "" },
        "unidiff_offset": { "type": "integer", "format": "int64", "description": "" },
        "position": { "type": "string", "description": "" },
        "parent_id": { "type": "integer", "format": "int64", "description": "| null $parent_id" }
      },
      "required": ["content", "file_path", "unidiff_offset", "position"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "file_path": { "type": "string", "description": "" },
        "unidiff_offset": { "type": "integer", "format": "int64", "description": "" },
        "position": { "type": "string", "description": "" },
        "post_date": { "type": "string", "description": "" },
        "last_edition_date": { "type": "string", "description": "" },
        "content": { "type": "string", "description": "" },
        "raw_content": { "type": "string", "description": "" },
        "post_processed_content": { "type": "string", "description": "" },
        "is_outdated": { "type": "boolean", "description": "" },
        "type": { "type": "string", "description": "" },
        "parent_id": { "type": "integer", "format": "int64", "description": "" },
        "format": { "type": "string", "description": "" },
        "color": { "type": "string", "description": "" },
        "user": {
          "$ref": "#\/definitions\/Tuleap\\User\\REST\\MinimalUserRepresentation",
          "description": ""
        }
      },
      "required": [
        "id",
        "file_path",
        "unidiff_offset",
        "position",
        "post_date",
        "last_edition_date",
        "content",
        "raw_content",
        "post_processed_content",
        "is_outdated",
        "type",
        "parent_id",
        "format",
        "color",
        "user"
      ]
    },
    "Tuleap\\PullRequest\\REST\\v1\\CommentPOSTRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "" },
        "parent_id": { "type": "integer", "format": "int64", "description": "| null $parent_id" },
        "format": {
          "type": "string",
          "description": "| null $format",
          "enum": ["text", "commonmark"]
        }
      },
      "required": ["content"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\Comment\\CommentRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "post_date": { "type": "string", "description": "" },
        "last_edition_date": { "type": "string", "description": "" },
        "content": { "type": "string", "description": "" },
        "raw_content": { "type": "string", "description": "" },
        "post_processed_content": { "type": "string", "description": "" },
        "type": { "type": "string", "description": "" },
        "parent_id": { "type": "integer", "format": "int64", "description": "" },
        "format": { "type": "string", "description": "" },
        "color": { "type": "string", "description": "" },
        "user": {
          "$ref": "#\/definitions\/Tuleap\\User\\REST\\MinimalUserRepresentation",
          "description": ""
        }
      },
      "required": [
        "id",
        "post_date",
        "last_edition_date",
        "content",
        "raw_content",
        "post_processed_content",
        "type",
        "parent_id",
        "format",
        "color",
        "user"
      ]
    },
    "Tuleap\\PullRequest\\REST\\v1\\Reviewer\\ReviewersRepresentation": {
      "properties": {
        "users": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalUserRepresentation" },
          "description": ""
        }
      },
      "required": ["users"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\Reviewer\\ReviewersPUTRepresentation": {
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\UserRESTReferenceRepresentation"
          },
          "description": ""
        }
      },
      "required": ["users"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\CommentPATCHRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "The new content of the comment" }
      },
      "required": ["content"]
    },
    "Tuleap\\PullRequest\\REST\\v1\\InlineComment\\InlineCommentPATCHRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "The new content of the comment" }
      },
      "required": ["content"]
    },
    "Tuleap\\PullRequest\\PullRequest\\REST\\v1\\InlineComment\\Reply\\InlineCommentReplyPOSTRepresentation": {
      "properties": {
        "content": { "type": "string", "description": "The content of the reply" },
        "format": {
          "type": "string",
          "description": "The format of the reply",
          "enum": ["commonmark", "text"]
        }
      },
      "required": ["content", "format"]
    },
    "Tuleap\\FRS\\REST\\v1\\ReleaseRepresentation": {
      "properties": {
        "STATUS": { "type": "array", "items": { "type": "string" }, "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "id" },
        "uri": { "type": "string", "description": "$uri" },
        "name": { "type": "string", "description": "$name" },
        "files": { "type": "array", "items": { "type": "array" }, "description": "$files" },
        "links": { "type": "array", "items": { "type": "array" }, "description": "$links" },
        "changelog": { "type": "string", "description": "$changelog" },
        "release_note": { "type": "string", "description": "$release_note" },
        "resources": { "type": "array", "items": { "type": "array" }, "description": "$resources" },
        "project": { "type": "string", "description": "" },
        "artifact": { "type": "string", "description": "| null" },
        "license_approval": { "type": "boolean", "description": "" },
        "package": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "$status" },
        "permissions_for_groups": { "type": "string", "description": "| null" }
      },
      "required": [
        "STATUS",
        "id",
        "uri",
        "name",
        "files",
        "links",
        "changelog",
        "release_note",
        "resources",
        "project",
        "artifact",
        "license_approval",
        "package",
        "status",
        "permissions_for_groups"
      ]
    },
    "Tuleap\\FRS\\REST\\v1\\ReleasePATCHRepresentation": {
      "properties": {
        "name": { "type": "string", "description": "", "minimum": 1 },
        "release_note": { "type": "string", "description": "" },
        "changelog": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "", "enum": ["active", "hidden"] }
      }
    },
    "Tuleap\\FRS\\REST\\v1\\CollectionOfFileRepresentation": {
      "properties": {
        "files": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/FileRepresentation" },
          "description": ""
        }
      },
      "required": ["files"]
    },
    "Tuleap\\FRS\\REST\\v1\\ReleasePOSTRepresentation": {
      "properties": {
        "package_id": { "type": "integer", "format": "int64", "description": "" },
        "name": { "type": "string", "description": "" },
        "release_note": { "type": "string", "description": "" },
        "changelog": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "", "enum": ["active", "hidden"] }
      },
      "required": ["package_id", "name"]
    },
    "createTuleap\\FRS\\REST\\v1\\PackageResourceModel": {
      "properties": {
        "project_id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the project where we should create the package"
        },
        "label": { "type": "string", "description": "Label of the package" }
      },
      "required": ["project_id", "label"]
    },
    "Tuleap\\FRS\\REST\\v1\\PackageRepresentation": {
      "properties": {
        "project": { "type": "string", "description": "" },
        "resources": { "type": "array", "items": { "type": "string" }, "description": "" },
        "permissions_for_groups": { "type": "string", "description": "| null" },
        "id": { "type": "integer", "format": "int64", "description": "ID of the package" },
        "uri": { "type": "string", "description": "$uri" },
        "label": { "type": "string", "description": "" }
      },
      "required": ["project", "resources", "permissions_for_groups", "id", "uri", "label"]
    },
    "Tuleap\\FRS\\REST\\v1\\ReleaseRepresentationPaginatedCollectionRepresentation": {
      "properties": {
        "collection": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/\\Tuleap\\FRS\\REST\\v1\\ReleaseRepresentation" },
          "description": ""
        },
        "total_size": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["collection", "total_size"]
    },
    "Tuleap\\FRS\\REST\\v1\\FileRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "download_url": { "type": "string", "description": "" },
        "file_size": { "type": "integer", "format": "int64", "description": "" },
        "nb_download": { "type": "integer", "format": "int64", "description": "" },
        "arch": { "type": "string", "description": "| null" },
        "type": { "type": "string", "description": "| null" },
        "date": { "type": "string", "format": "date", "description": "" },
        "reference_md5": { "type": "string", "description": "" },
        "computed_md5": { "type": "string", "description": "" },
        "owner": { "type": "string", "description": "| UserRepresentation" }
      },
      "required": [
        "id",
        "uri",
        "name",
        "download_url",
        "file_size",
        "nb_download",
        "arch",
        "type",
        "date",
        "reference_md5",
        "computed_md5",
        "owner"
      ]
    },
    "Tuleap\\FRS\\REST\\v1\\FilePOSTRepresentation": {
      "properties": {
        "release_id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the release"
        },
        "name": { "type": "string", "description": "The file name" },
        "file_size": { "type": "integer", "format": "int64", "description": "The file size" }
      },
      "required": ["release_id", "name", "file_size"]
    },
    "Tuleap\\FRS\\REST\\v1\\CreatedFileRepresentation": {
      "properties": { "upload_href": { "type": "string", "description": "" } },
      "required": ["upload_href"]
    },
    "Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerWidgetRepresentation": {
      "properties": {
        "queries": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["queries"]
    },
    "Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryContentRepresentation": {
      "properties": {
        "artifacts": { "type": "array", "items": { "type": "string" }, "description": "" },
        "selected": { "type": "array", "items": { "type": "string" }, "description": "" }
      },
      "required": ["artifacts", "selected"]
    },
    "Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryPutRepresentation": {
      "properties": {
        "tql_query": { "type": "string", "description": "The TQL query" },
        "title": { "type": "string", "description": "The query title" },
        "description": { "type": "string", "description": "The query description" },
        "widget_id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the widget the query belongs to"
        },
        "is_default": {
          "type": "boolean",
          "description": "The query is displayed by default or not"
        }
      },
      "required": ["tql_query", "title", "widget_id"]
    },
    "Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "tql_query": { "type": "string", "description": "" },
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "is_default": { "type": "boolean", "description": "" }
      },
      "required": ["id", "tql_query", "title", "description", "is_default"]
    },
    "Tuleap\\CrossTracker\\REST\\v1\\Representation\\CrossTrackerQueryPostRepresentation": {
      "properties": {
        "widget_id": { "type": "integer", "format": "int64", "description": "ID of the widget" },
        "tql_query": { "type": "string", "description": "The TQL query" },
        "title": { "type": "string", "description": "The query title" },
        "description": { "type": "string", "description": "The query description" },
        "is_default": {
          "type": "boolean",
          "description": "The query is displayed by default or not"
        }
      },
      "required": ["widget_id", "tql_query", "title"]
    },
    "createTuleap\\DynamicCredentials\\REST\\DynamicCredentialsResourceModel": {
      "properties": {
        "username": {
          "type": "string",
          "description": "Username must be formatted as forge__dynamic_credential-&lt;identifier&gt; where &lt;identifier&gt; is a chosen value"
        },
        "password": { "type": "string", "description": "" },
        "expiration": { "type": "string", "description": "Expiration date ISO8601 formatted" },
        "signature": {
          "type": "string",
          "description": "Base64 encoded signature associated with the request"
        }
      },
      "required": ["username", "password", "expiration", "signature"]
    },
    "\\Tuleap\\SVN\\REST\\v1\\CommitRulesRepresentation": {
      "properties": {
        "is_reference_mandatory": { "type": "string", "description": "" },
        "is_commit_message_change_allowed": { "type": "string", "description": "" }
      },
      "required": ["is_reference_mandatory", "is_commit_message_change_allowed"]
    },
    "\\Tuleap\\SVN\\REST\\v1\\ImmutableTagRepresentation": {
      "properties": {
        "paths": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": ""
        },
        "whitelist": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": ""
        }
      },
      "required": ["paths", "whitelist"]
    },
    "\\Tuleap\\SVN\\REST\\v1\\SettingsGETRepresentation": {
      "properties": {
        "commit_rules": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\CommitRulesRepresentation",
          "description": "commit rules representation"
        },
        "immutable_tags": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\ImmutableTagRepresentation",
          "description": "immutable tags representations"
        },
        "access_file": { "type": "string", "description": "access file content" },
        "email_notifications": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\NotificationGETRepresentation"
          },
          "description": "notifications representation"
        },
        "has_default_permissions": {
          "type": "boolean",
          "description": "If true, Tuleap generates default permissions for [\/] according to project visibility"
        }
      }
    },
    "\\Tuleap\\Project\\REST\\MinimalProjectRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "shortname": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "" },
        "access": {
          "type": "string",
          "description": "",
          "enum": ["unrestricted", "public", "private", "private-wo-restr"]
        },
        "is_template": { "type": "boolean", "description": "" }
      },
      "required": ["id", "uri", "label", "shortname", "status", "access", "is_template"]
    },
    "Tuleap\\SVN\\REST\\v1\\FullRepositoryRepresentation": {
      "properties": {
        "settings": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\SettingsGETRepresentation",
          "description": ""
        },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "project": {
          "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\MinimalProjectRepresentation",
          "description": ""
        },
        "uri": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "svn_url": { "type": "string", "description": "" }
      },
      "required": ["settings", "id", "project", "uri", "name", "svn_url"]
    },
    "\\Tuleap\\SVN\\REST\\v1\\SettingsPUTRepresentation": {
      "properties": {
        "commit_rules": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\CommitRulesRepresentation",
          "description": "commit rules representations"
        },
        "immutable_tags": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\ImmutableTagRepresentation",
          "description": "immutable tags representations"
        },
        "email_notifications": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\NotificationPOSTPUTRepresentation"
          },
          "description": "notifications representations"
        },
        "access_file": { "type": "string", "description": "access file content" },
        "has_default_permissions": {
          "type": "boolean",
          "description": "If true, Tuleap generates default permissions for [\/]"
        }
      },
      "required": ["commit_rules", "immutable_tags", "email_notifications"]
    },
    "\\Tuleap\\SVN\\REST\\v1\\SettingsPOSTRepresentation": {
      "properties": {
        "layout": { "type": "array", "items": { "type": "string" }, "description": "layout" },
        "commit_rules": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\CommitRulesRepresentation",
          "description": "commit rules representations"
        },
        "immutable_tags": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\ImmutableTagRepresentation",
          "description": "immutable tags representations"
        },
        "access_file": { "type": "string", "description": "access file content" },
        "email_notifications": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\NotificationPOSTPUTRepresentation"
          },
          "description": "notifications representations"
        },
        "has_default_permissions": {
          "type": "boolean",
          "description": "If true, Tuleap generates default permissions for [\/]"
        }
      }
    },
    "create\\Tuleap\\SVN\\REST\\v1\\RepositoryResourceModel": {
      "properties": {
        "project_id": { "type": "integer", "format": "int64", "description": "project id" },
        "name": { "type": "string", "description": "Repository name" },
        "settings": {
          "$ref": "#\/definitions\/\\Tuleap\\SVN\\REST\\v1\\SettingsPOSTRepresentation",
          "description": "Repository settings"
        }
      },
      "required": ["project_id", "name"]
    },
    "Tuleap\\SVN\\REST\\v1\\RepositoryRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "project": {
          "$ref": "#\/definitions\/\\Tuleap\\Project\\REST\\MinimalProjectRepresentation",
          "description": ""
        },
        "uri": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "svn_url": { "type": "string", "description": "" }
      },
      "required": ["id", "project", "uri", "name", "svn_url"]
    },
    "Tuleap\\TestManagement\\REST\\v1\\CampaignRepresentation": {
      "properties": {
        "total": { "type": "integer", "format": "int64", "description": "" },
        "id": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "status": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" },
        "nb_of_notrun": { "type": "string", "description": "" },
        "nb_of_passed": { "type": "string", "description": "" },
        "nb_of_failed": { "type": "string", "description": "" },
        "nb_of_blocked": { "type": "string", "description": "" },
        "resources": { "type": "string", "description": "" },
        "job_configuration": { "type": "string", "description": "" },
        "user_can_update": { "type": "string", "description": "" },
        "is_open": { "type": "boolean", "description": "" },
        "user_can_close": { "type": "boolean", "description": "" },
        "user_can_open": { "type": "boolean", "description": "" }
      },
      "required": [
        "total",
        "id",
        "label",
        "status",
        "uri",
        "nb_of_notrun",
        "nb_of_passed",
        "nb_of_failed",
        "nb_of_blocked",
        "resources",
        "job_configuration",
        "user_can_update",
        "is_open",
        "user_can_close",
        "user_can_open"
      ]
    },
    "Tuleap\\TestManagement\\REST\\v1\\JobConfigurationRepresentation": {
      "properties": {
        "url": { "type": "string", "description": "| null $url" },
        "token": { "type": "string", "description": "| null $token" }
      }
    },
    "Tuleap\\TestManagement\\REST\\v1\\AutomatedTestsResultPATCHRepresentation": {
      "properties": {
        "build_url": { "type": "string", "description": "" },
        "junit_contents": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": ""
        }
      },
      "required": ["build_url", "junit_contents"]
    },
    "modifyTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel": {
      "properties": {
        "label": { "type": "string", "description": "New label of the campaign" },
        "job_configuration": {
          "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\JobConfigurationRepresentation",
          "description": ""
        },
        "automated_tests_results": {
          "$ref": "#\/definitions\/Tuleap\\TestManagement\\REST\\v1\\AutomatedTestsResultPATCHRepresentation",
          "description": ""
        },
        "change_status": {
          "type": "string",
          "description": "null $change_status",
          "enum": ["closed", "open"]
        }
      }
    },
    "tuleap\\TestManagement\\REST\\v1\\CampaignsResourceModifyExecutionsModel": {
      "properties": {
        "definition_ids_to_add": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Test definition ids for which test executions should be created"
        },
        "execution_ids_to_remove": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Test execution ids which should be unlinked from the campaign"
        }
      },
      "required": ["definition_ids_to_add", "execution_ids_to_remove"]
    },
    "createTuleap\\TestManagement\\REST\\v1\\CampaignsResourceModel": {
      "properties": {
        "project_id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the project the campaign will belong to"
        },
        "label": { "type": "string", "description": "The label of the new campaign" }
      },
      "required": ["project_id", "label"]
    },
    "createTuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModel": {
      "properties": {
        "tracker_reference": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\TrackerReference",
          "description": "Execution tracker of the execution"
        },
        "definition_id": {
          "type": "integer",
          "format": "int64",
          "description": "Definition of the execution"
        },
        "status": {
          "type": "string",
          "description": "Status of the execution",
          "enum": ["notrun", "passed", "failed", "blocked"]
        },
        "time": { "type": "integer", "format": "int64", "description": "Result of the execution" },
        "results": { "type": "string", "description": "" }
      },
      "required": ["tracker_reference", "definition_id", "status"]
    },
    "Tuleap\\TestManagement\\REST\\v1\\ExecutionRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "ID of the artifact" },
        "uri": { "type": "string", "description": "" },
        "results": { "type": "string", "description": "Result of an execution" },
        "status": { "type": "string", "description": "" },
        "last_update_date": { "type": "string", "description": "" },
        "assigned_to": { "type": "string", "description": "| null" },
        "previous_result": { "type": "string", "description": "| null" },
        "definition": { "type": "string", "description": "" },
        "linked_bugs": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/BugRepresentation" },
          "description": ""
        },
        "time": { "type": "integer", "format": "int64", "description": "" },
        "steps_results": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/StepResultRepresentation" },
          "description": ""
        },
        "upload_url": { "type": "string", "description": "| null" },
        "max_size_upload": { "type": "integer", "format": "int64", "description": "| null" },
        "attachments": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/AttachmentRepresentation" },
          "description": ""
        }
      },
      "required": [
        "id",
        "uri",
        "results",
        "status",
        "last_update_date",
        "assigned_to",
        "previous_result",
        "definition",
        "linked_bugs",
        "time",
        "steps_results",
        "upload_url",
        "max_size_upload",
        "attachments"
      ]
    },
    "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourcePresencesModel": {
      "properties": {
        "uuid": { "type": "string", "description": "Uuid of current user" },
        "remove_from": { "type": "string", "description": "Id of the old artifact" }
      },
      "required": ["uuid"]
    },
    "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceModifyIssueLinkModel": {
      "properties": {
        "issue_id": { "type": "string", "description": "Id of the issue artifact" },
        "comment": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Artifact\\Changeset\\Comment\\NewChangesetCommentRepresentation",
          "description": "Comment describing the test execution {body, format}"
        }
      },
      "required": ["issue_id"]
    },
    "Tuleap\\TestManagement\\REST\\v1\\PATCHExecutionRepresentation": {
      "properties": {
        "force_use_latest_definition_version": {
          "type": "boolean",
          "description": "True to update the execution to use latest version of definition"
        },
        "steps_results": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\TestManagement\\REST\\v1\\StepResultRepresentation"
          },
          "description": "Results of steps",
          "minimum": 1
        }
      }
    },
    "tuleap\\TestManagement\\REST\\v1\\ExecutionsResourceUpdateIdModel": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the execution",
          "enum": ["notrun", "passed", "failed", "blocked"]
        },
        "uploaded_file_ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "files_ids to add during the execution"
        },
        "deleted_file_ids": {
          "type": "array",
          "items": { "type": "string" },
          "description": "files_ids to delete during the execution"
        },
        "time": {
          "type": "integer",
          "format": "int64",
          "description": "Time to pass the execution"
        },
        "results": { "type": "string", "description": "Result of the execution" }
      },
      "required": ["status"]
    },
    "Tuleap\\TestManagement\\REST\\v1\\NodeRepresentation": {
      "properties": {
        "links": { "type": "array", "items": { "type": "string" }, "description": "" },
        "reverse_links": { "type": "array", "items": { "type": "string" }, "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "Id of node" },
        "uri": { "type": "string", "description": "" },
        "ref_name": { "type": "string", "description": "" },
        "ref_label": { "type": "string", "description": "" },
        "color": { "type": "string", "description": "" },
        "title": { "type": "string", "description": "" },
        "url": { "type": "string", "description": "" },
        "status_semantic": { "type": "string", "description": "| null" },
        "status_label": { "type": "string", "description": "| null" },
        "nature": { "type": "string", "description": "" }
      },
      "required": [
        "links",
        "reverse_links",
        "id",
        "uri",
        "ref_name",
        "ref_label",
        "color",
        "title",
        "url",
        "status_semantic",
        "status_label",
        "nature"
      ]
    },
    "Tuleap\\Taskboard\\REST\\v1\\CardRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "tracker_id": { "type": "integer", "format": "int64", "description": "" },
        "label": { "type": "string", "description": "" },
        "xref": { "type": "string", "description": "" },
        "rank": { "type": "integer", "format": "int64", "description": "" },
        "color": { "type": "string", "description": "" },
        "background_color": { "type": "string", "description": "" },
        "artifact_html_uri": { "type": "string", "description": "" },
        "has_children": { "type": "boolean", "description": "" },
        "assignees": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/MinimalUserRepresentation" },
          "description": ""
        },
        "mapped_list_value": { "type": "string", "description": "| null" },
        "initial_effort": { "type": "number", "format": "double", "description": "| null" },
        "remaining_effort": { "type": "string", "description": "| null" },
        "is_open": { "type": "boolean", "description": "" },
        "is_collapsed": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "tracker_id",
        "label",
        "xref",
        "rank",
        "color",
        "background_color",
        "artifact_html_uri",
        "has_children",
        "assignees",
        "mapped_list_value",
        "initial_effort",
        "remaining_effort",
        "is_open",
        "is_collapsed"
      ]
    },
    "Tuleap\\Taskboard\\REST\\v1\\Card\\CardPatchRepresentation": {
      "properties": {
        "remaining_effort": { "type": "number", "format": "double", "description": "" }
      },
      "required": ["remaining_effort"]
    },
    "\\Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation": {
      "properties": {
        "ids": { "type": "array", "items": { "type": "integer" }, "description": "" },
        "direction": { "type": "string", "description": "before|after" },
        "compared_to": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["ids", "direction", "compared_to"]
    },
    "Tuleap\\Taskboard\\REST\\v1\\Cell\\CellPatchRepresentation": {
      "properties": {
        "add": { "type": "integer", "format": "int64", "description": "| null $add" },
        "order": {
          "$ref": "#\/definitions\/\\Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "| null $order"
        }
      }
    },
    "Tuleap\\FullTextSearchCommon\\REST\\v1\\SearchQueryRepresentation": {
      "properties": { "keywords": { "type": "string", "description": "", "minimum": 3 } },
      "required": ["keywords"]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "tracker_id": { "type": "integer", "format": "int64", "description": "" },
        "tracker": { "type": "string", "description": "" },
        "uri": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanColumnRepresentation"
          },
          "description": ""
        },
        "resources": { "type": "array", "items": { "type": "string" }, "description": "" },
        "backlog": { "type": "string", "description": "" },
        "archive": { "type": "string", "description": "" },
        "user_can_add_columns": { "type": "boolean", "description": "" },
        "user_can_reorder_columns": { "type": "boolean", "description": "" },
        "user_can_add_artifact": { "type": "boolean", "description": "" },
        "is_promoted": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "tracker_id",
        "tracker",
        "uri",
        "label",
        "columns",
        "resources",
        "backlog",
        "archive",
        "user_can_add_columns",
        "user_can_reorder_columns",
        "user_can_add_artifact",
        "is_promoted"
      ]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanCollapseColumnRepresentation": {
      "properties": {
        "column_id": { "type": "integer", "format": "int64", "description": "" },
        "value": { "type": "boolean", "description": "" }
      },
      "required": ["column_id", "value"]
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyIdModel": {
      "properties": {
        "label": { "type": "string", "description": "The new label" },
        "is_promoted": { "type": "boolean", "description": "Is the kanban promoted?" },
        "collapse_column": {
          "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanCollapseColumnRepresentation",
          "description": "The column to collapse (save in user prefs)"
        },
        "collapse_archive": {
          "type": "boolean",
          "description": "True to collapse the archive (save in user prefs)"
        },
        "collapse_backlog": {
          "type": "boolean",
          "description": "True to collapse the backlog (save in user prefs)"
        }
      }
    },
    "Tuleap\\Kanban\\REST\\v1\\ItemCollectionRepresentation": {
      "properties": {
        "collection": { "type": "string", "description": "" },
        "total_size": { "type": "string", "description": "" }
      },
      "required": ["collection", "total_size"]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanAddRepresentation": {
      "properties": {
        "ids": { "type": "array", "items": { "type": "integer" }, "description": "" }
      },
      "required": ["ids"]
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyBacklogModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanAddRepresentation",
          "description": "Ids to add to Kanban backlog"
        },
        "from_column": {
          "type": "string",
          "description": "Id of the column the item is coming from (when moving an item)"
        }
      }
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyArchiveModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the children"
        },
        "add": {
          "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanAddRepresentation",
          "description": "Ids to add to Kanban backlog"
        },
        "from_column": {
          "type": "string",
          "description": "Id of the column the item is coming from (when moving an item)"
        }
      }
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceModifyItemsModel": {
      "properties": {
        "order": {
          "$ref": "#\/definitions\/Tuleap\\Tracker\\REST\\Helpers\\OrderRepresentation",
          "description": "Order of the items"
        },
        "add": {
          "$ref": "#\/definitions\/Tuleap\\Kanban\\REST\\v1\\KanbanAddRepresentation",
          "description": "Ids to add to the column"
        },
        "from_column": {
          "type": "string",
          "description": "Id of the column the item is coming from (when moving an item)"
        }
      }
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanColumnPOSTRepresentation": {
      "properties": { "label": { "type": "string", "description": "" } },
      "required": ["label"]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanColumnRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "label": { "type": "string", "description": "" },
        "is_open": { "type": "boolean", "description": "" },
        "limit": { "type": "integer", "format": "int64", "description": "" },
        "color": { "type": "string", "description": "" },
        "user_can_add_in_place": { "type": "boolean", "description": "" },
        "user_can_remove_column": { "type": "boolean", "description": "" },
        "user_can_edit_label": { "type": "boolean", "description": "" }
      },
      "required": [
        "id",
        "label",
        "is_open",
        "limit",
        "color",
        "user_can_add_in_place",
        "user_can_remove_column",
        "user_can_edit_label"
      ]
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateColumnsModel": {
      "properties": {
        "column_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "The created kanban column"
        }
      },
      "required": ["column_ids"]
    },
    "\\Tuleap\\Kanban\\REST\\v1\\KanbanResourceUpdateTrackerReportsModel": {
      "properties": {
        "tracker_report_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "List of selected report ids"
        }
      },
      "required": ["tracker_report_ids"]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanColumnPATCHRepresentation": {
      "properties": {
        "label": { "type": "string", "description": "", "minimum": 1 },
        "wip_limit": { "type": "integer", "format": "int64", "description": "" }
      }
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanItemPOSTRepresentation": {
      "properties": {
        "kanban_id": { "type": "integer", "format": "int64", "description": "" },
        "label": { "type": "string", "description": "" },
        "column_id": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["kanban_id", "label"]
    },
    "Tuleap\\Kanban\\REST\\v1\\KanbanItemRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "item_name": { "type": "string", "description": "" },
        "label": { "type": "string", "description": "" },
        "color": { "type": "string", "description": "" },
        "card_fields": { "type": "string", "description": "" },
        "timeinfo": { "type": "string", "description": "" },
        "in_column": { "type": "string", "description": "string | int" },
        "background_color_name": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "item_name",
        "label",
        "color",
        "card_fields",
        "timeinfo",
        "in_column",
        "background_color_name"
      ]
    },
    "Tuleap\\Artidoc\\REST\\v1\\OrderRepresentation": {
      "properties": {
        "ids": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/string" },
          "description": "List of section identifier"
        },
        "direction": { "type": "string", "description": "before|after" },
        "compared_to": { "type": "string", "description": "Section identifier" }
      },
      "required": ["ids", "direction", "compared_to"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\PUTConfigurationRepresentation": {
      "properties": {
        "selected_tracker_ids": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Selected trackers for the document",
          "minimum": 1,
          "maximum": 1
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\Artidoc\\REST\\v1\\ConfiguredFieldRepresentation"
          },
          "description": "Selected artifact fields for the document"
        }
      },
      "required": ["selected_tracker_ids", "fields"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\PUTSectionRepresentation": {
      "properties": {
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "attachments": { "type": "array", "items": { "type": "string" }, "description": "" },
        "level": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["title", "description", "attachments", "level"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\POSTSectionArtifactRepresentation": {
      "properties": { "id": { "type": "integer", "format": "int64", "description": "" } },
      "required": ["id"]
    },
    "\\Tuleap\\Artidoc\\REST\\v1\\POSTSectionImportRepresentation": {
      "properties": {
        "artifact": {
          "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\POSTSectionArtifactRepresentation",
          "description": ""
        },
        "level": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["artifact", "level"]
    },
    "\\Tuleap\\Artidoc\\REST\\v1\\POSTContentSectionRepresentation": {
      "properties": {
        "type": {
          "type": "string",
          "description": "type of content",
          "enum": ["freetext", "artifact"]
        },
        "title": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "attachments": { "type": "array", "items": { "type": "string" }, "description": "" },
        "level": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["type", "title", "description", "attachments", "level"]
    },
    "\\Tuleap\\Artidoc\\REST\\v1\\POSTSectionPositionBeforeRepresentation": {
      "properties": { "before": { "type": "string", "description": "" } },
      "required": ["before"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\POSTSectionRepresentation": {
      "properties": {
        "import": {
          "$ref": "#\/definitions\/\\Tuleap\\Artidoc\\REST\\v1\\POSTSectionImportRepresentation",
          "description": "| null The already existing content to import"
        },
        "content": {
          "$ref": "#\/definitions\/\\Tuleap\\Artidoc\\REST\\v1\\POSTContentSectionRepresentation",
          "description": "| null The content to create"
        },
        "position": {
          "$ref": "#\/definitions\/\\Tuleap\\Artidoc\\REST\\v1\\POSTSectionPositionBeforeRepresentation",
          "description": "| null The position"
        }
      }
    },
    "tuleap\\Artidoc\\REST\\v1\\ArtidocSectionsResourceCreateSectionModel": {
      "properties": {
        "artidoc_id": { "type": "integer", "format": "int64", "description": "Id of the document" },
        "section": {
          "$ref": "#\/definitions\/Tuleap\\Artidoc\\REST\\v1\\POSTSectionRepresentation",
          "description": ""
        }
      },
      "required": ["artidoc_id", "section"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\FilePOSTRepresentation": {
      "properties": {
        "artidoc_id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the document"
        },
        "name": { "type": "string", "description": "The file name" },
        "file_size": { "type": "integer", "format": "int64", "description": "The file size" },
        "file_type": { "type": "string", "description": "The file type" }
      },
      "required": ["artidoc_id", "name", "file_size", "file_type"]
    },
    "Tuleap\\Artidoc\\REST\\v1\\CreatedFileRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "download_href": { "type": "string", "description": "" },
        "upload_href": {
          "type": "string",
          "description": "URL to upload the file using the <a href=\"https:\/\/tus.io\/protocols\/resumable-upload.html\">tus resumable upload protocol<\/a>"
        }
      },
      "required": ["id", "download_href", "upload_href"]
    },
    "create\\Tuleap\\Baseline\\REST\\BaselinesResourceModel": {
      "properties": {
        "name": { "type": "string", "description": "Name of the baseline" },
        "artifact_id": { "type": "integer", "format": "int64", "description": "Id of an artifact" },
        "snapshot_date": { "type": "string", "description": "Snapshot date of the baseline" }
      },
      "required": ["name", "artifact_id"]
    },
    "Tuleap\\Baseline\\REST\\BaselineRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "artifact_id": { "type": "string", "description": "" },
        "snapshot_date": { "type": "string", "description": "" },
        "author_id": { "type": "string", "description": "" }
      },
      "required": ["id", "name", "artifact_id", "snapshot_date", "author_id"]
    },
    "Tuleap\\Baseline\\REST\\BaselineArtifactCollectionRepresentation": {
      "properties": { "artifacts": { "type": "string", "description": "" } },
      "required": ["artifacts"]
    },
    "createTuleap\\Baseline\\REST\\ComparisonsResourceModel": {
      "properties": {
        "base_baseline_id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the baseline used as base comparison"
        },
        "compared_to_baseline_id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the baseline to be compared"
        },
        "name": { "type": "string", "description": "Name of the comparison" },
        "comment": { "type": "string", "description": "Comment" }
      },
      "required": ["base_baseline_id", "compared_to_baseline_id"]
    },
    "Tuleap\\Baseline\\REST\\ComparisonRepresentation": {
      "properties": {
        "id": { "type": "string", "description": "" },
        "name": { "type": "string", "description": "" },
        "comment": { "type": "string", "description": "" },
        "base_baseline_id": { "type": "string", "description": "" },
        "compared_to_baseline_id": { "type": "string", "description": "" },
        "author_id": { "type": "string", "description": "" },
        "creation_date": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "name",
        "comment",
        "base_baseline_id",
        "compared_to_baseline_id",
        "author_id",
        "creation_date"
      ]
    },
    "Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryPOSTRepresentation": {
      "properties": {
        "project_id": { "type": "integer", "format": "int64", "description": "" },
        "gitlab_server_url": { "type": "string", "description": "" },
        "gitlab_bot_api_token": { "type": "string", "description": "" },
        "gitlab_repository_id": { "type": "integer", "format": "int64", "description": "" },
        "allow_artifact_closure": { "type": "boolean", "description": "" }
      },
      "required": [
        "project_id",
        "gitlab_server_url",
        "gitlab_bot_api_token",
        "gitlab_repository_id"
      ]
    },
    "GitlabRepositoryRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "gitlab_repository_id": { "type": "integer", "format": "int64", "description": "" },
        "name": { "type": "string", "description": "" },
        "description": { "type": "string", "description": "" },
        "gitlab_repository_url": { "type": "string", "description": "" },
        "last_push_date": { "type": "string", "description": "" },
        "project": { "type": "string", "description": "" },
        "allow_artifact_closure": { "type": "boolean", "description": "" },
        "is_webhook_configured": { "type": "boolean", "description": "" },
        "create_branch_prefix": { "type": "string", "description": "" }
      },
      "required": [
        "id",
        "gitlab_repository_id",
        "name",
        "description",
        "gitlab_repository_url",
        "last_push_date",
        "project",
        "allow_artifact_closure",
        "is_webhook_configured",
        "create_branch_prefix"
      ]
    },
    "\\Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryBotApiTokenPatchRepresentation": {
      "properties": { "gitlab_api_token": { "type": "string", "description": "" } },
      "required": ["gitlab_api_token"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryPatchRepresentation": {
      "properties": {
        "update_bot_api_token": {
          "$ref": "#\/definitions\/\\Tuleap\\Gitlab\\REST\\v1\\GitlabRepositoryBotApiTokenPatchRepresentation",
          "description": "| null"
        },
        "generate_new_secret": { "type": "boolean", "description": "| null" },
        "allow_artifact_closure": { "type": "boolean", "description": "| null" },
        "create_branch_prefix": { "type": "string", "description": "| null" }
      }
    },
    "Tuleap\\Gitlab\\REST\\v1\\BranchesInformationRepresentation": {
      "properties": { "default_branch": { "type": "string", "description": "" } },
      "required": ["default_branch"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\GitlabBranchPOSTRepresentation": {
      "properties": {
        "gitlab_integration_id": { "type": "integer", "format": "int64", "description": "" },
        "artifact_id": { "type": "integer", "format": "int64", "description": "" },
        "reference": { "type": "string", "description": "" }
      },
      "required": ["gitlab_integration_id", "artifact_id", "reference"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\GitlabBranchRepresentation": {
      "properties": { "branch_name": { "type": "string", "description": "" } },
      "required": ["branch_name"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\GitlabMergeRequestPOSTRepresentation": {
      "properties": {
        "gitlab_integration_id": { "type": "integer", "format": "int64", "description": "" },
        "artifact_id": { "type": "integer", "format": "int64", "description": "" },
        "source_branch": { "type": "string", "description": "" }
      },
      "required": ["gitlab_integration_id", "artifact_id", "source_branch"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\Group\\GitlabGroupPOSTRepresentation": {
      "properties": {
        "gitlab_server_url": { "type": "string", "description": "" },
        "create_branch_prefix": { "type": "string", "description": "| null $create_branch_prefix" },
        "project_id": { "type": "integer", "format": "int64", "description": "" },
        "gitlab_group_id": { "type": "integer", "format": "int64", "description": "" },
        "gitlab_token": { "type": "string", "description": "" },
        "allow_artifact_closure": { "type": "boolean", "description": "" }
      },
      "required": [
        "gitlab_server_url",
        "project_id",
        "gitlab_group_id",
        "gitlab_token",
        "allow_artifact_closure"
      ]
    },
    "GitlabGroupRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "number_of_integrations": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["id", "number_of_integrations"]
    },
    "Tuleap\\Gitlab\\REST\\v1\\Group\\GitlabGroupPATCHRepresentation": {
      "properties": {
        "create_branch_prefix": { "type": "string", "description": "| null" },
        "allow_artifact_closure": { "type": "boolean", "description": "| null" },
        "gitlab_token": { "type": "string", "description": "| null" }
      }
    },
    "GitlabGroupLinkRepresentation": {
      "properties": {
        "last_synchronization_date": { "type": "string", "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "gitlab_group_id": { "type": "integer", "format": "int64", "description": "" },
        "project_id": { "type": "integer", "format": "int64", "description": "" },
        "name": { "type": "string", "description": "" },
        "full_path": { "type": "string", "description": "" },
        "web_url": { "type": "string", "description": "" },
        "avatar_url": { "type": "string", "description": "" },
        "allow_artifact_closure": { "type": "boolean", "description": "" },
        "create_branch_prefix": { "type": "string", "description": "" }
      },
      "required": [
        "last_synchronization_date",
        "id",
        "gitlab_group_id",
        "project_id",
        "name",
        "full_path",
        "web_url",
        "avatar_url",
        "allow_artifact_closure",
        "create_branch_prefix"
      ]
    },
    "GitlabGroupLinkSynchronizedRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "number_of_integrations": { "type": "integer", "format": "int64", "description": "" }
      },
      "required": ["id", "number_of_integrations"]
    },
    "Tuleap\\ProgramManagement\\REST\\v1\\ProgramIncrementContentPatchRepresentation": {
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\FeatureInvolvedInChangeRepresentation"
          },
          "description": "",
          "maximum": 1
        },
        "order": {
          "$ref": "#\/definitions\/\\Tuleap\\ProgramManagement\\REST\\v1\\FeatureElementToOrderInvolvedInChangeRepresentation",
          "description": "| null $order"
        }
      },
      "required": ["add"]
    },
    "Tuleap\\Timetracking\\REST\\v1\\TimetrackingPOSTRepresentation": {
      "properties": {
        "date_time": { "type": "string", "description": "" },
        "artifact_id": { "type": "integer", "format": "int64", "description": "" },
        "time_value": { "type": "string", "description": "" },
        "step": { "type": "string", "description": "" }
      },
      "required": ["date_time", "artifact_id", "time_value"]
    },
    "Tuleap\\Timetracking\\REST\\v1\\TimetrackingRepresentation": {
      "properties": {
        "artifact": { "type": "string", "description": "" },
        "project": { "type": "string", "description": "" },
        "date": { "type": "string", "description": "" },
        "minutes": { "type": "integer", "format": "int64", "description": "" },
        "id": { "type": "integer", "format": "int64", "description": "" },
        "step": { "type": "string", "description": "" }
      },
      "required": ["artifact", "project", "date", "minutes", "id", "step"]
    },
    "Tuleap\\Timetracking\\REST\\v1\\TimetrackingPUTRepresentation": {
      "properties": {
        "date_time": { "type": "string", "description": "" },
        "time_value": { "type": "string", "description": "" },
        "step": { "type": "string", "description": "" }
      },
      "required": ["date_time", "time_value"]
    },
    "Tuleap\\Timetracking\\REST\\v1\\TimetrackingReportRepresentation": {
      "properties": {
        "id": { "type": "integer", "format": "int64", "description": "" },
        "uri": { "type": "string", "description": "" },
        "trackers": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/TrackerReference" },
          "description": ""
        },
        "invalid_trackers": {
          "type": "array",
          "items": { "$ref": "#\/definitions\/TrackerReference" },
          "description": ""
        }
      },
      "required": ["id", "uri", "trackers", "invalid_trackers"]
    },
    "updateTuleap\\Timetracking\\REST\\v1\\TimetrackingReportResourceModel": {
      "properties": {
        "trackers_id": {
          "type": "array",
          "items": { "type": "integer" },
          "description": "Tracker id to link to report"
        }
      },
      "required": ["trackers_id"]
    }
  },
  "securityDefinitions": {
    "api_access_key": { "type": "apiKey", "in": "header", "name": "X-Auth-AccessKey" },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https:\/\/tuleap.net\/oauth2\/authorize",
      "tokenUrl": "https:\/\/tuleap.net\/oauth2\/token",
      "scopes": {
        "read:project": "Project (read only)",
        "read:user_membership": "Membership in user groups (read only)",
        "openid": "Sign you in",
        "email": "Email address",
        "profile": "User profile",
        "read:tracker": "Tracker (read only)",
        "offline_access": "Offline access",
        "read:mediawiki_standalone": "Mediawiki Standalone (read only)"
      }
    }
  }
}
